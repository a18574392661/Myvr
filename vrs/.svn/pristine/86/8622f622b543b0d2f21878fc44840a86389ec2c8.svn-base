<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.stock.dao.StockInDao">

	<select id="get" resultType="com.bootdo.stock.domain.StockInDO">
		select `id`,`goods_id`,`num`,`price`,`create_time`,`remarks` from stock_in where id = #{value}
	</select>

	<select id="list" resultType="com.bootdo.stock.domain.StockInDO">
		select a.*,e.goods_name goodsName,CONCAT(d.type,' > ',c.type,' > ',b.type) typePath from stock_in a
		left join stock_goods e on a.goods_id=e.id
		left join stock_type b on e.type_id=b.id
		left join stock_type c on b.pid=c.id
		left join stock_type d on c.pid=d.id
        <where>  
  		  <if test="id != null and id != ''"> and a.id = #{id} </if>
  		  <if test="goodsId != null and goodsId != ''"> and a.goods_id = #{goodsId} </if>
  		  <if test="goodsName != null and goodsName != ''"> and e.goods_name like concat('%', #{goodsName},'%') </if>
  		  <if test="typePath != null and typePath != ''"> and e.type_path like concat('%', #{typePath},'%') </if>
  		  <if test="num != null and num != ''"> and a.num = #{num} </if>
  		  <if test="price != null and price != ''"> and a.price = #{price} </if>
  		  <if test="createTime != null and createTime != ''"> and a.create_time = #{createTime} </if>
  		  <if test="startTime != null and startTime != ''"> and a.create_time >= #{startTime} </if>
  		  <if test="endTime != null and endTime != ''"> and a.create_time &lt; #{endTime} </if>
  		  <if test="remarks != null and remarks != ''"> and a.remarks = #{remarks} </if>
  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by a.id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from stock_in a
		left join stock_goods e on a.goods_id=e.id
		left join stock_type b on e.type_id=b.id
		left join stock_type c on b.pid=c.id
		left join stock_type d on c.pid=d.id
        <where>  
  		  <if test="id != null and id != ''"> and a.id = #{id} </if>
  		  <if test="goodsId != null and goodsId != ''"> and a.goods_id = #{goodsId} </if>
  		  <if test="goodsName != null and goodsName != ''"> and e.goods_name like concat('%', #{goodsName},'%') </if>
  		  <if test="typePath != null and typePath != ''"> and e.type_path like concat('%', #{typePath},'%') </if>
  		  <if test="num != null and num != ''"> and a.num = #{num} </if>
  		  <if test="price != null and price != ''"> and a.price = #{price} </if>
  		  <if test="createTime != null and createTime != ''"> and a.create_time = #{createTime} </if>  		  
  		  <if test="startTime != null and startTime != ''"> and a.create_time >= #{startTime} </if>
  		  <if test="endTime != null and endTime != ''"> and a.create_time &lt;= #{endTime} </if>
  		  <if test="remarks != null and remarks != ''"> and a.remarks = #{remarks} </if>
  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.stock.domain.StockInDO">
		insert into stock_in
		(
			`goods_id`, 
			`num`, 
			`price`, 
			`create_time`, 
			`remarks`
		)
		values
		(
			#{goodsId}, 
			#{num}, 
			#{price}, 
			#{createTime}, 
			#{remarks}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.stock.domain.StockInDO">
		update stock_in 
		<set>
			<if test="goodsId != null">`goods_id` = #{goodsId}, </if>
			<if test="num != null">`num` = #{num}, </if>
			<if test="price != null">`price` = #{price}, </if>
			<if test="createTime != null">`create_time` = #{createTime}, </if>
			<if test="remarks != null">`remarks` = #{remarks}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="remove">
		delete from stock_in where id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from stock_in where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>