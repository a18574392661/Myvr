<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.vrs.dao.IpgetCountDao">

	<select id="get" resultType="com.bootdo.vrs.domain.IpgetCountDO">
			SELECT ips.*,p.simg as 'simg',p.`name` as 'pname',p.`code` as 'code' from vrs_ipget_count ips
		left join vrs_pro p
		on ips.proid=p.id where ips.id = #{value}
	</select>

	<select id="list" resultType="com.bootdo.vrs.domain.IpgetCountDO">
				<!--select `id`,`proid`,`count`,`ip` from vrs_ipget_count-->


		SELECT ips.*,p.simg as 'simg',p.`name` as 'pname',p.`code` as 'code' from vrs_ipget_count ips
		left join vrs_pro p
		on ips.proid=p.id

        <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="proid != null and proid != ''"> and proid = #{proid} </if>
		  		  <if test="count != null and count != ''"> and count = #{count} </if>
		  		  <if test="ip != null and ip != ''"> and ip = #{ip} </if>

				<if test="name != null and name != ''"> and (p.name like '%${name}%' or p.code like '%${name}%')</if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                ORDER BY p.sort  desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from vrs_ipget_count
		 <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="proid != null and proid != ''"> and proid = #{proid} </if>
		  		  <if test="count != null and count != ''"> and count = #{count} </if>
		  		  <if test="ip != null and ip != ''"> and ip = #{ip} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.vrs.domain.IpgetCountDO" useGeneratedKeys="true" keyProperty="id">
		insert into vrs_ipget_count
		(
			`proid`, 
			`count`, 
			`ip`
		)
		values
		(
			#{proid}, 
			#{count}, 
			#{ip}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.vrs.domain.IpgetCountDO">
		update vrs_ipget_count 
		<set>
			<if test="proid != null">`proid` = #{proid}, </if>
			<if test="count != null">`count` = #{count}, </if>
			<if test="ip != null">`ip` = #{ip}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="remove">
		delete from vrs_ipget_count where id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from vrs_ipget_count where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>