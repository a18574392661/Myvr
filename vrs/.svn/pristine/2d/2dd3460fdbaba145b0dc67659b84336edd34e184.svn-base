<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.vrs.dao.ImgDetaliesDao">

	<resultMap id="queryImgDetailAll" type="com.bootdo.vrs.domain.ImgDetaliesDO" autoMapping="true">
		<id column="id" property="id"></id>
		<result column="name" property="name"></result>
		<result column="cid" property="cid"></result>
		<result column="status" property="status"></result>
		<result column="createDate" property="createdate"></result>
		<result column="updateDate" property="updatedate"></result>

	</resultMap>

	<resultMap id="queryImgDetailAndClsAll" type="com.bootdo.vrs.domain.ImgDetaliesDO" autoMapping="true" extends="queryImgDetailAll">
			<association property="imgClsDO" javaType="com.bootdo.vrs.domain.ImgClsDO" autoMapping="true">
				<result column="cls.name" property="name"></result>
				<result column="cls.img" property="img"></result>
			</association>
 	</resultMap>

	<select id="get"  resultMap="queryImgDetailAndClsAll">
		<!--select `id`,`name`,`cid`,`status`,`createDate`,`updateDate` from vrs_img_detalies where id = #{value}-->

		select cls.name as 'cls.name',cls.img as 'cls.img',det.`id`,det.`name`,det.`cid`,det.`status`,det.`createDate`,det.`updateDate` from vrs_img_detalies det
		left join  vrs_img_cls cls on det.cid=cls.id
		where det.id=#{value}

	</select>

	<select id="list"  resultMap="queryImgDetailAndClsAll">
		<!--select `id`,`name`,`cid`,`status`,`createDate`,`updateDate` from vrs_img_detalies-->
		select cls.name as 'cls.name',cls.img as 'cls.img',det.`id`,det.`name`,det.`cid`,det.`status`,det.`createDate`,det.`updateDate` from vrs_img_detalies det
		left join  vrs_img_cls cls on det.cid=cls.id

        <where>  
		  		  <if test="id != null and id != ''"> and det.id = #{id} </if>
		  		  <if test="name != null and name != ''"> and det.name like  '%${name}%' </if>
		  		  <if test="cid != null and cid != ''"> and det.cid = #{cid} </if>
		  		  <if test="status != null and status != ''"> and det.status = #{status} </if>
		  		  <if test="createdate != null and createdate != ''"> and det.createDate = #{createdate} </if>
		  		  <if test="updatedate != null and updatedate != ''"> and det.updateDate = #{updatedate} </if>
			and det.status !=0
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by det.id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from vrs_img_detalies
		 <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="name != null and name != ''"> and name = #{name} </if>
		  		  <if test="cid != null and cid != ''"> and cid = #{cid} </if>
		  		  <if test="status != null and status != ''"> and status = #{status} </if>
		  		  <if test="createdate != null and createdate != ''"> and createDate = #{createdate} </if>
		  		  <if test="updatedate != null and updatedate != ''"> and updateDate = #{updatedate} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.vrs.domain.ImgDetaliesDO" useGeneratedKeys="true" keyProperty="id">
		insert into vrs_img_detalies
		(
			`name`, 
			`cid`, 
			`status`, 
			`createDate`, 
			`updateDate`
		)
		values
		(
			#{name}, 
			#{cid}, 
			#{status}, 
			#{createdate}, 
			#{updatedate}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.vrs.domain.ImgDetaliesDO">
		update vrs_img_detalies 
		<set>
			<if test="name != null">`name` = #{name}, </if>
			<if test="cid != null">`cid` = #{cid}, </if>
			<if test="status != null">`status` = #{status}, </if>
			<if test="createdate != null">`createDate` = #{createdate}, </if>
			<if test="updatedate != null">`updateDate` = #{updatedate}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="remove">
		update vrs_img_detalies set status=0 where id = #{value}
	</delete>
	
	<delete id="batchRemove">
	<!--	delete from vrs_img_detalies where id in -->
		update vrs_img_detalies set status =0 where id in
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>