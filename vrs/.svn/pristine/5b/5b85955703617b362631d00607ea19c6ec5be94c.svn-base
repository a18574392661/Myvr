package com.bootdo.ts.controller;

import com.alibaba.druid.sql.ast.statement.SQLIfStatement;
import com.bootdo.common.controller.BaseController;
import com.bootdo.common.utils.R;
import com.bootdo.common.utils.StringUtils;
import com.bootdo.ts.dao.CurrlogDao;
import com.bootdo.ts.dao.UCidsDao;
import com.bootdo.ts.dao.ZwDao;
import com.bootdo.ts.domain.CurrDO;
import com.bootdo.ts.domain.CurrlogDO;
import com.bootdo.ts.domain.UCidsDO;
import com.bootdo.ts.domain.ZwDO;
import com.bootdo.ts.service.CurrlogService;
import com.sun.javafx.geom.PickRay;
import com.sun.tools.internal.ws.processor.model.Model;
import org.redisson.misc.Hash;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.*;

@Controller
@RequestMapping("/h5/curr")
public class CurrH5Contrroller extends BaseController {


    @Autowired
    private CurrlogDao currlogDao;

    @Autowired
    private UCidsDao uCidsDao;

    @Autowired
    private CurrlogService currlogService;

    @Autowired
    private ZwDao zwDao;

    @RequestMapping("/to_yuyue")
    public  String to_yuyue(){
        return "ts/h5/yuyue";
    }


    @RequestMapping("/to_xz")
    public  String to_xz(ModelMap map,String name,String tel){
        List<Map<String,Object>> result=new ArrayList<>();
        //查询可以选择的日期
        List list=dates();
        for (int i = 0; i <list.size(); i++) {
            Map<String,Object> ms=new LinkedHashMap<>();
            String bs=list.get(i)+"";
           String[] sz=bs.split(" ");
            System.out.println(sz[0]+"//"+sz[1]);
            ms.put("rq",sz[0]);
            ms.put("day",sz[1]);
            result.add(ms);
        }
        //查询这个礼拜 对应的1每节课1 对应的日期
       List<Map<String,Object>> resuList=currlogService.queryDayRq(list);
        map.put("name",name);
        map.put("tel",tel);
        map.put("tlist",result);
        map.put("resuList",resuList);
        return "ts/h5/new/index";
    }

    //确定了预约1页面
    @RequestMapping("/yuyue")
    public  String yuyue(ModelMap model,String name,String tel,String cid,String zid)

    {
       model.put("name",name);
        model.put("tel",tel);
      //  model.put("cid",cid);
        model.put("zid",zid);
       CurrlogDO currDO=currlogDao.getCurrCnames(cid);
       if (currDO==null){
           //区域与页面
           return "redirect:/h5/curr/to_xz?name="+name+"&tel="+tel;
       }
       currDO.setCname(currDO.getJname()+":"+currDO.getCname());
       model.put("cur",currDO);
        return "ts/h5/new/yuyue";
    }




    @ResponseBody
    @RequestMapping("/geyisfullYy")
    public  R geyisfullYy(String cid){

        try {
            currlogService.queryKcCount(cid);
        }
        catch (RuntimeException e){
            e.printStackTrace();
            return  R.error(e.getMessage());
        }
        catch (Exception e){
            e.printStackTrace();
            return  R.error("选择失败请刷新再试!");
        }

        return  R.ok();
    }
    //查询本周7天
    private  List dates() {
        List aa=new ArrayList<>();
        try {
            Calendar calendar = Calendar.getInstance();
            while (calendar.get(Calendar.DAY_OF_WEEK) != Calendar.MONDAY) {
            calendar.add(Calendar.DATE, -1);
                }

                for (int i = 0; i < 7; i++) {
                 SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd EE");
                aa.add(dateFormat.format(calendar.getTime()));
                calendar.add(Calendar.DATE, 1);
                  }
        }
        catch (Exception e){
                e.printStackTrace();
        }

        return aa;
}



    //根据日期分组 占时不需要
    @ResponseBody
    @RequestMapping("/getCulls")
    public List<Map<String,Object>> getCulls(){
        List<Map<String,Object>> list=new ArrayList<>();
        List<CurrlogDO> list1=currlogDao.currAllLogs();
        for (CurrlogDO currlogDO : list1) {
            Map<String,Object> map=new HashMap<>();
            map.put("text",currlogDO.getDaydate());
            map.put("value",currlogDO.getDaydate());
            list.add(map);
        }


        return  list;
    }


    //根据日期联动查询课程
    @RequestMapping("/searchKc")
    @ResponseBody
    public  List<Map<String,Object>> searchKc(String dates){
        List<Map<String,Object>> results=new ArrayList<>();
        List<CurrlogDO> list=currlogDao.currAllLogsKc(dates);
        for (CurrlogDO currlogDO : list) {
            Map<String,Object> dx=new HashMap<>();
            dx.put("text",currlogDO.getJname()+":"+currlogDO.getCname());
            dx.put("value",currlogDO.getId());
            results.add(dx);
        }

        return results;
    }

    //确定预约
    @RequestMapping("/qdYuyue")
    @ResponseBody
    public  R searchKc(String cid,String zid,String tel,String uname) {

        try {
            System.out.println(zid+"//"+cid+"//"+tel+"//"+uname);
            //先判断是否已经占用了
            if (StringUtils.isBlank(cid)|| StringUtils.isBlank(tel) || StringUtils.isBlank(uname)) {
                return R.error("请选择完整信息!");
            }

            synchronized(CurrH5Contrroller.class){
                int c = uCidsDao.queryKzw(cid);
                if (c > 0) {
                    return R.error("当前座位已经被预定!");
                }
                //添加
                UCidsDO uCidsDO = new UCidsDO();
                uCidsDO.setCid(Long.parseLong(cid));
                uCidsDO.setCreatedate(new Date());
                uCidsDO.setStatus(1);
                uCidsDO.setTel(tel);
                uCidsDO.setUname(uname);
                uCidsDO.setZid(Long.parseLong(zid));
                int sus=uCidsDao.save(uCidsDO);
                if (sus>0){
                    return  R.ok("预约成功!");
                }
            }

        }
        catch (Exception e){

            e.printStackTrace();
        }

        return R.error("预定失败!");
    }

    //查询当前课程对应的座位
    @RequestMapping("/showzw")
    @ResponseBody
    public  List<ZwDO> showzw(String cid) {
        List<ZwDO> list=null;
        try {

            list=zwDao.queryDqZw(cid);

        }
        catch (Exception e){

            e.printStackTrace();
        }

       return  list;
    }





}
