2020-03-14 19:47:51 -Starting VRApplication on DESKTOP-C6NG46F with PID 13368 (F:\project\javaProject\company\target\classes started by shilic in F:\project\javaProject\company)
2020-03-14 19:47:51 -The following profiles are active: pro
2020-03-14 19:48:00 -init datasource error, url: jdbc:mysql://127.0.0.1:3306/company?useUnicode=true&characterEncoding=utf8
java.sql.SQLException: Access denied for user 'hdfz'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2190)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:148)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:38)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:211)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1454)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1516)
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:734)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1833)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1776)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1704)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:581)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:818)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:724)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:474)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1256)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1105)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:818)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:724)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:474)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1256)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1105)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:818)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:724)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:474)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1256)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1105)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:584)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:91)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:373)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1350)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:760)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:869)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.VRApplication.main(VRApplication.java:21)
2020-03-14 19:48:00 -{dataSource-1} init error
java.sql.SQLException: Access denied for user 'hdfz'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2190)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:148)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:38)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:211)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1454)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1516)
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:734)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1833)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1776)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1704)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:581)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:818)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:724)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:474)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1256)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1105)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:818)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:724)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:474)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1256)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1105)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:818)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:724)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:474)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1256)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1105)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:584)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:91)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:373)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1350)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:760)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:869)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.VRApplication.main(VRApplication.java:21)
2020-03-14 19:48:00 -create connection error, url: jdbc:mysql://127.0.0.1:3306/company?useUnicode=true&characterEncoding=utf8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'hdfz'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2190)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:148)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:38)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:211)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1454)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1516)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2080)
2020-03-14 19:48:00 -create connection error, url: jdbc:mysql://127.0.0.1:3306/company?useUnicode=true&characterEncoding=utf8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'hdfz'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2190)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:148)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:38)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:211)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1454)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1516)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2080)
2020-03-14 19:48:00 -create connection error, url: jdbc:mysql://127.0.0.1:3306/company?useUnicode=true&characterEncoding=utf8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'hdfz'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2190)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:148)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:38)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:211)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1454)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1516)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2080)
2020-03-14 19:48:00 -create connection error, url: jdbc:mysql://127.0.0.1:3306/company?useUnicode=true&characterEncoding=utf8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'hdfz'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2190)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:148)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:38)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:211)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1454)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1516)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2080)
2020-03-14 19:48:00 -create connection error, url: jdbc:mysql://127.0.0.1:3306/company?useUnicode=true&characterEncoding=utf8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'hdfz'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2190)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:148)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:38)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:211)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1454)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1516)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2080)
2020-03-14 19:48:00 -create connection error, url: jdbc:mysql://127.0.0.1:3306/company?useUnicode=true&characterEncoding=utf8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'hdfz'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2190)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:148)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:38)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:211)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1454)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1516)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2080)
2020-03-14 19:48:00 -Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'modelController': Unsatisfied dependency expressed through field 'repositoryService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'repositoryService' defined in class path resource [com/bootdo/activiti/config/ActivitiConfig.class]: Unsatisfied dependency expressed through method 'repositoryService' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'processEngine' defined in class path resource [com/bootdo/activiti/config/ActivitiConfig.class]: Unsatisfied dependency expressed through method 'processEngine' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'processEngineConfiguration' defined in class path resource [com/bootdo/activiti/config/ActivitiConfig.class]: Unsatisfied dependency expressed through method 'processEngineConfiguration' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/bootdo/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is java.sql.SQLException: Access denied for user 'hdfz'@'localhost' (using password: YES)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:587)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:91)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:373)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1350)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:760)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:869)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.VRApplication.main(VRApplication.java:21)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'repositoryService' defined in class path resource [com/bootdo/activiti/config/ActivitiConfig.class]: Unsatisfied dependency expressed through method 'repositoryService' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'processEngine' defined in class path resource [com/bootdo/activiti/config/ActivitiConfig.class]: Unsatisfied dependency expressed through method 'processEngine' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'processEngineConfiguration' defined in class path resource [com/bootdo/activiti/config/ActivitiConfig.class]: Unsatisfied dependency expressed through method 'processEngineConfiguration' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/bootdo/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is java.sql.SQLException: Access denied for user 'hdfz'@'localhost' (using password: YES)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:732)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:474)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1256)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1105)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:584)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'processEngine' defined in class path resource [com/bootdo/activiti/config/ActivitiConfig.class]: Unsatisfied dependency expressed through method 'processEngine' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'processEngineConfiguration' defined in class path resource [com/bootdo/activiti/config/ActivitiConfig.class]: Unsatisfied dependency expressed through method 'processEngineConfiguration' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/bootdo/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is java.sql.SQLException: Access denied for user 'hdfz'@'localhost' (using password: YES)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:732)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:474)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1256)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1105)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:818)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:724)
	... 32 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'processEngineConfiguration' defined in class path resource [com/bootdo/activiti/config/ActivitiConfig.class]: Unsatisfied dependency expressed through method 'processEngineConfiguration' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/bootdo/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is java.sql.SQLException: Access denied for user 'hdfz'@'localhost' (using password: YES)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:732)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:474)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1256)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1105)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:818)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:724)
	... 46 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/bootdo/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is java.sql.SQLException: Access denied for user 'hdfz'@'localhost' (using password: YES)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1708)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:581)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:818)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:724)
	... 60 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'hdfz'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2190)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:148)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:38)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:211)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1454)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1516)
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:734)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1833)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1776)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1704)
	... 71 common frames omitted
2020-03-14 19:48:00 -create connection error, url: jdbc:mysql://127.0.0.1:3306/company?useUnicode=true&characterEncoding=utf8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'hdfz'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2190)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:148)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:38)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:211)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1454)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1516)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2080)
2020-03-14 19:48:00 -create connection error, url: jdbc:mysql://127.0.0.1:3306/company?useUnicode=true&characterEncoding=utf8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'hdfz'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2190)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:148)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:38)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:211)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1454)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1516)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2080)
2020-03-14 19:48:00 -create connection error, url: jdbc:mysql://127.0.0.1:3306/company?useUnicode=true&characterEncoding=utf8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'hdfz'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2190)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:148)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:38)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:211)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1454)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1516)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2080)
2020-03-14 19:48:00 -create connection error, url: jdbc:mysql://127.0.0.1:3306/company?useUnicode=true&characterEncoding=utf8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'hdfz'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2190)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:148)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:38)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:211)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1454)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1516)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2080)
2020-03-14 19:48:00 -create connection error, url: jdbc:mysql://127.0.0.1:3306/company?useUnicode=true&characterEncoding=utf8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'hdfz'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2190)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:148)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:38)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:211)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1454)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1516)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2080)
2020-03-14 19:48:00 -create connection error, url: jdbc:mysql://127.0.0.1:3306/company?useUnicode=true&characterEncoding=utf8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'hdfz'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2190)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:148)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:38)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:211)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1454)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1516)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2080)
2020-03-14 19:48:00 -create connection error, url: jdbc:mysql://127.0.0.1:3306/company?useUnicode=true&characterEncoding=utf8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'hdfz'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2190)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:148)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:38)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:211)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1454)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1516)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2080)
2020-03-14 19:48:00 -create connection error, url: jdbc:mysql://127.0.0.1:3306/company?useUnicode=true&characterEncoding=utf8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'hdfz'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2190)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:148)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:38)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:211)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1454)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1516)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2080)
2020-03-14 19:48:00 -create connection error, url: jdbc:mysql://127.0.0.1:3306/company?useUnicode=true&characterEncoding=utf8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'hdfz'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2190)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:148)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:38)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:211)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1454)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1516)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2080)
2020-03-14 19:48:00 -create connection error, url: jdbc:mysql://127.0.0.1:3306/company?useUnicode=true&characterEncoding=utf8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'hdfz'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2190)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor64.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:148)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:38)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:211)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1454)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1516)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2080)
2020-03-14 19:48:00 -create connection error, url: jdbc:mysql://127.0.0.1:3306/company?useUnicode=true&characterEncoding=utf8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'hdfz'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2190)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor64.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:148)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:38)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:211)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1454)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1516)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2080)
2020-03-14 19:48:00 -create connection error, url: jdbc:mysql://127.0.0.1:3306/company?useUnicode=true&characterEncoding=utf8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'hdfz'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2190)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor64.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:148)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:38)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:211)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1454)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1516)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2080)
2020-03-14 19:48:00 -create connection error, url: jdbc:mysql://127.0.0.1:3306/company?useUnicode=true&characterEncoding=utf8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'hdfz'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2190)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor64.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:148)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:38)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:211)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1454)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1516)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2080)
2020-03-14 19:48:00 -create connection error, url: jdbc:mysql://127.0.0.1:3306/company?useUnicode=true&characterEncoding=utf8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'hdfz'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2190)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor64.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:148)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:38)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:211)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1454)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1516)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2080)
2020-03-14 19:48:00 -create connection error, url: jdbc:mysql://127.0.0.1:3306/company?useUnicode=true&characterEncoding=utf8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'hdfz'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2190)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor64.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:148)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:38)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:211)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1454)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1516)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2080)
2020-03-14 19:48:00 -create connection error, url: jdbc:mysql://127.0.0.1:3306/company?useUnicode=true&characterEncoding=utf8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'hdfz'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2190)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor64.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:148)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:38)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:211)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1454)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1516)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2080)
2020-03-14 19:48:00 -create connection error, url: jdbc:mysql://127.0.0.1:3306/company?useUnicode=true&characterEncoding=utf8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'hdfz'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2190)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor64.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:148)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:38)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:211)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1454)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1516)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2080)
2020-03-14 19:48:00 -create connection error, url: jdbc:mysql://127.0.0.1:3306/company?useUnicode=true&characterEncoding=utf8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'hdfz'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2190)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor64.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:148)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:38)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:211)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1454)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1516)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2080)
2020-03-14 19:48:00 -create connection error, url: jdbc:mysql://127.0.0.1:3306/company?useUnicode=true&characterEncoding=utf8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'hdfz'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2190)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor64.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:148)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:38)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:211)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1454)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1516)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2080)
2020-03-14 19:48:00 -create connection error, url: jdbc:mysql://127.0.0.1:3306/company?useUnicode=true&characterEncoding=utf8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'hdfz'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2190)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor64.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:148)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:38)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:211)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1454)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1516)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2080)
2020-03-14 19:48:00 -create connection error, url: jdbc:mysql://127.0.0.1:3306/company?useUnicode=true&characterEncoding=utf8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'hdfz'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2190)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor64.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:148)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:38)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:211)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1454)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1516)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2080)
2020-03-14 19:48:00 -create connection error, url: jdbc:mysql://127.0.0.1:3306/company?useUnicode=true&characterEncoding=utf8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'hdfz'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2190)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor64.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:148)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:38)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:211)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1454)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1516)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2080)
2020-03-14 19:48:00 -create connection error, url: jdbc:mysql://127.0.0.1:3306/company?useUnicode=true&characterEncoding=utf8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'hdfz'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2190)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor64.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:148)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:38)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:211)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1454)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1516)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2080)
2020-03-14 19:48:00 -create connection error, url: jdbc:mysql://127.0.0.1:3306/company?useUnicode=true&characterEncoding=utf8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'hdfz'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2190)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor64.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:148)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:38)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:211)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1454)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1516)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2080)
2020-03-14 19:48:00 -create connection error, url: jdbc:mysql://127.0.0.1:3306/company?useUnicode=true&characterEncoding=utf8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'hdfz'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2190)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor64.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:148)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:38)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:211)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1454)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1516)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2080)
2020-03-14 19:48:30 -create connection error, url: jdbc:mysql://127.0.0.1:3306/company?useUnicode=true&characterEncoding=utf8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'hdfz'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2190)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor64.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:148)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:38)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:211)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1454)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1516)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2080)
2020-03-14 19:48:36 -Starting VRApplication on DESKTOP-C6NG46F with PID 1164 (F:\project\javaProject\company\target\classes started by shilic in F:\project\javaProject\company)
2020-03-14 19:48:36 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2020-03-14 19:48:36 -The following profiles are active: dev
2020-03-14 19:48:36 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1ae67cad: startup date [Sat Mar 14 19:48:36 CST 2020]; root of context hierarchy
2020-03-14 19:48:38 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-14 19:48:40 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$949d7d87] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-14 19:48:40 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$86f6ac2e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-14 19:48:41 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-14 19:48:41 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/C:/Users/shilic/.m2/repository/net/sf/ehcache/ehcache/2.10.5/ehcache-2.10.5.jar!/ehcache-failsafe.xml
2020-03-14 19:48:41 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-14 19:48:41 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-14 19:48:41 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2020-03-14 19:48:41 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2020-03-14 19:48:41 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-14 19:48:41 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-14 19:48:41 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-14 19:48:41 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-14 19:48:42 -Tomcat initialized with port(s): 8081 (http)
2020-03-14 19:48:42 -Initializing ProtocolHandler ["http-nio-8081"]
2020-03-14 19:48:42 -Starting service [Tomcat]
2020-03-14 19:48:42 -Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-14 19:48:42 -Loaded APR based Apache Tomcat Native library [1.2.16] using APR version [1.6.3].
2020-03-14 19:48:42 -APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2020-03-14 19:48:42 -APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2020-03-14 19:48:43 -OpenSSL successfully initialized [OpenSSL 1.0.2m  2 Nov 2017]
2020-03-14 19:48:43 -Initializing Spring embedded WebApplicationContext
2020-03-14 19:48:43 -Root WebApplicationContext: initialization completed in 7135 ms
2020-03-14 19:48:44 -Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-14 19:48:44 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-03-14 19:48:44 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-03-14 19:48:44 -Mapping filter: 'requestContextFilter' to: [/*]
2020-03-14 19:48:44 -Filter xssFilter was not registered (disabled)
2020-03-14 19:48:44 -Mapping filter: 'webStatFilter' to urls: [/*]
2020-03-14 19:48:44 -Mapping filter: 'corsFilter' to: [/*]
2020-03-14 19:48:44 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2020-03-14 19:48:44 -Servlet statViewServlet mapped to [/druid/*]
2020-03-14 19:48:44 -Servlet dispatcherServlet mapped to [/]
2020-03-14 19:48:45 -{dataSource-1} inited
2020-03-14 19:48:46 -ProcessEngine default created
2020-03-14 19:48:47 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1ae67cad: startup date [Sat Mar 14 19:48:36 CST 2020]; root of context hierarchy
2020-03-14 19:48:48 -Using default implementation for ThreadExecutor
2020-03-14 19:48:48 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-03-14 19:48:48 -Quartz Scheduler v.2.2.1 created.
2020-03-14 19:48:48 -RAMJobStore initialized.
2020-03-14 19:48:48 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2020-03-14 19:48:48 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2020-03-14 19:48:48 -Quartz scheduler version: 2.2.1
2020-03-14 19:48:48 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@680937c9
2020-03-14 19:48:48 -Initializing ExecutorService  'clientInboundChannelExecutor'
2020-03-14 19:48:48 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2020-03-14 19:48:49 -Mapped "{[/activiti/model/{id}],methods=[DELETE]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.remove(java.lang.String)
2020-03-14 19:48:49 -Mapped "{[/activiti/model/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ModelController.list(int,int)
2020-03-14 19:48:49 -Mapped "{[/activiti/model/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.batchRemove(java.lang.String[])
2020-03-14 19:48:49 -Mapped "{[/activiti/model],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ModelController.model()
2020-03-14 19:48:49 -Mapped "{[/activiti/editor/stencilset],methods=[GET],produces=[application/json;charset=utf-8]}" onto public java.lang.String com.bootdo.activiti.controller.ModelController.getStencilset()
2020-03-14 19:48:49 -Mapped "{[/activiti/model/{modelId}/save],methods=[PUT]}" onto public void com.bootdo.activiti.controller.ModelController.saveModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-14 19:48:49 -Mapped "{[/activiti/model/add]}" onto public void com.bootdo.activiti.controller.ModelController.newModel(javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2020-03-14 19:48:49 -Mapped "{[/activiti/model/edit/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.edit(javax.servlet.http.HttpServletResponse,java.lang.String)
2020-03-14 19:48:49 -Mapped "{[/activiti/model/{modelId}/json],methods=[GET]}" onto public com.fasterxml.jackson.databind.node.ObjectNode com.bootdo.activiti.controller.ModelController.getEditorJson(java.lang.String)
2020-03-14 19:48:49 -Mapped "{[/activiti/model/deploy/{id}],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.deploy(java.lang.String) throws java.lang.Exception
2020-03-14 19:48:49 -Mapped "{[/activiti/model/export/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.exportToXml(java.lang.String,javax.servlet.http.HttpServletResponse)
2020-03-14 19:48:49 -Mapped "{[/activiti/process/add],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.add()
2020-03-14 19:48:49 -Mapped "{[/activiti/process/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.remove(java.lang.String)
2020-03-14 19:48:49 -Mapped "{[/activiti/process/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ProcessController.list(int,int)
2020-03-14 19:48:49 -Mapped "{[/activiti/process/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.batchRemove(java.lang.String[])
2020-03-14 19:48:49 -Mapped "{[/activiti/process],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.process()
2020-03-14 19:48:49 -Mapped "{[/activiti/process/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.deploy(java.lang.String,java.lang.String,org.springframework.web.multipart.MultipartFile)
2020-03-14 19:48:49 -Mapped "{[/activiti/process/convertToModel/{procDefId}]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.convertToModel(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.io.UnsupportedEncodingException,javax.xml.stream.XMLStreamException
2020-03-14 19:48:49 -Mapped "{[/activiti/process/resource/read/{xml}/{id}]}" onto public void com.bootdo.activiti.controller.ProcessController.resourceRead(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2020-03-14 19:48:49 -Mapped "{[/act/salary/form],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.add()
2020-03-14 19:48:49 -Mapped "{[/act/salary/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String)
2020-03-14 19:48:49 -Mapped "{[/act/salary/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String[])
2020-03-14 19:48:49 -Mapped "{[/act/salary/update]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.update(com.bootdo.activiti.domain.SalaryDO)
2020-03-14 19:48:49 -Mapped "{[/act/salary/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.SalaryController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:48:49 -Mapped "{[/act/salary/form/{taskId}],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.edit(java.lang.String,org.springframework.ui.Model)
2020-03-14 19:48:49 -Mapped "{[/act/salary/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.saveOrUpdate(com.bootdo.activiti.domain.SalaryDO)
2020-03-14 19:48:49 -Mapped "{[/act/salary],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.Salary()
2020-03-14 19:48:49 -Mapped "{[/activiti/task/form/{procDefId}/{taskId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.form(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2020-03-14 19:48:49 -Mapped "{[/activiti/task/gotoList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.TaskController.list(int,int)
2020-03-14 19:48:49 -Mapped "{[/activiti/task/todoList],methods=[GET]}" onto java.util.List<com.bootdo.activiti.vo.TaskVO> com.bootdo.activiti.controller.TaskController.todoList()
2020-03-14 19:48:49 -Mapped "{[/activiti/task/form/{procDefId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.startForm(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2020-03-14 19:48:49 -Mapped "{[/activiti/task/todo],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.todo()
2020-03-14 19:48:49 -Mapped "{[/activiti/task/trace/photo/{procDefId}/{execId}]}" onto public void com.bootdo.activiti.controller.TaskController.tracePhoto(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2020-03-14 19:48:49 -Mapped "{[/activiti/task/goto],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.gotoTask()
2020-03-14 19:48:49 -Mapped "{[/blog/open/post/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.post(java.lang.Long,org.springframework.ui.Model)
2020-03-14 19:48:49 -Mapped "{[/blog],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.blog()
2020-03-14 19:48:49 -Mapped "{[/blog/open/page/{categories}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.about(java.lang.String,org.springframework.ui.Model)
2020-03-14 19:48:49 -Mapped "{[/blog/open/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.BlogController.opentList(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:48:49 -Mapped "{[/blog/bContent/add],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.add()
2020-03-14 19:48:49 -Mapped "{[/blog/bContent/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long)
2020-03-14 19:48:49 -Mapped "{[/blog/bContent/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long[])
2020-03-14 19:48:49 -Mapped "{[/blog/bContent/update]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.update(com.bootdo.blog.domain.ContentDO)
2020-03-14 19:48:49 -Mapped "{[/blog/bContent/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.ContentController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:48:49 -Mapped "{[/blog/bContent/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.save(com.bootdo.blog.domain.ContentDO)
2020-03-14 19:48:49 -Mapped "{[/blog/bContent/edit/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.edit(java.lang.Long,org.springframework.ui.Model)
2020-03-14 19:48:49 -Mapped "{[/blog/bContent],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.bContent()
2020-03-14 19:48:49 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2020-03-14 19:48:49 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2020-03-14 19:48:49 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2020-03-14 19:48:49 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2020-03-14 19:48:49 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:48:49 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2020-03-14 19:48:49 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2020-03-14 19:48:49 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2020-03-14 19:48:49 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2020-03-14 19:48:49 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2020-03-14 19:48:49 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2020-03-14 19:48:49 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2020-03-14 19:48:49 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2020-03-14 19:48:49 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2020-03-14 19:48:49 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2020-03-14 19:48:49 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:48:49 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2020-03-14 19:48:49 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2020-03-14 19:48:49 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2020-03-14 19:48:49 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2020-03-14 19:48:49 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2020-03-14 19:48:49 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:48:49 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2020-03-14 19:48:49 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2020-03-14 19:48:49 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2020-03-14 19:48:49 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2020-03-14 19:48:49 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2020-03-14 19:48:49 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2020-03-14 19:48:49 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2020-03-14 19:48:49 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2020-03-14 19:48:49 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2020-03-14 19:48:49 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:48:49 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2020-03-14 19:48:49 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2020-03-14 19:48:49 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2020-03-14 19:48:49 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2020-03-14 19:48:49 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2020-03-14 19:48:49 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2020-03-14 19:48:49 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2020-03-14 19:48:49 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:48:49 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2020-03-14 19:48:49 -Mapped "{[/verify/getVerifyCode]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.common.controller.VerifyCodeController.getVerifyCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-14 19:48:49 -Mapped "{[/verify/checkVerifyCode]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.VerifyCodeController.checkVerifyCode(javax.servlet.http.HttpServletRequest)
2020-03-14 19:48:49 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-14 19:48:49 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-14 19:48:49 -Mapped "{[/liuyan/liuyan/add],methods=[GET]}" onto java.lang.String com.bootdo.liuyan.controller.LiuyanController.add()
2020-03-14 19:48:49 -Mapped "{[/liuyan/liuyan/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.liuyan.controller.LiuyanController.remove(java.lang.Long)
2020-03-14 19:48:49 -Mapped "{[/liuyan/liuyan/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.liuyan.controller.LiuyanController.remove(java.lang.Long[])
2020-03-14 19:48:49 -Mapped "{[/liuyan/liuyan/update]}" onto public com.bootdo.common.utils.R com.bootdo.liuyan.controller.LiuyanController.update(com.bootdo.liuyan.domain.LiuyanDO)
2020-03-14 19:48:49 -Mapped "{[/liuyan/liuyan/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.liuyan.controller.LiuyanController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:48:49 -Mapped "{[/liuyan/liuyan/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.liuyan.controller.LiuyanController.save(com.bootdo.liuyan.domain.LiuyanDO)
2020-03-14 19:48:49 -Mapped "{[/liuyan/liuyan/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.liuyan.controller.LiuyanController.edit(java.lang.Long,org.springframework.ui.Model)
2020-03-14 19:48:49 -Mapped "{[/liuyan/liuyan],methods=[GET]}" onto java.lang.String com.bootdo.liuyan.controller.LiuyanController.Liuyan()
2020-03-14 19:48:49 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2020-03-14 19:48:49 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2020-03-14 19:48:49 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2020-03-14 19:48:49 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2020-03-14 19:48:49 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2020-03-14 19:48:49 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:48:49 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2020-03-14 19:48:49 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2020-03-14 19:48:49 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2020-03-14 19:48:49 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2020-03-14 19:48:49 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:48:49 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2020-03-14 19:48:49 -Mapped "{[/stock/stockGoods/add],methods=[GET]}" onto java.lang.String com.bootdo.stock.controller.StockGoodsController.add(org.springframework.ui.Model)
2020-03-14 19:48:49 -Mapped "{[/stock/stockGoods/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.stock.controller.StockGoodsController.remove(java.lang.Integer)
2020-03-14 19:48:49 -Mapped "{[/stock/stockGoods/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.stock.controller.StockGoodsController.remove(java.lang.Integer[])
2020-03-14 19:48:49 -Mapped "{[/stock/stockGoods/update]}" onto public com.bootdo.common.utils.R com.bootdo.stock.controller.StockGoodsController.update(com.bootdo.stock.domain.StockGoodsDO)
2020-03-14 19:48:49 -Mapped "{[/stock/stockGoods/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.stock.controller.StockGoodsController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:48:49 -Mapped "{[/stock/stockGoods/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.stock.controller.StockGoodsController.save(com.bootdo.stock.domain.StockGoodsDO)
2020-03-14 19:48:49 -Mapped "{[/stock/stockGoods/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.stock.controller.StockGoodsController.edit(java.lang.Integer,org.springframework.ui.Model)
2020-03-14 19:48:49 -Mapped "{[/stock/stockGoods],methods=[GET]}" onto java.lang.String com.bootdo.stock.controller.StockGoodsController.StockGoods(org.springframework.ui.Model)
2020-03-14 19:48:49 -Mapped "{[/stock/stockGoods/queryByType],methods=[GET]}" onto public java.util.List<com.bootdo.stock.domain.StockGoodsDO> com.bootdo.stock.controller.StockGoodsController.queryByType(java.lang.Integer)
2020-03-14 19:48:49 -Mapped "{[/stock/stockIn/add],methods=[GET]}" onto java.lang.String com.bootdo.stock.controller.StockInController.add(org.springframework.ui.Model)
2020-03-14 19:48:49 -Mapped "{[/stock/stockIn/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.stock.controller.StockInController.remove(java.lang.Integer)
2020-03-14 19:48:49 -Mapped "{[/stock/stockIn/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.stock.controller.StockInController.remove(java.lang.Integer[])
2020-03-14 19:48:49 -Mapped "{[/stock/stockIn/update]}" onto public com.bootdo.common.utils.R com.bootdo.stock.controller.StockInController.update(com.bootdo.stock.domain.StockInDO)
2020-03-14 19:48:49 -Mapped "{[/stock/stockIn/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.stock.controller.StockInController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:48:49 -Mapped "{[/stock/stockIn/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.stock.controller.StockInController.save(com.bootdo.stock.domain.StockInDO)
2020-03-14 19:48:49 -Mapped "{[/stock/stockIn/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.stock.controller.StockInController.edit(java.lang.Integer,org.springframework.ui.Model)
2020-03-14 19:48:49 -Mapped "{[/stock/stockIn],methods=[GET]}" onto java.lang.String com.bootdo.stock.controller.StockInController.StockIn(org.springframework.ui.Model)
2020-03-14 19:48:49 -Mapped "{[/stock/stockOut/add],methods=[GET]}" onto java.lang.String com.bootdo.stock.controller.StockOutController.add(java.lang.String,org.springframework.ui.Model)
2020-03-14 19:48:49 -Mapped "{[/stock/stockOut/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.stock.controller.StockOutController.remove(java.lang.Integer)
2020-03-14 19:48:49 -Mapped "{[/stock/stockOut/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.stock.controller.StockOutController.remove(java.lang.Integer[])
2020-03-14 19:48:49 -Mapped "{[/stock/stockOut/update]}" onto public com.bootdo.common.utils.R com.bootdo.stock.controller.StockOutController.update(com.bootdo.stock.domain.StockOutDO)
2020-03-14 19:48:49 -Mapped "{[/stock/stockOut/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.stock.controller.StockOutController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:48:49 -Mapped "{[/stock/stockOut/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.stock.controller.StockOutController.save(com.bootdo.stock.domain.StockOutDO)
2020-03-14 19:48:49 -Mapped "{[/stock/stockOut/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.stock.controller.StockOutController.edit(java.lang.Integer,org.springframework.ui.Model)
2020-03-14 19:48:49 -Mapped "{[/stock/stockOut/createOrdercode],methods=[GET]}" onto java.lang.String com.bootdo.stock.controller.StockOutController.createOrdercode()
2020-03-14 19:48:49 -Mapped "{[/stock/stockOut],methods=[GET]}" onto java.lang.String com.bootdo.stock.controller.StockOutController.StockOut(org.springframework.ui.Model)
2020-03-14 19:48:49 -Mapped "{[/stock/report/in],methods=[GET]}" onto java.lang.String com.bootdo.stock.controller.StockReportController.in(org.springframework.ui.Model)
2020-03-14 19:48:49 -Mapped "{[/stock/report/out],methods=[GET]}" onto java.lang.String com.bootdo.stock.controller.StockReportController.out(org.springframework.ui.Model)
2020-03-14 19:48:49 -Mapped "{[/stock/report/inList],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.stock.controller.StockReportController.inList(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:48:49 -Mapped "{[/stock/report/outList],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.stock.controller.StockReportController.outList(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:48:49 -Mapped "{[/stock/stockType/add],methods=[GET]}" onto java.lang.String com.bootdo.stock.controller.StockTypeController.add(org.springframework.ui.Model)
2020-03-14 19:48:49 -Mapped "{[/stock/stockType/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.stock.controller.StockTypeController.remove(java.lang.Integer)
2020-03-14 19:48:49 -Mapped "{[/stock/stockType/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.stock.controller.StockTypeController.remove(java.lang.Integer[])
2020-03-14 19:48:49 -Mapped "{[/stock/stockType/update]}" onto public com.bootdo.common.utils.R com.bootdo.stock.controller.StockTypeController.update(com.bootdo.stock.domain.StockTypeDO)
2020-03-14 19:48:49 -Mapped "{[/stock/stockType/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.stock.controller.StockTypeController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:48:49 -Mapped "{[/stock/stockType/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.stock.controller.StockTypeController.save(com.bootdo.stock.domain.StockTypeDO)
2020-03-14 19:48:49 -Mapped "{[/stock/stockType/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.stock.controller.StockTypeController.edit(java.lang.Integer,org.springframework.ui.Model)
2020-03-14 19:48:49 -Mapped "{[/stock/stockType/queryByPid],methods=[GET]}" onto public java.util.List<com.bootdo.stock.domain.StockTypeDO> com.bootdo.stock.controller.StockTypeController.queryByPid(java.lang.Integer)
2020-03-14 19:48:49 -Mapped "{[/stock/stockType],methods=[GET]}" onto java.lang.String com.bootdo.stock.controller.StockTypeController.StockType(org.springframework.ui.Model)
2020-03-14 19:48:49 -Mapped "{[/company],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CompanyController.user(org.springframework.ui.Model)
2020-03-14 19:48:49 -Mapped "{[/company/add],methods=[POST]}" onto public java.lang.String com.bootdo.system.controller.CompanyController.addLy(com.bootdo.liuyan.domain.LiuyanDO)
2020-03-14 19:48:49 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2020-03-14 19:48:49 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2020-03-14 19:48:49 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2020-03-14 19:48:49 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2020-03-14 19:48:49 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2020-03-14 19:48:49 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2020-03-14 19:48:49 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2020-03-14 19:48:49 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2020-03-14 19:48:49 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2020-03-14 19:48:49 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2020-03-14 19:48:49 -Mapped "{[/krpano/vtour2],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.KrpanoController.vtour2(org.springframework.ui.Model)
2020-03-14 19:48:49 -Mapped "{[/krpano/guide],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.KrpanoController.guide(org.springframework.ui.Model)
2020-03-14 19:48:49 -Mapped "{[/krpano/vtour],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.KrpanoController.vtour(org.springframework.ui.Model)
2020-03-14 19:48:49 -Mapped "{[/krpano/edit],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.KrpanoController.edit(org.springframework.ui.Model)
2020-03-14 19:48:49 -Mapped "{[/krpano],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.KrpanoController.tourDefault(org.springframework.ui.Model)
2020-03-14 19:48:49 -Mapped "{[/krpano/tourmore],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.KrpanoController.tourmore(org.springframework.ui.Model)
2020-03-14 19:48:49 -Mapped "{[/krpano/tour],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.KrpanoController.tour(org.springframework.ui.Model)
2020-03-14 19:48:49 -Mapped "{[/krpano/krpanoself],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.KrpanoController.krpanoself(org.springframework.ui.Model)
2020-03-14 19:48:49 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2020-03-14 19:48:49 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2020-03-14 19:48:49 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-14 19:48:49 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2020-03-14 19:48:49 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2020-03-14 19:48:49 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2020-03-14 19:48:49 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2020-03-14 19:48:49 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2020-03-14 19:48:49 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2020-03-14 19:48:49 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:48:49 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2020-03-14 19:48:49 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2020-03-14 19:48:49 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2020-03-14 19:48:49 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2020-03-14 19:48:49 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2020-03-14 19:48:49 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2020-03-14 19:48:49 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2020-03-14 19:48:49 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2020-03-14 19:48:49 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2020-03-14 19:48:49 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2020-03-14 19:48:49 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2020-03-14 19:48:49 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2020-03-14 19:48:49 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2020-03-14 19:48:49 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2020-03-14 19:48:49 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2020-03-14 19:48:49 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-03-14 19:48:49 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2020-03-14 19:48:49 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:48:49 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2020-03-14 19:48:49 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2020-03-14 19:48:49 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2020-03-14 19:48:49 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:48:49 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2020-03-14 19:48:49 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2020-03-14 19:48:49 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2020-03-14 19:48:49 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2020-03-14 19:48:49 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2020-03-14 19:48:49 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2020-03-14 19:48:49 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2020-03-14 19:48:49 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2020-03-14 19:48:49 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2020-03-14 19:48:49 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2020-03-14 19:48:49 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-14 19:48:49 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2020-03-14 19:48:49 -Mapped "{[/vr/appVersion/add],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.AppVersionController.add()
2020-03-14 19:48:49 -Mapped "{[/vr/appVersion/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.AppVersionController.remove(java.lang.Integer)
2020-03-14 19:48:49 -Mapped "{[/vr/appVersion/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.AppVersionController.remove(java.lang.Integer[])
2020-03-14 19:48:49 -Mapped "{[/vr/appVersion/update]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.AppVersionController.update(com.bootdo.vr.domain.AppVersionDO)
2020-03-14 19:48:49 -Mapped "{[/vr/appVersion/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.vr.controller.AppVersionController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:48:49 -Mapped "{[/vr/appVersion/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.AppVersionController.save(com.bootdo.vr.domain.AppVersionDO)
2020-03-14 19:48:49 -Mapped "{[/vr/appVersion/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.AppVersionController.edit(java.lang.Integer,org.springframework.ui.Model)
2020-03-14 19:48:49 -Mapped "{[/vr/appVersion/uploadapk],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.AppVersionController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2020-03-14 19:48:49 -Mapped "{[/vr/appVersion],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.AppVersionController.AppVersion()
2020-03-14 19:48:49 -Mapped "{[/vr/appVersion/updateApp],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.AppVersionController.updateApp()
2020-03-14 19:48:49 -Mapped "{[/vr/colorType/add],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.ColorTypeController.add(org.springframework.ui.Model)
2020-03-14 19:48:49 -Mapped "{[/vr/colorType/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ColorTypeController.remove(java.lang.Integer[])
2020-03-14 19:48:49 -Mapped "{[/vr/colorType/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ColorTypeController.remove(java.lang.Integer)
2020-03-14 19:48:49 -Mapped "{[/vr/colorType/update]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ColorTypeController.update(com.bootdo.vr.domain.ColorTypeDO)
2020-03-14 19:48:49 -Mapped "{[/vr/colorType/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.vr.controller.ColorTypeController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:48:49 -Mapped "{[/vr/colorType/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ColorTypeController.save(com.bootdo.vr.domain.ColorTypeDO)
2020-03-14 19:48:49 -Mapped "{[/vr/colorType/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.ColorTypeController.edit(java.lang.Integer,org.springframework.ui.Model)
2020-03-14 19:48:49 -Mapped "{[/vr/colorType/productTree],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.vr.controller.ColorTypeController.queryForProductTree(java.lang.String)
2020-03-14 19:48:49 -Mapped "{[/vr/colorType/productTreeByProductId],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.vr.controller.ColorTypeController.productTreeByProductId(java.lang.Integer)
2020-03-14 19:48:49 -Mapped "{[/vr/colorType/productColorIds],methods=[GET]}" onto public java.util.List<com.bootdo.vr.domain.ProductColorsDO> com.bootdo.vr.controller.ColorTypeController.productColorIds(java.lang.Integer)
2020-03-14 19:48:49 -Mapped "{[/vr/colorType],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.ColorTypeController.ColorType(org.springframework.ui.Model)
2020-03-14 19:48:49 -Mapped "{[/vr/colorType/uploadColorLogo],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ColorTypeController.uploadColorLogo(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2020-03-14 19:48:49 -Mapped "{[/vr/colorType/uploadQjt],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ColorTypeController.uploadQjt(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2020-03-14 19:48:49 -Mapped "{[/vr/guide/add],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.GuideController.add()
2020-03-14 19:48:49 -Mapped "{[/vr/guide/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.GuideController.remove(java.lang.Integer)
2020-03-14 19:48:49 -Mapped "{[/vr/guide/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.GuideController.remove(java.lang.Integer[])
2020-03-14 19:48:49 -Mapped "{[/vr/guide/update]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.GuideController.update(com.bootdo.vr.domain.GuideDO)
2020-03-14 19:48:49 -Mapped "{[/vr/guide/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.vr.controller.GuideController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:48:49 -Mapped "{[/vr/guide/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.GuideController.save(com.bootdo.vr.domain.GuideDO)
2020-03-14 19:48:49 -Mapped "{[/vr/guide/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.GuideController.edit(java.lang.Integer,org.springframework.ui.Model)
2020-03-14 19:48:49 -Mapped "{[/vr/guide],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.GuideController.Guide()
2020-03-14 19:48:49 -Mapped "{[/vr/guide/uploadGuideLogo],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.GuideController.uploadColorLogo(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2020-03-14 19:48:49 -Mapped "{[/vr/leftStyle/add2/{topStyleId}],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.LeftStyleController.add(java.lang.Integer,org.springframework.ui.Model)
2020-03-14 19:48:49 -Mapped "{[/vr/leftStyle/add],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.LeftStyleController.add(org.springframework.ui.Model)
2020-03-14 19:48:49 -Mapped "{[/vr/leftStyle/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.LeftStyleController.remove(java.lang.Integer)
2020-03-14 19:48:49 -Mapped "{[/vr/leftStyle/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.LeftStyleController.remove(java.lang.Integer[])
2020-03-14 19:48:49 -Mapped "{[/vr/leftStyle/update]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.LeftStyleController.update(com.bootdo.vr.domain.LeftStyleDO,java.lang.String)
2020-03-14 19:48:49 -Mapped "{[/vr/leftStyle/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.vr.controller.LeftStyleController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:48:49 -Mapped "{[/vr/leftStyle/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.LeftStyleController.save(com.bootdo.vr.domain.LeftStyleDO,java.lang.String)
2020-03-14 19:48:49 -Mapped "{[/vr/leftStyle/edit/{leftId}],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.LeftStyleController.edit(java.lang.Integer,org.springframework.ui.Model)
2020-03-14 19:48:49 -Mapped "{[/vr/leftStyle/queryLeftStyleByTopStyleId],methods=[GET]}" onto public java.util.List<com.bootdo.vr.domain.LeftStyleDO> com.bootdo.vr.controller.LeftStyleController.queryLeftStyleByTopStyleId(java.lang.Integer)
2020-03-14 19:48:49 -Mapped "{[/vr/leftStyle/queryAllTopAndLeftStyles],methods=[GET]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.LeftStyleController.queryAllTopAndLeftStyles()
2020-03-14 19:48:50 -Mapped "{[/vr/leftStyle/queryLeftStyles],methods=[GET]}" onto public java.util.List<com.bootdo.vr.domain.LeftStyleDO> com.bootdo.vr.controller.LeftStyleController.queryLeftStyles(java.lang.Integer)
2020-03-14 19:48:50 -Mapped "{[/vr/leftStyle],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.LeftStyleController.LeftStyle(org.springframework.ui.Model)
2020-03-14 19:48:50 -Mapped "{[/vr/leftStyle/uploadLeftLogo],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.LeftStyleController.uploadPic(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2020-03-14 19:48:50 -Mapped "{[/vr/leftStyle/topleft],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.LeftStyleController.topleft()
2020-03-14 19:48:50 -Mapped "{[/vr/leftStyle/uploadCad],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.LeftStyleController.uploadCad(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2020-03-14 19:48:50 -Mapped "{[/vr/leftStyle/uploadRdt],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.LeftStyleController.uploadRdt(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2020-03-14 19:48:50 -Mapped "{[/vr/leftStyleImgs/add],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.LeftStyleImgsController.add()
2020-03-14 19:48:50 -Mapped "{[/vr/leftStyleImgs/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.LeftStyleImgsController.remove(java.lang.Integer)
2020-03-14 19:48:50 -Mapped "{[/vr/leftStyleImgs/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.LeftStyleImgsController.remove(java.lang.Integer[])
2020-03-14 19:48:50 -Mapped "{[/vr/leftStyleImgs/update]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.LeftStyleImgsController.update(com.bootdo.vr.domain.LeftStyleImgsDO)
2020-03-14 19:48:50 -Mapped "{[/vr/leftStyleImgs/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.vr.controller.LeftStyleImgsController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:48:50 -Mapped "{[/vr/leftStyleImgs/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.LeftStyleImgsController.save(com.bootdo.vr.domain.LeftStyleImgsDO)
2020-03-14 19:48:50 -Mapped "{[/vr/leftStyleImgs/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.LeftStyleImgsController.edit(java.lang.Integer,org.springframework.ui.Model)
2020-03-14 19:48:50 -Mapped "{[/vr/leftStyleImgs/rdtTreeByProductId],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.vr.controller.LeftStyleImgsController.rdtTreeByProductId(java.lang.Integer)
2020-03-14 19:48:50 -Mapped "{[/vr/leftStyleImgs],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.LeftStyleImgsController.LeftStyleImgs()
2020-03-14 19:48:50 -Mapped "{[/vr/productActiveCode/add],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.ProductActiveCodeController.add()
2020-03-14 19:48:50 -Mapped "{[/vr/productActiveCode/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ProductActiveCodeController.remove(java.lang.Integer)
2020-03-14 19:48:50 -Mapped "{[/vr/productActiveCode/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ProductActiveCodeController.remove(java.lang.Integer[])
2020-03-14 19:48:50 -Mapped "{[/vr/productActiveCode/update]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ProductActiveCodeController.update(com.bootdo.vr.domain.ProductActiveCodeDO)
2020-03-14 19:48:50 -Mapped "{[/vr/productActiveCode/list/{productId}],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.vr.controller.ProductActiveCodeController.list(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:48:50 -Mapped "{[/vr/productActiveCode/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ProductActiveCodeController.save(com.bootdo.vr.domain.ProductActiveCodeDO)
2020-03-14 19:48:50 -Mapped "{[/vr/productActiveCode/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.ProductActiveCodeController.edit(java.lang.Integer,org.springframework.ui.Model)
2020-03-14 19:48:50 -Mapped "{[/vr/productActiveCode],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.ProductActiveCodeController.ProductActiveCode()
2020-03-14 19:48:50 -Mapped "{[/vr/productActiveCode/buildActiveCode],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ProductActiveCodeController.buildActiveCode(java.lang.Integer)
2020-03-14 19:48:50 -Mapped "{[/vr/productImgs/add],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.ProductImgsController.add()
2020-03-14 19:48:50 -Mapped "{[/vr/productImgs/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ProductImgsController.remove(java.lang.Integer)
2020-03-14 19:48:50 -Mapped "{[/vr/productImgs/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ProductImgsController.remove(java.lang.Integer[])
2020-03-14 19:48:50 -Mapped "{[/vr/productImgs/update]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ProductImgsController.update(com.bootdo.vr.domain.ProductImgsDO)
2020-03-14 19:48:50 -Mapped "{[/vr/productImgs/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.vr.controller.ProductImgsController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:48:50 -Mapped "{[/vr/productImgs/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ProductImgsController.save(com.bootdo.vr.domain.ProductImgsDO)
2020-03-14 19:48:50 -Mapped "{[/vr/productImgs/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.ProductImgsController.edit(java.lang.Integer,org.springframework.ui.Model)
2020-03-14 19:48:50 -Mapped "{[/vr/productImgs],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.ProductImgsController.ProductImgs()
2020-03-14 19:48:50 -Mapped "{[/vr/productInfo/add/{leftIds}],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.ProductInfoController.add(java.lang.String,org.springframework.ui.Model)
2020-03-14 19:48:50 -Mapped "{[/vr/productInfo/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ProductInfoController.remove(java.lang.Integer)
2020-03-14 19:48:50 -Mapped "{[/vr/productInfo/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ProductInfoController.remove(java.lang.Integer[])
2020-03-14 19:48:50 -Mapped "{[/vr/productInfo/update]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ProductInfoController.update(com.bootdo.vr.domain.ProductInfoDO,java.lang.Integer[])
2020-03-14 19:48:50 -Mapped "{[/vr/productInfo/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.vr.controller.ProductInfoController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:48:50 -Mapped "{[/vr/productInfo/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ProductInfoController.save(com.bootdo.vr.domain.ProductInfoDO,java.lang.Integer[],java.lang.Integer[])
2020-03-14 19:48:50 -Mapped "{[/vr/productInfo/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.ProductInfoController.edit(java.lang.Integer,org.springframework.ui.Model)
2020-03-14 19:48:50 -Mapped "{[/vr/productInfo/productLeftImgIds],methods=[GET]}" onto public java.util.List<com.bootdo.vr.domain.ProductLeftStyleImgsDO> com.bootdo.vr.controller.ProductInfoController.productLeftImgIds(java.lang.Integer)
2020-03-14 19:48:50 -Mapped "{[/vr/productInfo/uploadProductInfo],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ProductInfoController.uploadColorLogo(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2020-03-14 19:48:50 -Mapped "{[/vr/productInfo/lookDetails/{id}],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.ProductInfoController.lookDetails(java.lang.Integer,org.springframework.ui.Model)
2020-03-14 19:48:50 -Mapped "{[/vr/productInfo/updateRdt]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ProductInfoController.updateRdt(com.bootdo.vr.domain.ProductInfoDO,java.lang.Integer[])
2020-03-14 19:48:50 -Mapped "{[/vr/productInfo/productImgIds],methods=[GET]}" onto public java.util.List<com.bootdo.vr.domain.ProductImgsDO> com.bootdo.vr.controller.ProductInfoController.productImgIds(java.lang.Integer)
2020-03-14 19:48:50 -Mapped "{[/vr/productInfo/editProduct],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ProductInfoController.editProduct(java.lang.Integer,java.lang.Integer[])
2020-03-14 19:48:50 -Mapped "{[/vr/productInfo/updateLeftRdt]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ProductInfoController.updateLeftRdt(com.bootdo.vr.domain.ProductInfoDO,java.lang.Integer[])
2020-03-14 19:48:50 -Mapped "{[/vr/productInfo/activeCode/{id}],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.ProductInfoController.activeCode(java.lang.Integer,org.springframework.ui.Model)
2020-03-14 19:48:50 -Mapped "{[/vr/productInfo],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.ProductInfoController.ProductInfo()
2020-03-14 19:48:50 -Mapped "{[/vr/productInfo/editRdt/{id}],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.ProductInfoController.editRdt(java.lang.Integer,org.springframework.ui.Model)
2020-03-14 19:48:50 -Mapped "{[/vr/productLeftStyle/add],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.ProductLeftStyleController.add()
2020-03-14 19:48:50 -Mapped "{[/vr/productLeftStyle/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ProductLeftStyleController.remove(java.lang.Integer)
2020-03-14 19:48:50 -Mapped "{[/vr/productLeftStyle/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ProductLeftStyleController.remove(java.lang.Integer[])
2020-03-14 19:48:50 -Mapped "{[/vr/productLeftStyle/update]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ProductLeftStyleController.update(com.bootdo.vr.domain.ProductLeftStyleDO)
2020-03-14 19:48:50 -Mapped "{[/vr/productLeftStyle/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.vr.controller.ProductLeftStyleController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:48:50 -Mapped "{[/vr/productLeftStyle/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ProductLeftStyleController.save(com.bootdo.vr.domain.ProductLeftStyleDO)
2020-03-14 19:48:50 -Mapped "{[/vr/productLeftStyle/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.ProductLeftStyleController.edit(java.lang.Integer,org.springframework.ui.Model)
2020-03-14 19:48:50 -Mapped "{[/vr/productLeftStyle],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.ProductLeftStyleController.ProductLeftStyle()
2020-03-14 19:48:50 -Mapped "{[/vr/productLeftStyleImgs/add],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.ProductLeftStyleImgsController.add()
2020-03-14 19:48:50 -Mapped "{[/vr/productLeftStyleImgs/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ProductLeftStyleImgsController.remove(java.lang.Integer)
2020-03-14 19:48:50 -Mapped "{[/vr/productLeftStyleImgs/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ProductLeftStyleImgsController.remove(java.lang.Integer[])
2020-03-14 19:48:50 -Mapped "{[/vr/productLeftStyleImgs/update]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ProductLeftStyleImgsController.update(com.bootdo.vr.domain.ProductLeftStyleImgsDO)
2020-03-14 19:48:50 -Mapped "{[/vr/productLeftStyleImgs/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.vr.controller.ProductLeftStyleImgsController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:48:50 -Mapped "{[/vr/productLeftStyleImgs/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ProductLeftStyleImgsController.save(com.bootdo.vr.domain.ProductLeftStyleImgsDO)
2020-03-14 19:48:50 -Mapped "{[/vr/productLeftStyleImgs/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.ProductLeftStyleImgsController.edit(java.lang.Integer,org.springframework.ui.Model)
2020-03-14 19:48:50 -Mapped "{[/vr/productLeftStyleImgs],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.ProductLeftStyleImgsController.ProductLeftStyleImgs()
2020-03-14 19:48:50 -Mapped "{[/vr/romeType/add2/{topStyleId}/{leftStyleId}],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.RomeTypeController.add(java.lang.Integer,java.lang.Integer,org.springframework.ui.Model)
2020-03-14 19:48:50 -Mapped "{[/vr/romeType/add],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.RomeTypeController.add(org.springframework.ui.Model)
2020-03-14 19:48:50 -Mapped "{[/vr/romeType/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.RomeTypeController.remove(java.lang.Integer)
2020-03-14 19:48:50 -Mapped "{[/vr/romeType/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.RomeTypeController.remove(java.lang.Integer[])
2020-03-14 19:48:50 -Mapped "{[/vr/romeType/update]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.RomeTypeController.update(com.bootdo.vr.domain.RomeTypeDO)
2020-03-14 19:48:50 -Mapped "{[/vr/romeType/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.vr.controller.RomeTypeController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:48:50 -Mapped "{[/vr/romeType/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.RomeTypeController.save(com.bootdo.vr.domain.RomeTypeDO)
2020-03-14 19:48:50 -Mapped "{[/vr/romeType/edit/{romeId}],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.RomeTypeController.edit(java.lang.Integer,org.springframework.ui.Model)
2020-03-14 19:48:50 -Mapped "{[/vr/romeType/queryRomeTypeByLeftStyleId],methods=[GET]}" onto public java.util.List<com.bootdo.vr.domain.RomeTypeDO> com.bootdo.vr.controller.RomeTypeController.queryRomeTypeByLeftStyleId(java.lang.Integer)
2020-03-14 19:48:50 -Mapped "{[/vr/romeType/uploadImgs],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.RomeTypeController.uploadCad(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2020-03-14 19:48:50 -Mapped "{[/vr/romeType],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.RomeTypeController.RomeType(org.springframework.ui.Model)
2020-03-14 19:48:50 -Mapped "{[/vr/romeType/queryRomeStyles],methods=[GET]}" onto public java.util.List<com.bootdo.vr.domain.RomeTypeDO> com.bootdo.vr.controller.RomeTypeController.queryRomeStyles(java.lang.Integer)
2020-03-14 19:48:50 -Mapped "{[/vr/roomTypeImgs/add],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.RoomTypeImgsController.add()
2020-03-14 19:48:50 -Mapped "{[/vr/roomTypeImgs/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.RoomTypeImgsController.remove(java.lang.Integer)
2020-03-14 19:48:50 -Mapped "{[/vr/roomTypeImgs/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.RoomTypeImgsController.remove(java.lang.Integer[])
2020-03-14 19:48:50 -Mapped "{[/vr/roomTypeImgs/update]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.RoomTypeImgsController.update(com.bootdo.vr.domain.RoomTypeImgsDO)
2020-03-14 19:48:50 -Mapped "{[/vr/roomTypeImgs/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.vr.controller.RoomTypeImgsController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:48:50 -Mapped "{[/vr/roomTypeImgs/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.RoomTypeImgsController.save(com.bootdo.vr.domain.RoomTypeImgsDO)
2020-03-14 19:48:50 -Mapped "{[/vr/roomTypeImgs/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.RoomTypeImgsController.edit(java.lang.Integer,org.springframework.ui.Model)
2020-03-14 19:48:50 -Mapped "{[/vr/roomTypeImgs/rdtTreeByProductId],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.vr.controller.RoomTypeImgsController.rdtTreeByProductId(java.lang.Integer)
2020-03-14 19:48:50 -Mapped "{[/vr/roomTypeImgs],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.RoomTypeImgsController.RoomTypeImgs()
2020-03-14 19:48:50 -Mapped "{[/vr/topStyle/add],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.TopStyleController.add()
2020-03-14 19:48:50 -Mapped "{[/vr/topStyle/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.TopStyleController.remove(java.lang.Integer)
2020-03-14 19:48:50 -Mapped "{[/vr/topStyle/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.TopStyleController.remove(java.lang.Integer[])
2020-03-14 19:48:50 -Mapped "{[/vr/topStyle/update]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.TopStyleController.update(com.bootdo.vr.domain.TopStyleDO)
2020-03-14 19:48:50 -Mapped "{[/vr/topStyle/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.vr.controller.TopStyleController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:48:50 -Mapped "{[/vr/topStyle/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.TopStyleController.save(com.bootdo.vr.domain.TopStyleDO)
2020-03-14 19:48:50 -Mapped "{[/vr/topStyle/edit/{topId}],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.TopStyleController.edit(java.lang.Integer,org.springframework.ui.Model)
2020-03-14 19:48:50 -Mapped "{[/vr/topStyle/uploadBigLog],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.TopStyleController.uploadPic(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2020-03-14 19:48:50 -Mapped "{[/vr/topStyle],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.TopStyleController.TopStyle()
2020-03-14 19:48:50 -Mapped "{[/vr/all],methods=[GET]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.VrDataController.list(java.lang.String,java.lang.String)
2020-03-14 19:48:50 -Mapped "{[/vr/version],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.vr.controller.VrDataController.version(java.lang.String,java.lang.String)
2020-03-14 19:48:50 -Mapped "{[/vr/guides],methods=[GET]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.VrDataController.guides()
2020-03-14 19:48:50 -Mapped "{[/vr/down],methods=[GET]}" onto public java.lang.String com.bootdo.vr.controller.VrDataController.appdown(org.springframework.ui.Model) throws java.lang.Exception
2020-03-14 19:48:50 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-14 19:48:50 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2020-03-14 19:48:50 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2020-03-14 19:48:50 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2020-03-14 19:48:50 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2020-03-14 19:48:50 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2020-03-14 19:48:50 -Initializing ExecutorService  'brokerChannelExecutor'
2020-03-14 19:48:51 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-14 19:48:51 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1ae67cad: startup date [Sat Mar 14 19:48:36 CST 2020]; root of context hierarchy
2020-03-14 19:48:51 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-14 19:48:51 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-14 19:48:51 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-14 19:48:51 -Detected @ExceptionHandler methods in BDExceptionHandler
2020-03-14 19:48:51 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2020-03-14 19:48:52 -Registering beans for JMX exposure on startup
2020-03-14 19:48:52 -Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-14 19:48:52 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2020-03-14 19:48:52 -Starting beans in phase 2147483647
2020-03-14 19:48:52 -Context refreshed
2020-03-14 19:48:52 -Found 1 custom documentation plugin(s)
2020-03-14 19:48:52 -Scanning for api listing references
2020-03-14 19:48:53 -Generating unique operation named: removeUsingPOST_1
2020-03-14 19:48:53 -Generating unique operation named: addUsingGET_1
2020-03-14 19:48:53 -Generating unique operation named: editUsingGET_1
2020-03-14 19:48:53 -Generating unique operation named: listUsingGET_1
2020-03-14 19:48:53 -Generating unique operation named: removeUsingPOST_2
2020-03-14 19:48:53 -Generating unique operation named: removeUsingPOST_3
2020-03-14 19:48:53 -Generating unique operation named: saveUsingPOST_1
2020-03-14 19:48:53 -Generating unique operation named: updateUsingGET_1
2020-03-14 19:48:53 -Generating unique operation named: updateUsingHEAD_1
2020-03-14 19:48:53 -Generating unique operation named: updateUsingPOST_1
2020-03-14 19:48:53 -Generating unique operation named: updateUsingPUT_1
2020-03-14 19:48:53 -Generating unique operation named: updateUsingPATCH_1
2020-03-14 19:48:53 -Generating unique operation named: updateUsingDELETE_1
2020-03-14 19:48:53 -Generating unique operation named: updateUsingOPTIONS_1
2020-03-14 19:48:53 -Generating unique operation named: updateUsingTRACE_1
2020-03-14 19:48:53 -Generating unique operation named: addUsingGET_2
2020-03-14 19:48:53 -Generating unique operation named: editUsingGET_2
2020-03-14 19:48:53 -Generating unique operation named: listUsingGET_2
2020-03-14 19:48:53 -Generating unique operation named: removeUsingPOST_4
2020-03-14 19:48:53 -Generating unique operation named: removeUsingPOST_5
2020-03-14 19:48:53 -Generating unique operation named: saveUsingPOST_2
2020-03-14 19:48:53 -Generating unique operation named: updateUsingGET_2
2020-03-14 19:48:53 -Generating unique operation named: updateUsingHEAD_2
2020-03-14 19:48:53 -Generating unique operation named: updateUsingPOST_2
2020-03-14 19:48:53 -Generating unique operation named: updateUsingPUT_2
2020-03-14 19:48:53 -Generating unique operation named: updateUsingPATCH_2
2020-03-14 19:48:53 -Generating unique operation named: updateUsingDELETE_2
2020-03-14 19:48:53 -Generating unique operation named: updateUsingOPTIONS_2
2020-03-14 19:48:53 -Generating unique operation named: updateUsingTRACE_2
2020-03-14 19:48:53 -Generating unique operation named: addUsingGET_3
2020-03-14 19:48:53 -Generating unique operation named: editUsingGET_3
2020-03-14 19:48:53 -Generating unique operation named: listUsingGET_3
2020-03-14 19:48:53 -Generating unique operation named: removeUsingPOST_6
2020-03-14 19:48:53 -Generating unique operation named: removeUsingPOST_7
2020-03-14 19:48:53 -Generating unique operation named: saveUsingPOST_3
2020-03-14 19:48:53 -Generating unique operation named: updateUsingGET_3
2020-03-14 19:48:53 -Generating unique operation named: updateUsingHEAD_3
2020-03-14 19:48:53 -Generating unique operation named: updateUsingPOST_3
2020-03-14 19:48:53 -Generating unique operation named: updateUsingPUT_3
2020-03-14 19:48:53 -Generating unique operation named: updateUsingPATCH_3
2020-03-14 19:48:53 -Generating unique operation named: updateUsingDELETE_3
2020-03-14 19:48:53 -Generating unique operation named: updateUsingOPTIONS_3
2020-03-14 19:48:53 -Generating unique operation named: updateUsingTRACE_3
2020-03-14 19:48:53 -Generating unique operation named: addUsingGET_4
2020-03-14 19:48:53 -Generating unique operation named: editUsingGET_4
2020-03-14 19:48:53 -Generating unique operation named: listUsingGET_4
2020-03-14 19:48:53 -Generating unique operation named: removeUsingPOST_8
2020-03-14 19:48:53 -Generating unique operation named: removeUsingPOST_9
2020-03-14 19:48:53 -Generating unique operation named: saveUsingPOST_4
2020-03-14 19:48:53 -Generating unique operation named: updateUsingGET_4
2020-03-14 19:48:53 -Generating unique operation named: updateUsingHEAD_4
2020-03-14 19:48:53 -Generating unique operation named: updateUsingPOST_4
2020-03-14 19:48:53 -Generating unique operation named: updateUsingPUT_4
2020-03-14 19:48:53 -Generating unique operation named: updateUsingPATCH_4
2020-03-14 19:48:53 -Generating unique operation named: updateUsingDELETE_4
2020-03-14 19:48:53 -Generating unique operation named: updateUsingOPTIONS_4
2020-03-14 19:48:53 -Generating unique operation named: updateUsingTRACE_4
2020-03-14 19:48:53 -Generating unique operation named: addUsingGET_5
2020-03-14 19:48:53 -Generating unique operation named: editUsingGET_5
2020-03-14 19:48:53 -Generating unique operation named: listUsingGET_5
2020-03-14 19:48:53 -Generating unique operation named: removeUsingPOST_10
2020-03-14 19:48:53 -Generating unique operation named: removeUsingPOST_11
2020-03-14 19:48:53 -Generating unique operation named: saveUsingPOST_5
2020-03-14 19:48:53 -Generating unique operation named: updateUsingGET_5
2020-03-14 19:48:53 -Generating unique operation named: updateUsingHEAD_5
2020-03-14 19:48:53 -Generating unique operation named: updateUsingPOST_5
2020-03-14 19:48:53 -Generating unique operation named: updateUsingPUT_5
2020-03-14 19:48:53 -Generating unique operation named: updateUsingPATCH_5
2020-03-14 19:48:53 -Generating unique operation named: updateUsingDELETE_5
2020-03-14 19:48:53 -Generating unique operation named: updateUsingOPTIONS_5
2020-03-14 19:48:53 -Generating unique operation named: updateUsingTRACE_5
2020-03-14 19:48:53 -Generating unique operation named: uploadUsingPOST_1
2020-03-14 19:48:53 -Generating unique operation named: editUsingGET_6
2020-03-14 19:48:53 -Generating unique operation named: listUsingGET_6
2020-03-14 19:48:53 -Generating unique operation named: updateUsingPOST_6
2020-03-14 19:48:53 -Generating unique operation named: addUsingGET_6
2020-03-14 19:48:53 -Generating unique operation named: editUsingGET_7
2020-03-14 19:48:53 -Generating unique operation named: listUsingGET_7
2020-03-14 19:48:53 -Generating unique operation named: removeUsingPOST_12
2020-03-14 19:48:53 -Generating unique operation named: removeUsingPOST_13
2020-03-14 19:48:53 -Generating unique operation named: saveUsingPOST_6
2020-03-14 19:48:53 -Generating unique operation named: updateUsingGET_6
2020-03-14 19:48:53 -Generating unique operation named: updateUsingHEAD_6
2020-03-14 19:48:53 -Generating unique operation named: updateUsingPOST_7
2020-03-14 19:48:53 -Generating unique operation named: updateUsingPUT_6
2020-03-14 19:48:53 -Generating unique operation named: updateUsingPATCH_6
2020-03-14 19:48:53 -Generating unique operation named: updateUsingDELETE_6
2020-03-14 19:48:53 -Generating unique operation named: updateUsingOPTIONS_6
2020-03-14 19:48:53 -Generating unique operation named: updateUsingTRACE_6
2020-03-14 19:48:53 -Generating unique operation named: uploadColorLogoUsingPOST_1
2020-03-14 19:48:53 -Generating unique operation named: addUsingGET_7
2020-03-14 19:48:53 -Generating unique operation named: editUsingGET_8
2020-03-14 19:48:53 -Generating unique operation named: infoUsingGET_1
2020-03-14 19:48:53 -Generating unique operation named: infoUsingHEAD_1
2020-03-14 19:48:53 -Generating unique operation named: infoUsingPOST_1
2020-03-14 19:48:53 -Generating unique operation named: infoUsingPUT_1
2020-03-14 19:48:53 -Generating unique operation named: infoUsingPATCH_1
2020-03-14 19:48:53 -Generating unique operation named: infoUsingDELETE_1
2020-03-14 19:48:53 -Generating unique operation named: infoUsingOPTIONS_1
2020-03-14 19:48:53 -Generating unique operation named: infoUsingTRACE_1
2020-03-14 19:48:53 -Generating unique operation named: listUsingGET_8
2020-03-14 19:48:53 -Generating unique operation named: removeUsingPOST_14
2020-03-14 19:48:53 -Generating unique operation named: removeUsingPOST_15
2020-03-14 19:48:53 -Generating unique operation named: saveUsingPOST_7
2020-03-14 19:48:53 -Generating unique operation named: updateUsingPOST_8
2020-03-14 19:48:53 -Generating unique operation named: editUsingGET_9
2020-03-14 19:48:53 -Generating unique operation named: addUsingGET_8
2020-03-14 19:48:53 -Generating unique operation named: addUsingGET_9
2020-03-14 19:48:53 -Generating unique operation named: editUsingGET_10
2020-03-14 19:48:53 -Generating unique operation named: listUsingGET_9
2020-03-14 19:48:54 -Generating unique operation named: removeUsingPOST_16
2020-03-14 19:48:54 -Generating unique operation named: removeUsingPOST_17
2020-03-14 19:48:54 -Generating unique operation named: saveUsingPOST_8
2020-03-14 19:48:54 -Generating unique operation named: updateUsingGET_7
2020-03-14 19:48:54 -Generating unique operation named: updateUsingHEAD_7
2020-03-14 19:48:54 -Generating unique operation named: updateUsingPOST_9
2020-03-14 19:48:54 -Generating unique operation named: updateUsingPUT_7
2020-03-14 19:48:54 -Generating unique operation named: updateUsingPATCH_7
2020-03-14 19:48:54 -Generating unique operation named: updateUsingDELETE_7
2020-03-14 19:48:54 -Generating unique operation named: updateUsingOPTIONS_7
2020-03-14 19:48:54 -Generating unique operation named: updateUsingTRACE_7
2020-03-14 19:48:54 -Generating unique operation named: addUsingGET_10
2020-03-14 19:48:54 -Generating unique operation named: editUsingGET_11
2020-03-14 19:48:54 -Generating unique operation named: listUsingGET_10
2020-03-14 19:48:54 -Generating unique operation named: removeUsingPOST_18
2020-03-14 19:48:54 -Generating unique operation named: removeUsingPOST_19
2020-03-14 19:48:54 -Generating unique operation named: saveUsingPOST_9
2020-03-14 19:48:54 -Generating unique operation named: updateUsingGET_8
2020-03-14 19:48:54 -Generating unique operation named: updateUsingHEAD_8
2020-03-14 19:48:54 -Generating unique operation named: updateUsingPOST_10
2020-03-14 19:48:54 -Generating unique operation named: updateUsingPUT_8
2020-03-14 19:48:54 -Generating unique operation named: updateUsingPATCH_8
2020-03-14 19:48:54 -Generating unique operation named: updateUsingDELETE_8
2020-03-14 19:48:54 -Generating unique operation named: updateUsingOPTIONS_8
2020-03-14 19:48:54 -Generating unique operation named: updateUsingTRACE_8
2020-03-14 19:48:54 -Generating unique operation named: addUsingGET_11
2020-03-14 19:48:54 -Generating unique operation named: editUsingGET_12
2020-03-14 19:48:54 -Generating unique operation named: listUsingGET_11
2020-03-14 19:48:54 -Generating unique operation named: removeUsingPOST_20
2020-03-14 19:48:54 -Generating unique operation named: removeUsingPOST_21
2020-03-14 19:48:54 -Generating unique operation named: saveUsingPOST_10
2020-03-14 19:48:54 -Generating unique operation named: updateUsingGET_9
2020-03-14 19:48:54 -Generating unique operation named: updateUsingHEAD_9
2020-03-14 19:48:54 -Generating unique operation named: updateUsingPOST_11
2020-03-14 19:48:54 -Generating unique operation named: updateUsingPUT_9
2020-03-14 19:48:54 -Generating unique operation named: updateUsingPATCH_9
2020-03-14 19:48:54 -Generating unique operation named: updateUsingDELETE_9
2020-03-14 19:48:54 -Generating unique operation named: updateUsingOPTIONS_9
2020-03-14 19:48:54 -Generating unique operation named: updateUsingTRACE_9
2020-03-14 19:48:54 -Generating unique operation named: listUsingGET_12
2020-03-14 19:48:54 -Generating unique operation named: removeUsingPOST_22
2020-03-14 19:48:54 -Generating unique operation named: welcomeUsingGET_1
2020-03-14 19:48:54 -Generating unique operation named: addUsingGET_12
2020-03-14 19:48:54 -Generating unique operation named: editUsingGET_13
2020-03-14 19:48:54 -Generating unique operation named: listUsingGET_13
2020-03-14 19:48:54 -Generating unique operation named: removeUsingPOST_23
2020-03-14 19:48:54 -Generating unique operation named: saveUsingPOST_11
2020-03-14 19:48:54 -Generating unique operation named: treeUsingGET_1
2020-03-14 19:48:54 -Generating unique operation named: treeUsingGET_2
2020-03-14 19:48:54 -Generating unique operation named: updateUsingPOST_12
2020-03-14 19:48:54 -Generating unique operation named: batchRemoveUsingPOST_1
2020-03-14 19:48:54 -Generating unique operation named: editUsingGET_14
2020-03-14 19:48:54 -Generating unique operation named: listUsingGET_14
2020-03-14 19:48:54 -Generating unique operation named: addUsingGET_13
2020-03-14 19:48:54 -Generating unique operation named: editUsingGET_15
2020-03-14 19:48:54 -Generating unique operation named: listUsingGET_15
2020-03-14 19:48:54 -Generating unique operation named: removeUsingPOST_24
2020-03-14 19:48:54 -Generating unique operation named: removeUsingPOST_25
2020-03-14 19:48:54 -Generating unique operation named: saveUsingPOST_12
2020-03-14 19:48:54 -Generating unique operation named: updateUsingGET_10
2020-03-14 19:48:54 -Generating unique operation named: updateUsingHEAD_10
2020-03-14 19:48:54 -Generating unique operation named: updateUsingPOST_13
2020-03-14 19:48:54 -Generating unique operation named: updateUsingPUT_10
2020-03-14 19:48:54 -Generating unique operation named: updateUsingPATCH_10
2020-03-14 19:48:54 -Generating unique operation named: updateUsingDELETE_10
2020-03-14 19:48:54 -Generating unique operation named: updateUsingOPTIONS_10
2020-03-14 19:48:54 -Generating unique operation named: updateUsingTRACE_10
2020-03-14 19:48:54 -Generating unique operation named: addUsingGET_14
2020-03-14 19:48:54 -Generating unique operation named: batchRemoveUsingPOST_2
2020-03-14 19:48:54 -Generating unique operation named: deployUsingPOST_1
2020-03-14 19:48:54 -Generating unique operation named: listUsingGET_16
2020-03-14 19:48:54 -Generating unique operation named: removeUsingPOST_26
2020-03-14 19:48:54 -Generating unique operation named: addUsingGET_15
2020-03-14 19:48:54 -Generating unique operation named: editUsingGET_16
2020-03-14 19:48:54 -Generating unique operation named: listUsingGET_17
2020-03-14 19:48:54 -Generating unique operation named: removeUsingPOST_27
2020-03-14 19:48:54 -Generating unique operation named: removeUsingPOST_28
2020-03-14 19:48:54 -Generating unique operation named: saveUsingPOST_13
2020-03-14 19:48:54 -Generating unique operation named: updateUsingGET_11
2020-03-14 19:48:54 -Generating unique operation named: updateUsingHEAD_11
2020-03-14 19:48:54 -Generating unique operation named: updateUsingPOST_14
2020-03-14 19:48:54 -Generating unique operation named: updateUsingPUT_11
2020-03-14 19:48:54 -Generating unique operation named: updateUsingPATCH_11
2020-03-14 19:48:54 -Generating unique operation named: updateUsingDELETE_11
2020-03-14 19:48:54 -Generating unique operation named: updateUsingOPTIONS_11
2020-03-14 19:48:54 -Generating unique operation named: updateUsingTRACE_11
2020-03-14 19:48:54 -Generating unique operation named: addUsingGET_16
2020-03-14 19:48:54 -Generating unique operation named: editUsingGET_17
2020-03-14 19:48:54 -Generating unique operation named: listUsingGET_18
2020-03-14 19:48:54 -Generating unique operation named: removeUsingPOST_29
2020-03-14 19:48:54 -Generating unique operation named: removeUsingPOST_30
2020-03-14 19:48:54 -Generating unique operation named: saveUsingPOST_14
2020-03-14 19:48:54 -Generating unique operation named: updateUsingGET_12
2020-03-14 19:48:54 -Generating unique operation named: updateUsingHEAD_12
2020-03-14 19:48:54 -Generating unique operation named: updateUsingPOST_15
2020-03-14 19:48:54 -Generating unique operation named: updateUsingPUT_12
2020-03-14 19:48:54 -Generating unique operation named: updateUsingPATCH_12
2020-03-14 19:48:54 -Generating unique operation named: updateUsingDELETE_12
2020-03-14 19:48:54 -Generating unique operation named: updateUsingOPTIONS_12
2020-03-14 19:48:54 -Generating unique operation named: updateUsingTRACE_12
2020-03-14 19:48:54 -Generating unique operation named: addUsingGET_17
2020-03-14 19:48:54 -Generating unique operation named: editUsingGET_18
2020-03-14 19:48:54 -Generating unique operation named: listUsingGET_19
2020-03-14 19:48:54 -Generating unique operation named: removeUsingPOST_31
2020-03-14 19:48:54 -Generating unique operation named: removeUsingPOST_32
2020-03-14 19:48:54 -Generating unique operation named: saveUsingPOST_15
2020-03-14 19:48:55 -Generating unique operation named: updateUsingGET_13
2020-03-14 19:48:55 -Generating unique operation named: updateUsingHEAD_13
2020-03-14 19:48:55 -Generating unique operation named: updateUsingPOST_16
2020-03-14 19:48:55 -Generating unique operation named: updateUsingPUT_13
2020-03-14 19:48:55 -Generating unique operation named: updateUsingPATCH_13
2020-03-14 19:48:55 -Generating unique operation named: updateUsingDELETE_13
2020-03-14 19:48:55 -Generating unique operation named: updateUsingOPTIONS_13
2020-03-14 19:48:55 -Generating unique operation named: updateUsingTRACE_13
2020-03-14 19:48:55 -Generating unique operation named: uploadColorLogoUsingPOST_2
2020-03-14 19:48:55 -Generating unique operation named: addUsingGET_18
2020-03-14 19:48:55 -Generating unique operation named: editUsingGET_19
2020-03-14 19:48:55 -Generating unique operation named: listUsingGET_20
2020-03-14 19:48:55 -Generating unique operation named: removeUsingPOST_33
2020-03-14 19:48:55 -Generating unique operation named: removeUsingPOST_34
2020-03-14 19:48:55 -Generating unique operation named: saveUsingPOST_16
2020-03-14 19:48:55 -Generating unique operation named: updateUsingGET_14
2020-03-14 19:48:55 -Generating unique operation named: updateUsingHEAD_14
2020-03-14 19:48:55 -Generating unique operation named: updateUsingPOST_17
2020-03-14 19:48:55 -Generating unique operation named: updateUsingPUT_14
2020-03-14 19:48:55 -Generating unique operation named: updateUsingPATCH_14
2020-03-14 19:48:55 -Generating unique operation named: updateUsingDELETE_14
2020-03-14 19:48:55 -Generating unique operation named: updateUsingOPTIONS_14
2020-03-14 19:48:55 -Generating unique operation named: updateUsingTRACE_14
2020-03-14 19:48:55 -Generating unique operation named: addUsingGET_19
2020-03-14 19:48:55 -Generating unique operation named: editUsingGET_20
2020-03-14 19:48:55 -Generating unique operation named: listUsingGET_21
2020-03-14 19:48:55 -Generating unique operation named: removeUsingPOST_35
2020-03-14 19:48:55 -Generating unique operation named: removeUsingPOST_36
2020-03-14 19:48:55 -Generating unique operation named: saveUsingPOST_17
2020-03-14 19:48:55 -Generating unique operation named: updateUsingGET_15
2020-03-14 19:48:55 -Generating unique operation named: updateUsingHEAD_15
2020-03-14 19:48:55 -Generating unique operation named: updateUsingPOST_18
2020-03-14 19:48:55 -Generating unique operation named: updateUsingPUT_15
2020-03-14 19:48:55 -Generating unique operation named: updateUsingPATCH_15
2020-03-14 19:48:55 -Generating unique operation named: updateUsingDELETE_15
2020-03-14 19:48:55 -Generating unique operation named: updateUsingOPTIONS_15
2020-03-14 19:48:55 -Generating unique operation named: updateUsingTRACE_15
2020-03-14 19:48:55 -Generating unique operation named: addUsingGET_20
2020-03-14 19:48:55 -Generating unique operation named: batchRemoveUsingPOST_3
2020-03-14 19:48:55 -Generating unique operation named: editUsingGET_21
2020-03-14 19:48:55 -Generating unique operation named: listUsingGET_22
2020-03-14 19:48:55 -Generating unique operation named: saveUsingPOST_18
2020-03-14 19:48:55 -Generating unique operation named: saveUsingPOST_19
2020-03-14 19:48:55 -Generating unique operation named: updateUsingPOST_19
2020-03-14 19:48:55 -Generating unique operation named: addUsingGET_21
2020-03-14 19:48:55 -Generating unique operation named: addUsingGET_22
2020-03-14 19:48:55 -Generating unique operation named: editUsingGET_22
2020-03-14 19:48:55 -Generating unique operation named: listUsingGET_23
2020-03-14 19:48:55 -Generating unique operation named: removeUsingPOST_37
2020-03-14 19:48:55 -Generating unique operation named: removeUsingPOST_38
2020-03-14 19:48:55 -Generating unique operation named: saveUsingPOST_20
2020-03-14 19:48:55 -Generating unique operation named: updateUsingGET_16
2020-03-14 19:48:55 -Generating unique operation named: updateUsingHEAD_16
2020-03-14 19:48:55 -Generating unique operation named: updateUsingPOST_20
2020-03-14 19:48:55 -Generating unique operation named: updateUsingPUT_16
2020-03-14 19:48:55 -Generating unique operation named: updateUsingPATCH_16
2020-03-14 19:48:55 -Generating unique operation named: updateUsingDELETE_16
2020-03-14 19:48:55 -Generating unique operation named: updateUsingOPTIONS_16
2020-03-14 19:48:55 -Generating unique operation named: updateUsingTRACE_16
2020-03-14 19:48:55 -Generating unique operation named: uploadCadUsingPOST_1
2020-03-14 19:48:55 -Generating unique operation named: addUsingGET_23
2020-03-14 19:48:55 -Generating unique operation named: editUsingGET_23
2020-03-14 19:48:55 -Generating unique operation named: listUsingGET_24
2020-03-14 19:48:55 -Generating unique operation named: rdtTreeByProductIdUsingGET_1
2020-03-14 19:48:55 -Generating unique operation named: removeUsingPOST_39
2020-03-14 19:48:55 -Generating unique operation named: removeUsingPOST_40
2020-03-14 19:48:55 -Generating unique operation named: saveUsingPOST_21
2020-03-14 19:48:55 -Generating unique operation named: updateUsingGET_17
2020-03-14 19:48:55 -Generating unique operation named: updateUsingHEAD_17
2020-03-14 19:48:55 -Generating unique operation named: updateUsingPOST_21
2020-03-14 19:48:55 -Generating unique operation named: updateUsingPUT_17
2020-03-14 19:48:55 -Generating unique operation named: updateUsingPATCH_17
2020-03-14 19:48:55 -Generating unique operation named: updateUsingDELETE_17
2020-03-14 19:48:55 -Generating unique operation named: updateUsingOPTIONS_17
2020-03-14 19:48:55 -Generating unique operation named: updateUsingTRACE_17
2020-03-14 19:48:55 -Generating unique operation named: addUsingGET_24
2020-03-14 19:48:55 -Generating unique operation named: editUsingGET_24
2020-03-14 19:48:55 -Generating unique operation named: listUsingGET_25
2020-03-14 19:48:55 -Generating unique operation named: removeUsingPOST_41
2020-03-14 19:48:55 -Generating unique operation named: removeUsingPOST_42
2020-03-14 19:48:55 -Generating unique operation named: updateUsingGET_18
2020-03-14 19:48:55 -Generating unique operation named: updateUsingHEAD_18
2020-03-14 19:48:55 -Generating unique operation named: updateUsingPOST_22
2020-03-14 19:48:55 -Generating unique operation named: updateUsingPUT_18
2020-03-14 19:48:55 -Generating unique operation named: updateUsingPATCH_18
2020-03-14 19:48:55 -Generating unique operation named: updateUsingDELETE_18
2020-03-14 19:48:55 -Generating unique operation named: updateUsingOPTIONS_18
2020-03-14 19:48:55 -Generating unique operation named: updateUsingTRACE_18
2020-03-14 19:48:55 -Generating unique operation named: listUsingGET_26
2020-03-14 19:48:55 -Generating unique operation named: listUsingHEAD_1
2020-03-14 19:48:55 -Generating unique operation named: listUsingPOST_1
2020-03-14 19:48:55 -Generating unique operation named: listUsingPUT_1
2020-03-14 19:48:55 -Generating unique operation named: listUsingPATCH_1
2020-03-14 19:48:55 -Generating unique operation named: listUsingDELETE_1
2020-03-14 19:48:55 -Generating unique operation named: listUsingOPTIONS_1
2020-03-14 19:48:55 -Generating unique operation named: listUsingTRACE_1
2020-03-14 19:48:55 -Generating unique operation named: addUsingGET_25
2020-03-14 19:48:55 -Generating unique operation named: editUsingGET_25
2020-03-14 19:48:55 -Generating unique operation named: listUsingGET_27
2020-03-14 19:48:55 -Generating unique operation named: removeUsingPOST_43
2020-03-14 19:48:55 -Generating unique operation named: removeUsingPOST_44
2020-03-14 19:48:55 -Generating unique operation named: saveUsingPOST_22
2020-03-14 19:48:55 -Generating unique operation named: updateUsingGET_19
2020-03-14 19:48:55 -Generating unique operation named: updateUsingHEAD_19
2020-03-14 19:48:55 -Generating unique operation named: updateUsingPOST_23
2020-03-14 19:48:55 -Generating unique operation named: updateUsingPUT_19
2020-03-14 19:48:55 -Generating unique operation named: updateUsingPATCH_19
2020-03-14 19:48:55 -Generating unique operation named: updateUsingDELETE_19
2020-03-14 19:48:55 -Generating unique operation named: updateUsingOPTIONS_19
2020-03-14 19:48:55 -Generating unique operation named: updateUsingTRACE_19
2020-03-14 19:48:55 -Generating unique operation named: addUsingGET_26
2020-03-14 19:48:55 -Generating unique operation named: editUsingGET_26
2020-03-14 19:48:55 -Generating unique operation named: listUsingGET_28
2020-03-14 19:48:55 -Generating unique operation named: removeUsingPOST_45
2020-03-14 19:48:55 -Generating unique operation named: removeUsingPOST_46
2020-03-14 19:48:55 -Generating unique operation named: saveUsingPOST_23
2020-03-14 19:48:55 -Generating unique operation named: updateUsingGET_20
2020-03-14 19:48:55 -Generating unique operation named: updateUsingHEAD_20
2020-03-14 19:48:55 -Generating unique operation named: updateUsingPOST_24
2020-03-14 19:48:55 -Generating unique operation named: updateUsingPUT_20
2020-03-14 19:48:55 -Generating unique operation named: updateUsingPATCH_20
2020-03-14 19:48:55 -Generating unique operation named: updateUsingDELETE_20
2020-03-14 19:48:55 -Generating unique operation named: updateUsingOPTIONS_20
2020-03-14 19:48:55 -Generating unique operation named: updateUsingTRACE_20
2020-03-14 19:48:55 -Generating unique operation named: addUsingGET_27
2020-03-14 19:48:55 -Generating unique operation named: editUsingGET_27
2020-03-14 19:48:55 -Generating unique operation named: listUsingGET_29
2020-03-14 19:48:55 -Generating unique operation named: removeUsingPOST_47
2020-03-14 19:48:55 -Generating unique operation named: removeUsingPOST_48
2020-03-14 19:48:55 -Generating unique operation named: saveUsingPOST_24
2020-03-14 19:48:55 -Generating unique operation named: updateUsingGET_21
2020-03-14 19:48:55 -Generating unique operation named: updateUsingHEAD_21
2020-03-14 19:48:55 -Generating unique operation named: updateUsingPOST_25
2020-03-14 19:48:55 -Generating unique operation named: updateUsingPUT_21
2020-03-14 19:48:55 -Generating unique operation named: updateUsingPATCH_21
2020-03-14 19:48:55 -Generating unique operation named: updateUsingDELETE_21
2020-03-14 19:48:55 -Generating unique operation named: updateUsingOPTIONS_21
2020-03-14 19:48:55 -Generating unique operation named: updateUsingTRACE_21
2020-03-14 19:48:55 -Generating unique operation named: addUsingGET_28
2020-03-14 19:48:55 -Generating unique operation named: editUsingGET_28
2020-03-14 19:48:55 -Generating unique operation named: listUsingGET_30
2020-03-14 19:48:55 -Generating unique operation named: removeUsingPOST_49
2020-03-14 19:48:55 -Generating unique operation named: removeUsingPOST_50
2020-03-14 19:48:55 -Generating unique operation named: saveUsingPOST_25
2020-03-14 19:48:55 -Generating unique operation named: updateUsingGET_22
2020-03-14 19:48:55 -Generating unique operation named: updateUsingHEAD_22
2020-03-14 19:48:55 -Generating unique operation named: updateUsingPOST_26
2020-03-14 19:48:55 -Generating unique operation named: updateUsingPUT_22
2020-03-14 19:48:55 -Generating unique operation named: updateUsingPATCH_22
2020-03-14 19:48:55 -Generating unique operation named: updateUsingDELETE_22
2020-03-14 19:48:55 -Generating unique operation named: updateUsingOPTIONS_22
2020-03-14 19:48:55 -Generating unique operation named: updateUsingTRACE_22
2020-03-14 19:48:55 -Generating unique operation named: listUsingGET_31
2020-03-14 19:48:55 -Generating unique operation named: addUsingGET_29
2020-03-14 19:48:55 -Generating unique operation named: editUsingGET_29
2020-03-14 19:48:55 -Generating unique operation named: listUsingGET_32
2020-03-14 19:48:55 -Generating unique operation named: removeUsingPOST_51
2020-03-14 19:48:55 -Generating unique operation named: removeUsingPOST_52
2020-03-14 19:48:55 -Generating unique operation named: saveUsingPOST_26
2020-03-14 19:48:55 -Generating unique operation named: updateUsingGET_23
2020-03-14 19:48:55 -Generating unique operation named: updateUsingHEAD_23
2020-03-14 19:48:55 -Generating unique operation named: updateUsingPOST_27
2020-03-14 19:48:55 -Generating unique operation named: updateUsingPUT_23
2020-03-14 19:48:55 -Generating unique operation named: updateUsingPATCH_23
2020-03-14 19:48:55 -Generating unique operation named: updateUsingDELETE_23
2020-03-14 19:48:55 -Generating unique operation named: updateUsingOPTIONS_23
2020-03-14 19:48:55 -Generating unique operation named: updateUsingTRACE_23
2020-03-14 19:48:55 -Generating unique operation named: uploadPicUsingPOST_1
2020-03-14 19:48:55 -Generating unique operation named: addUsingGET_30
2020-03-14 19:48:55 -Generating unique operation named: batchRemoveUsingPOST_4
2020-03-14 19:48:55 -Generating unique operation named: editUsingGET_30
2020-03-14 19:48:55 -Generating unique operation named: listUsingGET_33
2020-03-14 19:48:55 -Generating unique operation named: removeUsingPOST_53
2020-03-14 19:48:55 -Generating unique operation named: saveUsingPOST_27
2020-03-14 19:48:55 -Generating unique operation named: treeUsingGET_3
2020-03-14 19:48:55 -Generating unique operation named: treeViewUsingGET_1
2020-03-14 19:48:55 -Generating unique operation named: updateUsingPOST_28
2020-03-14 19:48:55 -Generating unique operation named: userUsingGET_1
2020-03-14 19:48:55 -Generating unique operation named: listUsingGET_34
2020-03-14 19:48:55 -Starting Quartz Scheduler now
2020-03-14 19:48:55 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2020-03-14 19:48:55 -Starting...
2020-03-14 19:48:55 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2020-03-14 19:48:55 -Started.
2020-03-14 19:48:55 -Starting ProtocolHandler ["http-nio-8081"]
2020-03-14 19:48:55 -Using a shared selector for servlet write/read
2020-03-14 19:48:56 -Tomcat started on port(s): 8081 (http) with context path ''
2020-03-14 19:48:56 -Started VRApplication in 20.427 seconds (JVM running for 21.472)
2020-03-14 19:48:56 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2020-03-14 19:48:56 -==> Parameters: 
2020-03-14 19:48:56 -<==      Total: 1
2020-03-14 19:49:00 -create connection error, url: jdbc:mysql://127.0.0.1:3306/company?useUnicode=true&characterEncoding=utf8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'hdfz'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2190)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor64.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:148)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:38)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:211)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1454)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1516)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2080)
2020-03-14 19:49:30 -create connection error, url: jdbc:mysql://127.0.0.1:3306/company?useUnicode=true&characterEncoding=utf8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'hdfz'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2190)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor64.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:148)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:38)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:211)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1454)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1516)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2080)
2020-03-14 19:49:50 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2020-03-14 19:50:00 -Starting VRApplication on DESKTOP-C6NG46F with PID 16856 (F:\project\javaProject\company\target\classes started by shilic in F:\project\javaProject\company)
2020-03-14 19:50:00 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2020-03-14 19:50:00 -The following profiles are active: dev
2020-03-14 19:50:00 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@56c698e3: startup date [Sat Mar 14 19:50:00 CST 2020]; root of context hierarchy
2020-03-14 19:50:02 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-14 19:50:03 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$911caa18] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-14 19:50:03 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$8375d8bf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-14 19:50:04 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-14 19:50:04 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/C:/Users/shilic/.m2/repository/net/sf/ehcache/ehcache/2.10.5/ehcache-2.10.5.jar!/ehcache-failsafe.xml
2020-03-14 19:50:04 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-14 19:50:04 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-14 19:50:04 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2020-03-14 19:50:04 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2020-03-14 19:50:04 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-14 19:50:04 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-14 19:50:04 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-14 19:50:04 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-14 19:50:04 -Tomcat initialized with port(s): 8081 (http)
2020-03-14 19:50:04 -Initializing ProtocolHandler ["http-nio-8081"]
2020-03-14 19:50:05 -Starting service [Tomcat]
2020-03-14 19:50:05 -Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-14 19:50:05 -Loaded APR based Apache Tomcat Native library [1.2.16] using APR version [1.6.3].
2020-03-14 19:50:05 -APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2020-03-14 19:50:05 -APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2020-03-14 19:50:06 -OpenSSL successfully initialized [OpenSSL 1.0.2m  2 Nov 2017]
2020-03-14 19:50:06 -Initializing Spring embedded WebApplicationContext
2020-03-14 19:50:06 -Root WebApplicationContext: initialization completed in 5611 ms
2020-03-14 19:50:06 -Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-14 19:50:06 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-03-14 19:50:06 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-03-14 19:50:06 -Mapping filter: 'requestContextFilter' to: [/*]
2020-03-14 19:50:06 -Filter xssFilter was not registered (disabled)
2020-03-14 19:50:06 -Mapping filter: 'webStatFilter' to urls: [/*]
2020-03-14 19:50:06 -Mapping filter: 'corsFilter' to: [/*]
2020-03-14 19:50:06 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2020-03-14 19:50:06 -Servlet statViewServlet mapped to [/druid/*]
2020-03-14 19:50:06 -Servlet dispatcherServlet mapped to [/]
2020-03-14 19:50:07 -{dataSource-1} inited
2020-03-14 19:50:08 -ProcessEngine default created
2020-03-14 19:50:09 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@56c698e3: startup date [Sat Mar 14 19:50:00 CST 2020]; root of context hierarchy
2020-03-14 19:50:10 -Using default implementation for ThreadExecutor
2020-03-14 19:50:10 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-03-14 19:50:10 -Quartz Scheduler v.2.2.1 created.
2020-03-14 19:50:10 -RAMJobStore initialized.
2020-03-14 19:50:10 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2020-03-14 19:50:10 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2020-03-14 19:50:10 -Quartz scheduler version: 2.2.1
2020-03-14 19:50:10 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@15a0f9
2020-03-14 19:50:10 -Initializing ExecutorService  'clientInboundChannelExecutor'
2020-03-14 19:50:10 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2020-03-14 19:50:11 -Mapped "{[/activiti/model/{id}],methods=[DELETE]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.remove(java.lang.String)
2020-03-14 19:50:11 -Mapped "{[/activiti/model/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ModelController.list(int,int)
2020-03-14 19:50:11 -Mapped "{[/activiti/model/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.batchRemove(java.lang.String[])
2020-03-14 19:50:11 -Mapped "{[/activiti/model],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ModelController.model()
2020-03-14 19:50:11 -Mapped "{[/activiti/editor/stencilset],methods=[GET],produces=[application/json;charset=utf-8]}" onto public java.lang.String com.bootdo.activiti.controller.ModelController.getStencilset()
2020-03-14 19:50:11 -Mapped "{[/activiti/model/edit/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.edit(javax.servlet.http.HttpServletResponse,java.lang.String)
2020-03-14 19:50:11 -Mapped "{[/activiti/model/deploy/{id}],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.deploy(java.lang.String) throws java.lang.Exception
2020-03-14 19:50:11 -Mapped "{[/activiti/model/{modelId}/save],methods=[PUT]}" onto public void com.bootdo.activiti.controller.ModelController.saveModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-14 19:50:11 -Mapped "{[/activiti/model/{modelId}/json],methods=[GET]}" onto public com.fasterxml.jackson.databind.node.ObjectNode com.bootdo.activiti.controller.ModelController.getEditorJson(java.lang.String)
2020-03-14 19:50:11 -Mapped "{[/activiti/model/add]}" onto public void com.bootdo.activiti.controller.ModelController.newModel(javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2020-03-14 19:50:11 -Mapped "{[/activiti/model/export/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.exportToXml(java.lang.String,javax.servlet.http.HttpServletResponse)
2020-03-14 19:50:11 -Mapped "{[/activiti/process/add],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.add()
2020-03-14 19:50:11 -Mapped "{[/activiti/process/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.remove(java.lang.String)
2020-03-14 19:50:11 -Mapped "{[/activiti/process/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ProcessController.list(int,int)
2020-03-14 19:50:11 -Mapped "{[/activiti/process/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.batchRemove(java.lang.String[])
2020-03-14 19:50:11 -Mapped "{[/activiti/process],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.process()
2020-03-14 19:50:11 -Mapped "{[/activiti/process/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.deploy(java.lang.String,java.lang.String,org.springframework.web.multipart.MultipartFile)
2020-03-14 19:50:11 -Mapped "{[/activiti/process/convertToModel/{procDefId}]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.convertToModel(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.io.UnsupportedEncodingException,javax.xml.stream.XMLStreamException
2020-03-14 19:50:11 -Mapped "{[/activiti/process/resource/read/{xml}/{id}]}" onto public void com.bootdo.activiti.controller.ProcessController.resourceRead(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2020-03-14 19:50:11 -Mapped "{[/act/salary/form],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.add()
2020-03-14 19:50:11 -Mapped "{[/act/salary/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String)
2020-03-14 19:50:11 -Mapped "{[/act/salary/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String[])
2020-03-14 19:50:11 -Mapped "{[/act/salary/update]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.update(com.bootdo.activiti.domain.SalaryDO)
2020-03-14 19:50:11 -Mapped "{[/act/salary/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.SalaryController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:50:11 -Mapped "{[/act/salary/form/{taskId}],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.edit(java.lang.String,org.springframework.ui.Model)
2020-03-14 19:50:11 -Mapped "{[/act/salary/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.saveOrUpdate(com.bootdo.activiti.domain.SalaryDO)
2020-03-14 19:50:11 -Mapped "{[/act/salary],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.Salary()
2020-03-14 19:50:11 -Mapped "{[/activiti/task/form/{procDefId}/{taskId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.form(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2020-03-14 19:50:11 -Mapped "{[/activiti/task/gotoList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.TaskController.list(int,int)
2020-03-14 19:50:11 -Mapped "{[/activiti/task/todo],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.todo()
2020-03-14 19:50:11 -Mapped "{[/activiti/task/trace/photo/{procDefId}/{execId}]}" onto public void com.bootdo.activiti.controller.TaskController.tracePhoto(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2020-03-14 19:50:11 -Mapped "{[/activiti/task/todoList],methods=[GET]}" onto java.util.List<com.bootdo.activiti.vo.TaskVO> com.bootdo.activiti.controller.TaskController.todoList()
2020-03-14 19:50:11 -Mapped "{[/activiti/task/form/{procDefId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.startForm(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2020-03-14 19:50:11 -Mapped "{[/activiti/task/goto],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.gotoTask()
2020-03-14 19:50:11 -Mapped "{[/blog/open/page/{categories}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.about(java.lang.String,org.springframework.ui.Model)
2020-03-14 19:50:11 -Mapped "{[/blog],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.blog()
2020-03-14 19:50:11 -Mapped "{[/blog/open/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.BlogController.opentList(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:50:11 -Mapped "{[/blog/open/post/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.post(java.lang.Long,org.springframework.ui.Model)
2020-03-14 19:50:11 -Mapped "{[/blog/bContent/add],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.add()
2020-03-14 19:50:11 -Mapped "{[/blog/bContent/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long)
2020-03-14 19:50:11 -Mapped "{[/blog/bContent/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long[])
2020-03-14 19:50:11 -Mapped "{[/blog/bContent/update]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.update(com.bootdo.blog.domain.ContentDO)
2020-03-14 19:50:11 -Mapped "{[/blog/bContent/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.ContentController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:50:11 -Mapped "{[/blog/bContent/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.save(com.bootdo.blog.domain.ContentDO)
2020-03-14 19:50:11 -Mapped "{[/blog/bContent/edit/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.edit(java.lang.Long,org.springframework.ui.Model)
2020-03-14 19:50:11 -Mapped "{[/blog/bContent],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.bContent()
2020-03-14 19:50:11 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2020-03-14 19:50:11 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2020-03-14 19:50:11 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2020-03-14 19:50:11 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2020-03-14 19:50:11 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:50:11 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2020-03-14 19:50:11 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2020-03-14 19:50:11 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2020-03-14 19:50:11 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2020-03-14 19:50:11 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2020-03-14 19:50:11 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2020-03-14 19:50:11 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2020-03-14 19:50:11 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2020-03-14 19:50:11 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2020-03-14 19:50:11 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2020-03-14 19:50:11 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:50:11 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2020-03-14 19:50:11 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2020-03-14 19:50:11 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2020-03-14 19:50:11 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2020-03-14 19:50:11 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2020-03-14 19:50:11 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:50:11 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2020-03-14 19:50:11 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2020-03-14 19:50:11 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2020-03-14 19:50:11 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2020-03-14 19:50:11 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2020-03-14 19:50:11 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2020-03-14 19:50:11 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2020-03-14 19:50:11 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2020-03-14 19:50:11 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2020-03-14 19:50:11 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:50:11 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2020-03-14 19:50:11 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2020-03-14 19:50:11 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2020-03-14 19:50:11 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2020-03-14 19:50:11 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2020-03-14 19:50:11 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2020-03-14 19:50:11 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2020-03-14 19:50:11 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:50:11 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2020-03-14 19:50:11 -Mapped "{[/verify/getVerifyCode]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.common.controller.VerifyCodeController.getVerifyCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-14 19:50:11 -Mapped "{[/verify/checkVerifyCode]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.VerifyCodeController.checkVerifyCode(javax.servlet.http.HttpServletRequest)
2020-03-14 19:50:11 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-14 19:50:11 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-14 19:50:11 -Mapped "{[/liuyan/liuyan/add],methods=[GET]}" onto java.lang.String com.bootdo.liuyan.controller.LiuyanController.add()
2020-03-14 19:50:11 -Mapped "{[/liuyan/liuyan/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.liuyan.controller.LiuyanController.remove(java.lang.Long)
2020-03-14 19:50:11 -Mapped "{[/liuyan/liuyan/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.liuyan.controller.LiuyanController.remove(java.lang.Long[])
2020-03-14 19:50:11 -Mapped "{[/liuyan/liuyan/update]}" onto public com.bootdo.common.utils.R com.bootdo.liuyan.controller.LiuyanController.update(com.bootdo.liuyan.domain.LiuyanDO)
2020-03-14 19:50:11 -Mapped "{[/liuyan/liuyan/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.liuyan.controller.LiuyanController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:50:11 -Mapped "{[/liuyan/liuyan/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.liuyan.controller.LiuyanController.save(com.bootdo.liuyan.domain.LiuyanDO)
2020-03-14 19:50:11 -Mapped "{[/liuyan/liuyan/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.liuyan.controller.LiuyanController.edit(java.lang.Long,org.springframework.ui.Model)
2020-03-14 19:50:11 -Mapped "{[/liuyan/liuyan],methods=[GET]}" onto java.lang.String com.bootdo.liuyan.controller.LiuyanController.Liuyan()
2020-03-14 19:50:11 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2020-03-14 19:50:11 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2020-03-14 19:50:11 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2020-03-14 19:50:11 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2020-03-14 19:50:11 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2020-03-14 19:50:11 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:50:11 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2020-03-14 19:50:11 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2020-03-14 19:50:11 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2020-03-14 19:50:11 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2020-03-14 19:50:11 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:50:11 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2020-03-14 19:50:11 -Mapped "{[/stock/stockGoods/add],methods=[GET]}" onto java.lang.String com.bootdo.stock.controller.StockGoodsController.add(org.springframework.ui.Model)
2020-03-14 19:50:11 -Mapped "{[/stock/stockGoods/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.stock.controller.StockGoodsController.remove(java.lang.Integer)
2020-03-14 19:50:11 -Mapped "{[/stock/stockGoods/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.stock.controller.StockGoodsController.remove(java.lang.Integer[])
2020-03-14 19:50:11 -Mapped "{[/stock/stockGoods/update]}" onto public com.bootdo.common.utils.R com.bootdo.stock.controller.StockGoodsController.update(com.bootdo.stock.domain.StockGoodsDO)
2020-03-14 19:50:11 -Mapped "{[/stock/stockGoods/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.stock.controller.StockGoodsController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:50:11 -Mapped "{[/stock/stockGoods/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.stock.controller.StockGoodsController.save(com.bootdo.stock.domain.StockGoodsDO)
2020-03-14 19:50:11 -Mapped "{[/stock/stockGoods],methods=[GET]}" onto java.lang.String com.bootdo.stock.controller.StockGoodsController.StockGoods(org.springframework.ui.Model)
2020-03-14 19:50:11 -Mapped "{[/stock/stockGoods/queryByType],methods=[GET]}" onto public java.util.List<com.bootdo.stock.domain.StockGoodsDO> com.bootdo.stock.controller.StockGoodsController.queryByType(java.lang.Integer)
2020-03-14 19:50:11 -Mapped "{[/stock/stockGoods/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.stock.controller.StockGoodsController.edit(java.lang.Integer,org.springframework.ui.Model)
2020-03-14 19:50:11 -Mapped "{[/stock/stockIn/add],methods=[GET]}" onto java.lang.String com.bootdo.stock.controller.StockInController.add(org.springframework.ui.Model)
2020-03-14 19:50:11 -Mapped "{[/stock/stockIn/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.stock.controller.StockInController.remove(java.lang.Integer)
2020-03-14 19:50:11 -Mapped "{[/stock/stockIn/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.stock.controller.StockInController.remove(java.lang.Integer[])
2020-03-14 19:50:11 -Mapped "{[/stock/stockIn/update]}" onto public com.bootdo.common.utils.R com.bootdo.stock.controller.StockInController.update(com.bootdo.stock.domain.StockInDO)
2020-03-14 19:50:11 -Mapped "{[/stock/stockIn/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.stock.controller.StockInController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:50:11 -Mapped "{[/stock/stockIn/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.stock.controller.StockInController.save(com.bootdo.stock.domain.StockInDO)
2020-03-14 19:50:11 -Mapped "{[/stock/stockIn/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.stock.controller.StockInController.edit(java.lang.Integer,org.springframework.ui.Model)
2020-03-14 19:50:11 -Mapped "{[/stock/stockIn],methods=[GET]}" onto java.lang.String com.bootdo.stock.controller.StockInController.StockIn(org.springframework.ui.Model)
2020-03-14 19:50:11 -Mapped "{[/stock/stockOut/add],methods=[GET]}" onto java.lang.String com.bootdo.stock.controller.StockOutController.add(java.lang.String,org.springframework.ui.Model)
2020-03-14 19:50:11 -Mapped "{[/stock/stockOut/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.stock.controller.StockOutController.remove(java.lang.Integer)
2020-03-14 19:50:11 -Mapped "{[/stock/stockOut/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.stock.controller.StockOutController.remove(java.lang.Integer[])
2020-03-14 19:50:11 -Mapped "{[/stock/stockOut/update]}" onto public com.bootdo.common.utils.R com.bootdo.stock.controller.StockOutController.update(com.bootdo.stock.domain.StockOutDO)
2020-03-14 19:50:11 -Mapped "{[/stock/stockOut/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.stock.controller.StockOutController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:50:11 -Mapped "{[/stock/stockOut/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.stock.controller.StockOutController.save(com.bootdo.stock.domain.StockOutDO)
2020-03-14 19:50:11 -Mapped "{[/stock/stockOut],methods=[GET]}" onto java.lang.String com.bootdo.stock.controller.StockOutController.StockOut(org.springframework.ui.Model)
2020-03-14 19:50:11 -Mapped "{[/stock/stockOut/createOrdercode],methods=[GET]}" onto java.lang.String com.bootdo.stock.controller.StockOutController.createOrdercode()
2020-03-14 19:50:11 -Mapped "{[/stock/stockOut/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.stock.controller.StockOutController.edit(java.lang.Integer,org.springframework.ui.Model)
2020-03-14 19:50:11 -Mapped "{[/stock/report/in],methods=[GET]}" onto java.lang.String com.bootdo.stock.controller.StockReportController.in(org.springframework.ui.Model)
2020-03-14 19:50:11 -Mapped "{[/stock/report/out],methods=[GET]}" onto java.lang.String com.bootdo.stock.controller.StockReportController.out(org.springframework.ui.Model)
2020-03-14 19:50:11 -Mapped "{[/stock/report/outList],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.stock.controller.StockReportController.outList(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:50:11 -Mapped "{[/stock/report/inList],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.stock.controller.StockReportController.inList(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:50:11 -Mapped "{[/stock/stockType/add],methods=[GET]}" onto java.lang.String com.bootdo.stock.controller.StockTypeController.add(org.springframework.ui.Model)
2020-03-14 19:50:11 -Mapped "{[/stock/stockType/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.stock.controller.StockTypeController.remove(java.lang.Integer)
2020-03-14 19:50:11 -Mapped "{[/stock/stockType/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.stock.controller.StockTypeController.remove(java.lang.Integer[])
2020-03-14 19:50:11 -Mapped "{[/stock/stockType/update]}" onto public com.bootdo.common.utils.R com.bootdo.stock.controller.StockTypeController.update(com.bootdo.stock.domain.StockTypeDO)
2020-03-14 19:50:11 -Mapped "{[/stock/stockType/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.stock.controller.StockTypeController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:50:11 -Mapped "{[/stock/stockType/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.stock.controller.StockTypeController.save(com.bootdo.stock.domain.StockTypeDO)
2020-03-14 19:50:11 -Mapped "{[/stock/stockType/queryByPid],methods=[GET]}" onto public java.util.List<com.bootdo.stock.domain.StockTypeDO> com.bootdo.stock.controller.StockTypeController.queryByPid(java.lang.Integer)
2020-03-14 19:50:11 -Mapped "{[/stock/stockType],methods=[GET]}" onto java.lang.String com.bootdo.stock.controller.StockTypeController.StockType(org.springframework.ui.Model)
2020-03-14 19:50:11 -Mapped "{[/stock/stockType/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.stock.controller.StockTypeController.edit(java.lang.Integer,org.springframework.ui.Model)
2020-03-14 19:50:11 -Mapped "{[/company],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CompanyController.user(org.springframework.ui.Model)
2020-03-14 19:50:11 -Mapped "{[/company/add],methods=[POST]}" onto public java.lang.String com.bootdo.system.controller.CompanyController.addLy(com.bootdo.liuyan.domain.LiuyanDO)
2020-03-14 19:50:11 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2020-03-14 19:50:11 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2020-03-14 19:50:11 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2020-03-14 19:50:11 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2020-03-14 19:50:11 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2020-03-14 19:50:11 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2020-03-14 19:50:11 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2020-03-14 19:50:11 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2020-03-14 19:50:11 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2020-03-14 19:50:11 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2020-03-14 19:50:11 -Mapped "{[/krpano/edit],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.KrpanoController.edit(org.springframework.ui.Model)
2020-03-14 19:50:11 -Mapped "{[/krpano],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.KrpanoController.tourDefault(org.springframework.ui.Model)
2020-03-14 19:50:11 -Mapped "{[/krpano/tour],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.KrpanoController.tour(org.springframework.ui.Model)
2020-03-14 19:50:11 -Mapped "{[/krpano/tourmore],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.KrpanoController.tourmore(org.springframework.ui.Model)
2020-03-14 19:50:11 -Mapped "{[/krpano/guide],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.KrpanoController.guide(org.springframework.ui.Model)
2020-03-14 19:50:11 -Mapped "{[/krpano/krpanoself],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.KrpanoController.krpanoself(org.springframework.ui.Model)
2020-03-14 19:50:11 -Mapped "{[/krpano/vtour2],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.KrpanoController.vtour2(org.springframework.ui.Model)
2020-03-14 19:50:11 -Mapped "{[/krpano/vtour],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.KrpanoController.vtour(org.springframework.ui.Model)
2020-03-14 19:50:11 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2020-03-14 19:50:11 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2020-03-14 19:50:11 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2020-03-14 19:50:11 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2020-03-14 19:50:11 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-14 19:50:11 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2020-03-14 19:50:11 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2020-03-14 19:50:11 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2020-03-14 19:50:11 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2020-03-14 19:50:11 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:50:11 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2020-03-14 19:50:11 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2020-03-14 19:50:11 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2020-03-14 19:50:11 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2020-03-14 19:50:11 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2020-03-14 19:50:11 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2020-03-14 19:50:11 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2020-03-14 19:50:11 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2020-03-14 19:50:11 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2020-03-14 19:50:11 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2020-03-14 19:50:11 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2020-03-14 19:50:11 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2020-03-14 19:50:11 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2020-03-14 19:50:11 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2020-03-14 19:50:11 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2020-03-14 19:50:11 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-03-14 19:50:11 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2020-03-14 19:50:11 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:50:11 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2020-03-14 19:50:11 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2020-03-14 19:50:11 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2020-03-14 19:50:11 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:50:11 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2020-03-14 19:50:11 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2020-03-14 19:50:11 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2020-03-14 19:50:11 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2020-03-14 19:50:11 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2020-03-14 19:50:11 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2020-03-14 19:50:11 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2020-03-14 19:50:11 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2020-03-14 19:50:11 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2020-03-14 19:50:11 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2020-03-14 19:50:11 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2020-03-14 19:50:11 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-14 19:50:11 -Mapped "{[/vr/appVersion/add],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.AppVersionController.add()
2020-03-14 19:50:11 -Mapped "{[/vr/appVersion/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.AppVersionController.remove(java.lang.Integer)
2020-03-14 19:50:11 -Mapped "{[/vr/appVersion/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.AppVersionController.remove(java.lang.Integer[])
2020-03-14 19:50:11 -Mapped "{[/vr/appVersion/update]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.AppVersionController.update(com.bootdo.vr.domain.AppVersionDO)
2020-03-14 19:50:11 -Mapped "{[/vr/appVersion/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.vr.controller.AppVersionController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:50:11 -Mapped "{[/vr/appVersion/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.AppVersionController.save(com.bootdo.vr.domain.AppVersionDO)
2020-03-14 19:50:11 -Mapped "{[/vr/appVersion/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.AppVersionController.edit(java.lang.Integer,org.springframework.ui.Model)
2020-03-14 19:50:11 -Mapped "{[/vr/appVersion/uploadapk],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.AppVersionController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2020-03-14 19:50:11 -Mapped "{[/vr/appVersion/updateApp],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.AppVersionController.updateApp()
2020-03-14 19:50:11 -Mapped "{[/vr/appVersion],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.AppVersionController.AppVersion()
2020-03-14 19:50:11 -Mapped "{[/vr/colorType/add],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.ColorTypeController.add(org.springframework.ui.Model)
2020-03-14 19:50:11 -Mapped "{[/vr/colorType/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ColorTypeController.remove(java.lang.Integer[])
2020-03-14 19:50:11 -Mapped "{[/vr/colorType/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ColorTypeController.remove(java.lang.Integer)
2020-03-14 19:50:11 -Mapped "{[/vr/colorType/update]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ColorTypeController.update(com.bootdo.vr.domain.ColorTypeDO)
2020-03-14 19:50:11 -Mapped "{[/vr/colorType/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.vr.controller.ColorTypeController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:50:11 -Mapped "{[/vr/colorType/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ColorTypeController.save(com.bootdo.vr.domain.ColorTypeDO)
2020-03-14 19:50:11 -Mapped "{[/vr/colorType/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.ColorTypeController.edit(java.lang.Integer,org.springframework.ui.Model)
2020-03-14 19:50:11 -Mapped "{[/vr/colorType/productTreeByProductId],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.vr.controller.ColorTypeController.productTreeByProductId(java.lang.Integer)
2020-03-14 19:50:11 -Mapped "{[/vr/colorType/productTree],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.vr.controller.ColorTypeController.queryForProductTree(java.lang.String)
2020-03-14 19:50:11 -Mapped "{[/vr/colorType],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.ColorTypeController.ColorType(org.springframework.ui.Model)
2020-03-14 19:50:11 -Mapped "{[/vr/colorType/uploadColorLogo],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ColorTypeController.uploadColorLogo(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2020-03-14 19:50:11 -Mapped "{[/vr/colorType/productColorIds],methods=[GET]}" onto public java.util.List<com.bootdo.vr.domain.ProductColorsDO> com.bootdo.vr.controller.ColorTypeController.productColorIds(java.lang.Integer)
2020-03-14 19:50:11 -Mapped "{[/vr/colorType/uploadQjt],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ColorTypeController.uploadQjt(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2020-03-14 19:50:11 -Mapped "{[/vr/guide/add],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.GuideController.add()
2020-03-14 19:50:11 -Mapped "{[/vr/guide/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.GuideController.remove(java.lang.Integer)
2020-03-14 19:50:11 -Mapped "{[/vr/guide/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.GuideController.remove(java.lang.Integer[])
2020-03-14 19:50:11 -Mapped "{[/vr/guide/update]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.GuideController.update(com.bootdo.vr.domain.GuideDO)
2020-03-14 19:50:12 -Mapped "{[/vr/guide/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.vr.controller.GuideController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:50:12 -Mapped "{[/vr/guide/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.GuideController.save(com.bootdo.vr.domain.GuideDO)
2020-03-14 19:50:12 -Mapped "{[/vr/guide/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.GuideController.edit(java.lang.Integer,org.springframework.ui.Model)
2020-03-14 19:50:12 -Mapped "{[/vr/guide/uploadGuideLogo],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.GuideController.uploadColorLogo(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2020-03-14 19:50:12 -Mapped "{[/vr/guide],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.GuideController.Guide()
2020-03-14 19:50:12 -Mapped "{[/vr/leftStyle/add2/{topStyleId}],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.LeftStyleController.add(java.lang.Integer,org.springframework.ui.Model)
2020-03-14 19:50:12 -Mapped "{[/vr/leftStyle/add],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.LeftStyleController.add(org.springframework.ui.Model)
2020-03-14 19:50:12 -Mapped "{[/vr/leftStyle/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.LeftStyleController.remove(java.lang.Integer)
2020-03-14 19:50:12 -Mapped "{[/vr/leftStyle/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.LeftStyleController.remove(java.lang.Integer[])
2020-03-14 19:50:12 -Mapped "{[/vr/leftStyle/update]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.LeftStyleController.update(com.bootdo.vr.domain.LeftStyleDO,java.lang.String)
2020-03-14 19:50:12 -Mapped "{[/vr/leftStyle/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.vr.controller.LeftStyleController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:50:12 -Mapped "{[/vr/leftStyle/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.LeftStyleController.save(com.bootdo.vr.domain.LeftStyleDO,java.lang.String)
2020-03-14 19:50:12 -Mapped "{[/vr/leftStyle/edit/{leftId}],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.LeftStyleController.edit(java.lang.Integer,org.springframework.ui.Model)
2020-03-14 19:50:12 -Mapped "{[/vr/leftStyle/queryAllTopAndLeftStyles],methods=[GET]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.LeftStyleController.queryAllTopAndLeftStyles()
2020-03-14 19:50:12 -Mapped "{[/vr/leftStyle/queryLeftStyleByTopStyleId],methods=[GET]}" onto public java.util.List<com.bootdo.vr.domain.LeftStyleDO> com.bootdo.vr.controller.LeftStyleController.queryLeftStyleByTopStyleId(java.lang.Integer)
2020-03-14 19:50:12 -Mapped "{[/vr/leftStyle/queryLeftStyles],methods=[GET]}" onto public java.util.List<com.bootdo.vr.domain.LeftStyleDO> com.bootdo.vr.controller.LeftStyleController.queryLeftStyles(java.lang.Integer)
2020-03-14 19:50:12 -Mapped "{[/vr/leftStyle/topleft],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.LeftStyleController.topleft()
2020-03-14 19:50:12 -Mapped "{[/vr/leftStyle/uploadLeftLogo],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.LeftStyleController.uploadPic(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2020-03-14 19:50:12 -Mapped "{[/vr/leftStyle],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.LeftStyleController.LeftStyle(org.springframework.ui.Model)
2020-03-14 19:50:12 -Mapped "{[/vr/leftStyle/uploadCad],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.LeftStyleController.uploadCad(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2020-03-14 19:50:12 -Mapped "{[/vr/leftStyle/uploadRdt],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.LeftStyleController.uploadRdt(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2020-03-14 19:50:12 -Mapped "{[/vr/leftStyleImgs/add],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.LeftStyleImgsController.add()
2020-03-14 19:50:12 -Mapped "{[/vr/leftStyleImgs/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.LeftStyleImgsController.remove(java.lang.Integer)
2020-03-14 19:50:12 -Mapped "{[/vr/leftStyleImgs/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.LeftStyleImgsController.remove(java.lang.Integer[])
2020-03-14 19:50:12 -Mapped "{[/vr/leftStyleImgs/update]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.LeftStyleImgsController.update(com.bootdo.vr.domain.LeftStyleImgsDO)
2020-03-14 19:50:12 -Mapped "{[/vr/leftStyleImgs/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.vr.controller.LeftStyleImgsController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:50:12 -Mapped "{[/vr/leftStyleImgs/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.LeftStyleImgsController.save(com.bootdo.vr.domain.LeftStyleImgsDO)
2020-03-14 19:50:12 -Mapped "{[/vr/leftStyleImgs/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.LeftStyleImgsController.edit(java.lang.Integer,org.springframework.ui.Model)
2020-03-14 19:50:12 -Mapped "{[/vr/leftStyleImgs/rdtTreeByProductId],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.vr.controller.LeftStyleImgsController.rdtTreeByProductId(java.lang.Integer)
2020-03-14 19:50:12 -Mapped "{[/vr/leftStyleImgs],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.LeftStyleImgsController.LeftStyleImgs()
2020-03-14 19:50:12 -Mapped "{[/vr/productActiveCode/add],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.ProductActiveCodeController.add()
2020-03-14 19:50:12 -Mapped "{[/vr/productActiveCode/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ProductActiveCodeController.remove(java.lang.Integer)
2020-03-14 19:50:12 -Mapped "{[/vr/productActiveCode/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ProductActiveCodeController.remove(java.lang.Integer[])
2020-03-14 19:50:12 -Mapped "{[/vr/productActiveCode/update]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ProductActiveCodeController.update(com.bootdo.vr.domain.ProductActiveCodeDO)
2020-03-14 19:50:12 -Mapped "{[/vr/productActiveCode/list/{productId}],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.vr.controller.ProductActiveCodeController.list(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:50:12 -Mapped "{[/vr/productActiveCode/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ProductActiveCodeController.save(com.bootdo.vr.domain.ProductActiveCodeDO)
2020-03-14 19:50:12 -Mapped "{[/vr/productActiveCode/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.ProductActiveCodeController.edit(java.lang.Integer,org.springframework.ui.Model)
2020-03-14 19:50:12 -Mapped "{[/vr/productActiveCode],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.ProductActiveCodeController.ProductActiveCode()
2020-03-14 19:50:12 -Mapped "{[/vr/productActiveCode/buildActiveCode],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ProductActiveCodeController.buildActiveCode(java.lang.Integer)
2020-03-14 19:50:12 -Mapped "{[/vr/productImgs/add],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.ProductImgsController.add()
2020-03-14 19:50:12 -Mapped "{[/vr/productImgs/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ProductImgsController.remove(java.lang.Integer)
2020-03-14 19:50:12 -Mapped "{[/vr/productImgs/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ProductImgsController.remove(java.lang.Integer[])
2020-03-14 19:50:12 -Mapped "{[/vr/productImgs/update]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ProductImgsController.update(com.bootdo.vr.domain.ProductImgsDO)
2020-03-14 19:50:12 -Mapped "{[/vr/productImgs/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.vr.controller.ProductImgsController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:50:12 -Mapped "{[/vr/productImgs/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ProductImgsController.save(com.bootdo.vr.domain.ProductImgsDO)
2020-03-14 19:50:12 -Mapped "{[/vr/productImgs/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.ProductImgsController.edit(java.lang.Integer,org.springframework.ui.Model)
2020-03-14 19:50:12 -Mapped "{[/vr/productImgs],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.ProductImgsController.ProductImgs()
2020-03-14 19:50:12 -Mapped "{[/vr/productInfo/add/{leftIds}],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.ProductInfoController.add(java.lang.String,org.springframework.ui.Model)
2020-03-14 19:50:12 -Mapped "{[/vr/productInfo/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ProductInfoController.remove(java.lang.Integer)
2020-03-14 19:50:12 -Mapped "{[/vr/productInfo/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ProductInfoController.remove(java.lang.Integer[])
2020-03-14 19:50:12 -Mapped "{[/vr/productInfo/update]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ProductInfoController.update(com.bootdo.vr.domain.ProductInfoDO,java.lang.Integer[])
2020-03-14 19:50:12 -Mapped "{[/vr/productInfo/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.vr.controller.ProductInfoController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:50:12 -Mapped "{[/vr/productInfo/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ProductInfoController.save(com.bootdo.vr.domain.ProductInfoDO,java.lang.Integer[],java.lang.Integer[])
2020-03-14 19:50:12 -Mapped "{[/vr/productInfo/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.ProductInfoController.edit(java.lang.Integer,org.springframework.ui.Model)
2020-03-14 19:50:12 -Mapped "{[/vr/productInfo/productLeftImgIds],methods=[GET]}" onto public java.util.List<com.bootdo.vr.domain.ProductLeftStyleImgsDO> com.bootdo.vr.controller.ProductInfoController.productLeftImgIds(java.lang.Integer)
2020-03-14 19:50:12 -Mapped "{[/vr/productInfo/uploadProductInfo],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ProductInfoController.uploadColorLogo(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2020-03-14 19:50:12 -Mapped "{[/vr/productInfo/lookDetails/{id}],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.ProductInfoController.lookDetails(java.lang.Integer,org.springframework.ui.Model)
2020-03-14 19:50:12 -Mapped "{[/vr/productInfo/productImgIds],methods=[GET]}" onto public java.util.List<com.bootdo.vr.domain.ProductImgsDO> com.bootdo.vr.controller.ProductInfoController.productImgIds(java.lang.Integer)
2020-03-14 19:50:12 -Mapped "{[/vr/productInfo/updateRdt]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ProductInfoController.updateRdt(com.bootdo.vr.domain.ProductInfoDO,java.lang.Integer[])
2020-03-14 19:50:12 -Mapped "{[/vr/productInfo],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.ProductInfoController.ProductInfo()
2020-03-14 19:50:12 -Mapped "{[/vr/productInfo/activeCode/{id}],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.ProductInfoController.activeCode(java.lang.Integer,org.springframework.ui.Model)
2020-03-14 19:50:12 -Mapped "{[/vr/productInfo/editRdt/{id}],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.ProductInfoController.editRdt(java.lang.Integer,org.springframework.ui.Model)
2020-03-14 19:50:12 -Mapped "{[/vr/productInfo/updateLeftRdt]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ProductInfoController.updateLeftRdt(com.bootdo.vr.domain.ProductInfoDO,java.lang.Integer[])
2020-03-14 19:50:12 -Mapped "{[/vr/productInfo/editProduct],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ProductInfoController.editProduct(java.lang.Integer,java.lang.Integer[])
2020-03-14 19:50:12 -Mapped "{[/vr/productLeftStyle/add],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.ProductLeftStyleController.add()
2020-03-14 19:50:12 -Mapped "{[/vr/productLeftStyle/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ProductLeftStyleController.remove(java.lang.Integer)
2020-03-14 19:50:12 -Mapped "{[/vr/productLeftStyle/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ProductLeftStyleController.remove(java.lang.Integer[])
2020-03-14 19:50:12 -Mapped "{[/vr/productLeftStyle/update]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ProductLeftStyleController.update(com.bootdo.vr.domain.ProductLeftStyleDO)
2020-03-14 19:50:12 -Mapped "{[/vr/productLeftStyle/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.vr.controller.ProductLeftStyleController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:50:12 -Mapped "{[/vr/productLeftStyle/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ProductLeftStyleController.save(com.bootdo.vr.domain.ProductLeftStyleDO)
2020-03-14 19:50:12 -Mapped "{[/vr/productLeftStyle/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.ProductLeftStyleController.edit(java.lang.Integer,org.springframework.ui.Model)
2020-03-14 19:50:12 -Mapped "{[/vr/productLeftStyle],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.ProductLeftStyleController.ProductLeftStyle()
2020-03-14 19:50:12 -Mapped "{[/vr/productLeftStyleImgs/add],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.ProductLeftStyleImgsController.add()
2020-03-14 19:50:12 -Mapped "{[/vr/productLeftStyleImgs/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ProductLeftStyleImgsController.remove(java.lang.Integer)
2020-03-14 19:50:12 -Mapped "{[/vr/productLeftStyleImgs/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ProductLeftStyleImgsController.remove(java.lang.Integer[])
2020-03-14 19:50:12 -Mapped "{[/vr/productLeftStyleImgs/update]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ProductLeftStyleImgsController.update(com.bootdo.vr.domain.ProductLeftStyleImgsDO)
2020-03-14 19:50:12 -Mapped "{[/vr/productLeftStyleImgs/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.vr.controller.ProductLeftStyleImgsController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:50:12 -Mapped "{[/vr/productLeftStyleImgs/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.ProductLeftStyleImgsController.save(com.bootdo.vr.domain.ProductLeftStyleImgsDO)
2020-03-14 19:50:12 -Mapped "{[/vr/productLeftStyleImgs/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.ProductLeftStyleImgsController.edit(java.lang.Integer,org.springframework.ui.Model)
2020-03-14 19:50:12 -Mapped "{[/vr/productLeftStyleImgs],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.ProductLeftStyleImgsController.ProductLeftStyleImgs()
2020-03-14 19:50:12 -Mapped "{[/vr/romeType/add2/{topStyleId}/{leftStyleId}],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.RomeTypeController.add(java.lang.Integer,java.lang.Integer,org.springframework.ui.Model)
2020-03-14 19:50:12 -Mapped "{[/vr/romeType/add],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.RomeTypeController.add(org.springframework.ui.Model)
2020-03-14 19:50:12 -Mapped "{[/vr/romeType/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.RomeTypeController.remove(java.lang.Integer)
2020-03-14 19:50:12 -Mapped "{[/vr/romeType/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.RomeTypeController.remove(java.lang.Integer[])
2020-03-14 19:50:12 -Mapped "{[/vr/romeType/update]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.RomeTypeController.update(com.bootdo.vr.domain.RomeTypeDO)
2020-03-14 19:50:12 -Mapped "{[/vr/romeType/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.vr.controller.RomeTypeController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:50:12 -Mapped "{[/vr/romeType/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.RomeTypeController.save(com.bootdo.vr.domain.RomeTypeDO)
2020-03-14 19:50:12 -Mapped "{[/vr/romeType/edit/{romeId}],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.RomeTypeController.edit(java.lang.Integer,org.springframework.ui.Model)
2020-03-14 19:50:12 -Mapped "{[/vr/romeType/queryRomeTypeByLeftStyleId],methods=[GET]}" onto public java.util.List<com.bootdo.vr.domain.RomeTypeDO> com.bootdo.vr.controller.RomeTypeController.queryRomeTypeByLeftStyleId(java.lang.Integer)
2020-03-14 19:50:12 -Mapped "{[/vr/romeType/uploadImgs],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.RomeTypeController.uploadCad(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2020-03-14 19:50:12 -Mapped "{[/vr/romeType],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.RomeTypeController.RomeType(org.springframework.ui.Model)
2020-03-14 19:50:12 -Mapped "{[/vr/romeType/queryRomeStyles],methods=[GET]}" onto public java.util.List<com.bootdo.vr.domain.RomeTypeDO> com.bootdo.vr.controller.RomeTypeController.queryRomeStyles(java.lang.Integer)
2020-03-14 19:50:12 -Mapped "{[/vr/roomTypeImgs/add],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.RoomTypeImgsController.add()
2020-03-14 19:50:12 -Mapped "{[/vr/roomTypeImgs/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.RoomTypeImgsController.remove(java.lang.Integer)
2020-03-14 19:50:12 -Mapped "{[/vr/roomTypeImgs/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.RoomTypeImgsController.remove(java.lang.Integer[])
2020-03-14 19:50:12 -Mapped "{[/vr/roomTypeImgs/update]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.RoomTypeImgsController.update(com.bootdo.vr.domain.RoomTypeImgsDO)
2020-03-14 19:50:12 -Mapped "{[/vr/roomTypeImgs/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.vr.controller.RoomTypeImgsController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:50:12 -Mapped "{[/vr/roomTypeImgs/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.RoomTypeImgsController.save(com.bootdo.vr.domain.RoomTypeImgsDO)
2020-03-14 19:50:12 -Mapped "{[/vr/roomTypeImgs/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.RoomTypeImgsController.edit(java.lang.Integer,org.springframework.ui.Model)
2020-03-14 19:50:12 -Mapped "{[/vr/roomTypeImgs/rdtTreeByProductId],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.vr.controller.RoomTypeImgsController.rdtTreeByProductId(java.lang.Integer)
2020-03-14 19:50:12 -Mapped "{[/vr/roomTypeImgs],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.RoomTypeImgsController.RoomTypeImgs()
2020-03-14 19:50:12 -Mapped "{[/vr/topStyle/add],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.TopStyleController.add()
2020-03-14 19:50:12 -Mapped "{[/vr/topStyle/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.TopStyleController.remove(java.lang.Integer)
2020-03-14 19:50:12 -Mapped "{[/vr/topStyle/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.TopStyleController.remove(java.lang.Integer[])
2020-03-14 19:50:12 -Mapped "{[/vr/topStyle/update]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.TopStyleController.update(com.bootdo.vr.domain.TopStyleDO)
2020-03-14 19:50:12 -Mapped "{[/vr/topStyle/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.vr.controller.TopStyleController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-03-14 19:50:12 -Mapped "{[/vr/topStyle/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.TopStyleController.save(com.bootdo.vr.domain.TopStyleDO)
2020-03-14 19:50:12 -Mapped "{[/vr/topStyle/edit/{topId}],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.TopStyleController.edit(java.lang.Integer,org.springframework.ui.Model)
2020-03-14 19:50:12 -Mapped "{[/vr/topStyle/uploadBigLog],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.TopStyleController.uploadPic(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2020-03-14 19:50:12 -Mapped "{[/vr/topStyle],methods=[GET]}" onto java.lang.String com.bootdo.vr.controller.TopStyleController.TopStyle()
2020-03-14 19:50:12 -Mapped "{[/vr/all],methods=[GET]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.VrDataController.list(java.lang.String,java.lang.String)
2020-03-14 19:50:12 -Mapped "{[/vr/version],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.vr.controller.VrDataController.version(java.lang.String,java.lang.String)
2020-03-14 19:50:12 -Mapped "{[/vr/down],methods=[GET]}" onto public java.lang.String com.bootdo.vr.controller.VrDataController.appdown(org.springframework.ui.Model) throws java.lang.Exception
2020-03-14 19:50:12 -Mapped "{[/vr/guides],methods=[GET]}" onto public com.bootdo.common.utils.R com.bootdo.vr.controller.VrDataController.guides()
2020-03-14 19:50:12 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-14 19:50:12 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2020-03-14 19:50:12 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2020-03-14 19:50:12 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2020-03-14 19:50:12 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2020-03-14 19:50:12 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2020-03-14 19:50:12 -Initializing ExecutorService  'brokerChannelExecutor'
2020-03-14 19:50:12 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-14 19:50:13 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@56c698e3: startup date [Sat Mar 14 19:50:00 CST 2020]; root of context hierarchy
2020-03-14 19:50:13 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-14 19:50:13 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-14 19:50:13 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-14 19:50:13 -Detected @ExceptionHandler methods in BDExceptionHandler
2020-03-14 19:50:13 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2020-03-14 19:50:14 -Registering beans for JMX exposure on startup
2020-03-14 19:50:14 -Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-14 19:50:14 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2020-03-14 19:50:14 -Starting beans in phase 2147483647
2020-03-14 19:50:14 -Context refreshed
2020-03-14 19:50:14 -Found 1 custom documentation plugin(s)
2020-03-14 19:50:14 -Scanning for api listing references
2020-03-14 19:50:14 -Generating unique operation named: removeUsingPOST_1
2020-03-14 19:50:14 -Generating unique operation named: addUsingGET_1
2020-03-14 19:50:14 -Generating unique operation named: editUsingGET_1
2020-03-14 19:50:14 -Generating unique operation named: listUsingGET_1
2020-03-14 19:50:15 -Generating unique operation named: removeUsingPOST_2
2020-03-14 19:50:15 -Generating unique operation named: removeUsingPOST_3
2020-03-14 19:50:15 -Generating unique operation named: saveUsingPOST_1
2020-03-14 19:50:15 -Generating unique operation named: updateUsingGET_1
2020-03-14 19:50:15 -Generating unique operation named: updateUsingHEAD_1
2020-03-14 19:50:15 -Generating unique operation named: updateUsingPOST_1
2020-03-14 19:50:15 -Generating unique operation named: updateUsingPUT_1
2020-03-14 19:50:15 -Generating unique operation named: updateUsingPATCH_1
2020-03-14 19:50:15 -Generating unique operation named: updateUsingDELETE_1
2020-03-14 19:50:15 -Generating unique operation named: updateUsingOPTIONS_1
2020-03-14 19:50:15 -Generating unique operation named: updateUsingTRACE_1
2020-03-14 19:50:15 -Generating unique operation named: addUsingGET_2
2020-03-14 19:50:15 -Generating unique operation named: editUsingGET_2
2020-03-14 19:50:15 -Generating unique operation named: listUsingGET_2
2020-03-14 19:50:15 -Generating unique operation named: removeUsingPOST_4
2020-03-14 19:50:15 -Generating unique operation named: removeUsingPOST_5
2020-03-14 19:50:15 -Generating unique operation named: saveUsingPOST_2
2020-03-14 19:50:15 -Generating unique operation named: updateUsingGET_2
2020-03-14 19:50:15 -Generating unique operation named: updateUsingHEAD_2
2020-03-14 19:50:15 -Generating unique operation named: updateUsingPOST_2
2020-03-14 19:50:15 -Generating unique operation named: updateUsingPUT_2
2020-03-14 19:50:15 -Generating unique operation named: updateUsingPATCH_2
2020-03-14 19:50:15 -Generating unique operation named: updateUsingDELETE_2
2020-03-14 19:50:15 -Generating unique operation named: updateUsingOPTIONS_2
2020-03-14 19:50:15 -Generating unique operation named: updateUsingTRACE_2
2020-03-14 19:50:15 -Generating unique operation named: addUsingGET_3
2020-03-14 19:50:15 -Generating unique operation named: editUsingGET_3
2020-03-14 19:50:15 -Generating unique operation named: listUsingGET_3
2020-03-14 19:50:15 -Generating unique operation named: removeUsingPOST_6
2020-03-14 19:50:15 -Generating unique operation named: removeUsingPOST_7
2020-03-14 19:50:15 -Generating unique operation named: saveUsingPOST_3
2020-03-14 19:50:15 -Generating unique operation named: updateUsingGET_3
2020-03-14 19:50:15 -Generating unique operation named: updateUsingHEAD_3
2020-03-14 19:50:15 -Generating unique operation named: updateUsingPOST_3
2020-03-14 19:50:15 -Generating unique operation named: updateUsingPUT_3
2020-03-14 19:50:15 -Generating unique operation named: updateUsingPATCH_3
2020-03-14 19:50:15 -Generating unique operation named: updateUsingDELETE_3
2020-03-14 19:50:15 -Generating unique operation named: updateUsingOPTIONS_3
2020-03-14 19:50:15 -Generating unique operation named: updateUsingTRACE_3
2020-03-14 19:50:15 -Generating unique operation named: addUsingGET_4
2020-03-14 19:50:15 -Generating unique operation named: editUsingGET_4
2020-03-14 19:50:15 -Generating unique operation named: listUsingGET_4
2020-03-14 19:50:15 -Generating unique operation named: removeUsingPOST_8
2020-03-14 19:50:15 -Generating unique operation named: removeUsingPOST_9
2020-03-14 19:50:15 -Generating unique operation named: saveUsingPOST_4
2020-03-14 19:50:15 -Generating unique operation named: updateUsingGET_4
2020-03-14 19:50:15 -Generating unique operation named: updateUsingHEAD_4
2020-03-14 19:50:15 -Generating unique operation named: updateUsingPOST_4
2020-03-14 19:50:15 -Generating unique operation named: updateUsingPUT_4
2020-03-14 19:50:15 -Generating unique operation named: updateUsingPATCH_4
2020-03-14 19:50:15 -Generating unique operation named: updateUsingDELETE_4
2020-03-14 19:50:15 -Generating unique operation named: updateUsingOPTIONS_4
2020-03-14 19:50:15 -Generating unique operation named: updateUsingTRACE_4
2020-03-14 19:50:15 -Generating unique operation named: addUsingGET_5
2020-03-14 19:50:15 -Generating unique operation named: editUsingGET_5
2020-03-14 19:50:15 -Generating unique operation named: listUsingGET_5
2020-03-14 19:50:15 -Generating unique operation named: removeUsingPOST_10
2020-03-14 19:50:15 -Generating unique operation named: removeUsingPOST_11
2020-03-14 19:50:15 -Generating unique operation named: saveUsingPOST_5
2020-03-14 19:50:15 -Generating unique operation named: updateUsingGET_5
2020-03-14 19:50:15 -Generating unique operation named: updateUsingHEAD_5
2020-03-14 19:50:15 -Generating unique operation named: updateUsingPOST_5
2020-03-14 19:50:15 -Generating unique operation named: updateUsingPUT_5
2020-03-14 19:50:15 -Generating unique operation named: updateUsingPATCH_5
2020-03-14 19:50:15 -Generating unique operation named: updateUsingDELETE_5
2020-03-14 19:50:15 -Generating unique operation named: updateUsingOPTIONS_5
2020-03-14 19:50:15 -Generating unique operation named: updateUsingTRACE_5
2020-03-14 19:50:15 -Generating unique operation named: uploadUsingPOST_1
2020-03-14 19:50:15 -Generating unique operation named: editUsingGET_6
2020-03-14 19:50:15 -Generating unique operation named: listUsingGET_6
2020-03-14 19:50:15 -Generating unique operation named: updateUsingPOST_6
2020-03-14 19:50:15 -Generating unique operation named: addUsingGET_6
2020-03-14 19:50:15 -Generating unique operation named: editUsingGET_7
2020-03-14 19:50:15 -Generating unique operation named: listUsingGET_7
2020-03-14 19:50:15 -Generating unique operation named: removeUsingPOST_12
2020-03-14 19:50:15 -Generating unique operation named: removeUsingPOST_13
2020-03-14 19:50:15 -Generating unique operation named: saveUsingPOST_6
2020-03-14 19:50:15 -Generating unique operation named: updateUsingGET_6
2020-03-14 19:50:15 -Generating unique operation named: updateUsingHEAD_6
2020-03-14 19:50:15 -Generating unique operation named: updateUsingPOST_7
2020-03-14 19:50:15 -Generating unique operation named: updateUsingPUT_6
2020-03-14 19:50:15 -Generating unique operation named: updateUsingPATCH_6
2020-03-14 19:50:15 -Generating unique operation named: updateUsingDELETE_6
2020-03-14 19:50:15 -Generating unique operation named: updateUsingOPTIONS_6
2020-03-14 19:50:15 -Generating unique operation named: updateUsingTRACE_6
2020-03-14 19:50:15 -Generating unique operation named: uploadColorLogoUsingPOST_1
2020-03-14 19:50:15 -Generating unique operation named: addUsingGET_7
2020-03-14 19:50:15 -Generating unique operation named: editUsingGET_8
2020-03-14 19:50:15 -Generating unique operation named: infoUsingGET_1
2020-03-14 19:50:15 -Generating unique operation named: infoUsingHEAD_1
2020-03-14 19:50:15 -Generating unique operation named: infoUsingPOST_1
2020-03-14 19:50:15 -Generating unique operation named: infoUsingPUT_1
2020-03-14 19:50:15 -Generating unique operation named: infoUsingPATCH_1
2020-03-14 19:50:15 -Generating unique operation named: infoUsingDELETE_1
2020-03-14 19:50:15 -Generating unique operation named: infoUsingOPTIONS_1
2020-03-14 19:50:15 -Generating unique operation named: infoUsingTRACE_1
2020-03-14 19:50:15 -Generating unique operation named: listUsingGET_8
2020-03-14 19:50:15 -Generating unique operation named: removeUsingPOST_14
2020-03-14 19:50:15 -Generating unique operation named: removeUsingPOST_15
2020-03-14 19:50:15 -Generating unique operation named: saveUsingPOST_7
2020-03-14 19:50:15 -Generating unique operation named: updateUsingPOST_8
2020-03-14 19:50:15 -Generating unique operation named: editUsingGET_9
2020-03-14 19:50:15 -Generating unique operation named: addUsingGET_8
2020-03-14 19:50:15 -Generating unique operation named: addUsingGET_9
2020-03-14 19:50:15 -Generating unique operation named: editUsingGET_10
2020-03-14 19:50:15 -Generating unique operation named: listUsingGET_9
2020-03-14 19:50:15 -Generating unique operation named: removeUsingPOST_16
2020-03-14 19:50:15 -Generating unique operation named: removeUsingPOST_17
2020-03-14 19:50:15 -Generating unique operation named: saveUsingPOST_8
2020-03-14 19:50:15 -Generating unique operation named: updateUsingGET_7
2020-03-14 19:50:15 -Generating unique operation named: updateUsingHEAD_7
2020-03-14 19:50:15 -Generating unique operation named: updateUsingPOST_9
2020-03-14 19:50:15 -Generating unique operation named: updateUsingPUT_7
2020-03-14 19:50:15 -Generating unique operation named: updateUsingPATCH_7
2020-03-14 19:50:15 -Generating unique operation named: updateUsingDELETE_7
2020-03-14 19:50:15 -Generating unique operation named: updateUsingOPTIONS_7
2020-03-14 19:50:15 -Generating unique operation named: updateUsingTRACE_7
2020-03-14 19:50:15 -Generating unique operation named: addUsingGET_10
2020-03-14 19:50:15 -Generating unique operation named: editUsingGET_11
2020-03-14 19:50:15 -Generating unique operation named: listUsingGET_10
2020-03-14 19:50:15 -Generating unique operation named: removeUsingPOST_18
2020-03-14 19:50:16 -Generating unique operation named: removeUsingPOST_19
2020-03-14 19:50:16 -Generating unique operation named: saveUsingPOST_9
2020-03-14 19:50:16 -Generating unique operation named: updateUsingGET_8
2020-03-14 19:50:16 -Generating unique operation named: updateUsingHEAD_8
2020-03-14 19:50:16 -Generating unique operation named: updateUsingPOST_10
2020-03-14 19:50:16 -Generating unique operation named: updateUsingPUT_8
2020-03-14 19:50:16 -Generating unique operation named: updateUsingPATCH_8
2020-03-14 19:50:16 -Generating unique operation named: updateUsingDELETE_8
2020-03-14 19:50:16 -Generating unique operation named: updateUsingOPTIONS_8
2020-03-14 19:50:16 -Generating unique operation named: updateUsingTRACE_8
2020-03-14 19:50:16 -Generating unique operation named: addUsingGET_11
2020-03-14 19:50:16 -Generating unique operation named: editUsingGET_12
2020-03-14 19:50:16 -Generating unique operation named: listUsingGET_11
2020-03-14 19:50:16 -Generating unique operation named: removeUsingPOST_20
2020-03-14 19:50:16 -Generating unique operation named: removeUsingPOST_21
2020-03-14 19:50:16 -Generating unique operation named: saveUsingPOST_10
2020-03-14 19:50:16 -Generating unique operation named: updateUsingGET_9
2020-03-14 19:50:16 -Generating unique operation named: updateUsingHEAD_9
2020-03-14 19:50:16 -Generating unique operation named: updateUsingPOST_11
2020-03-14 19:50:16 -Generating unique operation named: updateUsingPUT_9
2020-03-14 19:50:16 -Generating unique operation named: updateUsingPATCH_9
2020-03-14 19:50:16 -Generating unique operation named: updateUsingDELETE_9
2020-03-14 19:50:16 -Generating unique operation named: updateUsingOPTIONS_9
2020-03-14 19:50:16 -Generating unique operation named: updateUsingTRACE_9
2020-03-14 19:50:16 -Generating unique operation named: listUsingGET_12
2020-03-14 19:50:16 -Generating unique operation named: removeUsingPOST_22
2020-03-14 19:50:16 -Generating unique operation named: welcomeUsingGET_1
2020-03-14 19:50:16 -Generating unique operation named: addUsingGET_12
2020-03-14 19:50:16 -Generating unique operation named: editUsingGET_13
2020-03-14 19:50:16 -Generating unique operation named: listUsingGET_13
2020-03-14 19:50:16 -Generating unique operation named: removeUsingPOST_23
2020-03-14 19:50:16 -Generating unique operation named: saveUsingPOST_11
2020-03-14 19:50:16 -Generating unique operation named: treeUsingGET_1
2020-03-14 19:50:16 -Generating unique operation named: treeUsingGET_2
2020-03-14 19:50:16 -Generating unique operation named: updateUsingPOST_12
2020-03-14 19:50:16 -Generating unique operation named: batchRemoveUsingPOST_1
2020-03-14 19:50:16 -Generating unique operation named: editUsingGET_14
2020-03-14 19:50:16 -Generating unique operation named: listUsingGET_14
2020-03-14 19:50:16 -Generating unique operation named: addUsingGET_13
2020-03-14 19:50:16 -Generating unique operation named: editUsingGET_15
2020-03-14 19:50:16 -Generating unique operation named: listUsingGET_15
2020-03-14 19:50:16 -Generating unique operation named: removeUsingPOST_24
2020-03-14 19:50:16 -Generating unique operation named: removeUsingPOST_25
2020-03-14 19:50:16 -Generating unique operation named: saveUsingPOST_12
2020-03-14 19:50:16 -Generating unique operation named: updateUsingGET_10
2020-03-14 19:50:16 -Generating unique operation named: updateUsingHEAD_10
2020-03-14 19:50:16 -Generating unique operation named: updateUsingPOST_13
2020-03-14 19:50:16 -Generating unique operation named: updateUsingPUT_10
2020-03-14 19:50:16 -Generating unique operation named: updateUsingPATCH_10
2020-03-14 19:50:16 -Generating unique operation named: updateUsingDELETE_10
2020-03-14 19:50:16 -Generating unique operation named: updateUsingOPTIONS_10
2020-03-14 19:50:16 -Generating unique operation named: updateUsingTRACE_10
2020-03-14 19:50:16 -Generating unique operation named: addUsingGET_14
2020-03-14 19:50:16 -Generating unique operation named: batchRemoveUsingPOST_2
2020-03-14 19:50:16 -Generating unique operation named: deployUsingPOST_1
2020-03-14 19:50:16 -Generating unique operation named: listUsingGET_16
2020-03-14 19:50:16 -Generating unique operation named: removeUsingPOST_26
2020-03-14 19:50:16 -Generating unique operation named: addUsingGET_15
2020-03-14 19:50:16 -Generating unique operation named: editUsingGET_16
2020-03-14 19:50:16 -Generating unique operation named: listUsingGET_17
2020-03-14 19:50:16 -Generating unique operation named: removeUsingPOST_27
2020-03-14 19:50:16 -Generating unique operation named: removeUsingPOST_28
2020-03-14 19:50:16 -Generating unique operation named: saveUsingPOST_13
2020-03-14 19:50:16 -Generating unique operation named: updateUsingGET_11
2020-03-14 19:50:16 -Generating unique operation named: updateUsingHEAD_11
2020-03-14 19:50:16 -Generating unique operation named: updateUsingPOST_14
2020-03-14 19:50:16 -Generating unique operation named: updateUsingPUT_11
2020-03-14 19:50:16 -Generating unique operation named: updateUsingPATCH_11
2020-03-14 19:50:16 -Generating unique operation named: updateUsingDELETE_11
2020-03-14 19:50:16 -Generating unique operation named: updateUsingOPTIONS_11
2020-03-14 19:50:16 -Generating unique operation named: updateUsingTRACE_11
2020-03-14 19:50:16 -Generating unique operation named: addUsingGET_16
2020-03-14 19:50:16 -Generating unique operation named: editUsingGET_17
2020-03-14 19:50:16 -Generating unique operation named: listUsingGET_18
2020-03-14 19:50:16 -Generating unique operation named: removeUsingPOST_29
2020-03-14 19:50:16 -Generating unique operation named: removeUsingPOST_30
2020-03-14 19:50:16 -Generating unique operation named: saveUsingPOST_14
2020-03-14 19:50:16 -Generating unique operation named: updateUsingGET_12
2020-03-14 19:50:16 -Generating unique operation named: updateUsingHEAD_12
2020-03-14 19:50:16 -Generating unique operation named: updateUsingPOST_15
2020-03-14 19:50:16 -Generating unique operation named: updateUsingPUT_12
2020-03-14 19:50:16 -Generating unique operation named: updateUsingPATCH_12
2020-03-14 19:50:16 -Generating unique operation named: updateUsingDELETE_12
2020-03-14 19:50:16 -Generating unique operation named: updateUsingOPTIONS_12
2020-03-14 19:50:16 -Generating unique operation named: updateUsingTRACE_12
2020-03-14 19:50:16 -Generating unique operation named: addUsingGET_17
2020-03-14 19:50:16 -Generating unique operation named: editUsingGET_18
2020-03-14 19:50:16 -Generating unique operation named: listUsingGET_19
2020-03-14 19:50:16 -Generating unique operation named: removeUsingPOST_31
2020-03-14 19:50:16 -Generating unique operation named: removeUsingPOST_32
2020-03-14 19:50:16 -Generating unique operation named: saveUsingPOST_15
2020-03-14 19:50:16 -Generating unique operation named: updateUsingGET_13
2020-03-14 19:50:16 -Generating unique operation named: updateUsingHEAD_13
2020-03-14 19:50:16 -Generating unique operation named: updateUsingPOST_16
2020-03-14 19:50:16 -Generating unique operation named: updateUsingPUT_13
2020-03-14 19:50:16 -Generating unique operation named: updateUsingPATCH_13
2020-03-14 19:50:16 -Generating unique operation named: updateUsingDELETE_13
2020-03-14 19:50:16 -Generating unique operation named: updateUsingOPTIONS_13
2020-03-14 19:50:16 -Generating unique operation named: updateUsingTRACE_13
2020-03-14 19:50:16 -Generating unique operation named: uploadColorLogoUsingPOST_2
2020-03-14 19:50:16 -Generating unique operation named: addUsingGET_18
2020-03-14 19:50:16 -Generating unique operation named: editUsingGET_19
2020-03-14 19:50:16 -Generating unique operation named: listUsingGET_20
2020-03-14 19:50:16 -Generating unique operation named: removeUsingPOST_33
2020-03-14 19:50:16 -Generating unique operation named: removeUsingPOST_34
2020-03-14 19:50:16 -Generating unique operation named: saveUsingPOST_16
2020-03-14 19:50:16 -Generating unique operation named: updateUsingGET_14
2020-03-14 19:50:16 -Generating unique operation named: updateUsingHEAD_14
2020-03-14 19:50:16 -Generating unique operation named: updateUsingPOST_17
2020-03-14 19:50:16 -Generating unique operation named: updateUsingPUT_14
2020-03-14 19:50:16 -Generating unique operation named: updateUsingPATCH_14
2020-03-14 19:50:16 -Generating unique operation named: updateUsingDELETE_14
2020-03-14 19:50:16 -Generating unique operation named: updateUsingOPTIONS_14
2020-03-14 19:50:16 -Generating unique operation named: updateUsingTRACE_14
2020-03-14 19:50:16 -Generating unique operation named: addUsingGET_19
2020-03-14 19:50:16 -Generating unique operation named: editUsingGET_20
2020-03-14 19:50:16 -Generating unique operation named: listUsingGET_21
2020-03-14 19:50:16 -Generating unique operation named: removeUsingPOST_35
2020-03-14 19:50:16 -Generating unique operation named: removeUsingPOST_36
2020-03-14 19:50:16 -Generating unique operation named: saveUsingPOST_17
2020-03-14 19:50:16 -Generating unique operation named: updateUsingGET_15
2020-03-14 19:50:16 -Generating unique operation named: updateUsingHEAD_15
2020-03-14 19:50:16 -Generating unique operation named: updateUsingPOST_18
2020-03-14 19:50:16 -Generating unique operation named: updateUsingPUT_15
2020-03-14 19:50:16 -Generating unique operation named: updateUsingPATCH_15
2020-03-14 19:50:16 -Generating unique operation named: updateUsingDELETE_15
2020-03-14 19:50:16 -Generating unique operation named: updateUsingOPTIONS_15
2020-03-14 19:50:16 -Generating unique operation named: updateUsingTRACE_15
2020-03-14 19:50:16 -Generating unique operation named: addUsingGET_20
2020-03-14 19:50:16 -Generating unique operation named: batchRemoveUsingPOST_3
2020-03-14 19:50:16 -Generating unique operation named: editUsingGET_21
2020-03-14 19:50:16 -Generating unique operation named: listUsingGET_22
2020-03-14 19:50:16 -Generating unique operation named: saveUsingPOST_18
2020-03-14 19:50:16 -Generating unique operation named: saveUsingPOST_19
2020-03-14 19:50:16 -Generating unique operation named: updateUsingPOST_19
2020-03-14 19:50:16 -Generating unique operation named: addUsingGET_21
2020-03-14 19:50:17 -Generating unique operation named: addUsingGET_22
2020-03-14 19:50:17 -Generating unique operation named: editUsingGET_22
2020-03-14 19:50:17 -Generating unique operation named: listUsingGET_23
2020-03-14 19:50:17 -Generating unique operation named: removeUsingPOST_37
2020-03-14 19:50:17 -Generating unique operation named: removeUsingPOST_38
2020-03-14 19:50:17 -Generating unique operation named: saveUsingPOST_20
2020-03-14 19:50:17 -Generating unique operation named: updateUsingGET_16
2020-03-14 19:50:17 -Generating unique operation named: updateUsingHEAD_16
2020-03-14 19:50:17 -Generating unique operation named: updateUsingPOST_20
2020-03-14 19:50:17 -Generating unique operation named: updateUsingPUT_16
2020-03-14 19:50:17 -Generating unique operation named: updateUsingPATCH_16
2020-03-14 19:50:17 -Generating unique operation named: updateUsingDELETE_16
2020-03-14 19:50:17 -Generating unique operation named: updateUsingOPTIONS_16
2020-03-14 19:50:17 -Generating unique operation named: updateUsingTRACE_16
2020-03-14 19:50:17 -Generating unique operation named: uploadCadUsingPOST_1
2020-03-14 19:50:17 -Generating unique operation named: addUsingGET_23
2020-03-14 19:50:17 -Generating unique operation named: editUsingGET_23
2020-03-14 19:50:17 -Generating unique operation named: listUsingGET_24
2020-03-14 19:50:17 -Generating unique operation named: rdtTreeByProductIdUsingGET_1
2020-03-14 19:50:17 -Generating unique operation named: removeUsingPOST_39
2020-03-14 19:50:17 -Generating unique operation named: removeUsingPOST_40
2020-03-14 19:50:17 -Generating unique operation named: saveUsingPOST_21
2020-03-14 19:50:17 -Generating unique operation named: updateUsingGET_17
2020-03-14 19:50:17 -Generating unique operation named: updateUsingHEAD_17
2020-03-14 19:50:17 -Generating unique operation named: updateUsingPOST_21
2020-03-14 19:50:17 -Generating unique operation named: updateUsingPUT_17
2020-03-14 19:50:17 -Generating unique operation named: updateUsingPATCH_17
2020-03-14 19:50:17 -Generating unique operation named: updateUsingDELETE_17
2020-03-14 19:50:17 -Generating unique operation named: updateUsingOPTIONS_17
2020-03-14 19:50:17 -Generating unique operation named: updateUsingTRACE_17
2020-03-14 19:50:17 -Generating unique operation named: addUsingGET_24
2020-03-14 19:50:17 -Generating unique operation named: editUsingGET_24
2020-03-14 19:50:17 -Generating unique operation named: listUsingGET_25
2020-03-14 19:50:17 -Generating unique operation named: removeUsingPOST_41
2020-03-14 19:50:17 -Generating unique operation named: removeUsingPOST_42
2020-03-14 19:50:17 -Generating unique operation named: updateUsingGET_18
2020-03-14 19:50:17 -Generating unique operation named: updateUsingHEAD_18
2020-03-14 19:50:17 -Generating unique operation named: updateUsingPOST_22
2020-03-14 19:50:17 -Generating unique operation named: updateUsingPUT_18
2020-03-14 19:50:17 -Generating unique operation named: updateUsingPATCH_18
2020-03-14 19:50:17 -Generating unique operation named: updateUsingDELETE_18
2020-03-14 19:50:17 -Generating unique operation named: updateUsingOPTIONS_18
2020-03-14 19:50:17 -Generating unique operation named: updateUsingTRACE_18
2020-03-14 19:50:17 -Generating unique operation named: listUsingGET_26
2020-03-14 19:50:17 -Generating unique operation named: listUsingHEAD_1
2020-03-14 19:50:17 -Generating unique operation named: listUsingPOST_1
2020-03-14 19:50:17 -Generating unique operation named: listUsingPUT_1
2020-03-14 19:50:17 -Generating unique operation named: listUsingPATCH_1
2020-03-14 19:50:17 -Generating unique operation named: listUsingDELETE_1
2020-03-14 19:50:17 -Generating unique operation named: listUsingOPTIONS_1
2020-03-14 19:50:17 -Generating unique operation named: listUsingTRACE_1
2020-03-14 19:50:17 -Generating unique operation named: addUsingGET_25
2020-03-14 19:50:17 -Generating unique operation named: editUsingGET_25
2020-03-14 19:50:17 -Generating unique operation named: listUsingGET_27
2020-03-14 19:50:17 -Generating unique operation named: removeUsingPOST_43
2020-03-14 19:50:17 -Generating unique operation named: removeUsingPOST_44
2020-03-14 19:50:17 -Generating unique operation named: saveUsingPOST_22
2020-03-14 19:50:17 -Generating unique operation named: updateUsingGET_19
2020-03-14 19:50:17 -Generating unique operation named: updateUsingHEAD_19
2020-03-14 19:50:17 -Generating unique operation named: updateUsingPOST_23
2020-03-14 19:50:17 -Generating unique operation named: updateUsingPUT_19
2020-03-14 19:50:17 -Generating unique operation named: updateUsingPATCH_19
2020-03-14 19:50:17 -Generating unique operation named: updateUsingDELETE_19
2020-03-14 19:50:17 -Generating unique operation named: updateUsingOPTIONS_19
2020-03-14 19:50:17 -Generating unique operation named: updateUsingTRACE_19
2020-03-14 19:50:17 -Generating unique operation named: addUsingGET_26
2020-03-14 19:50:17 -Generating unique operation named: editUsingGET_26
2020-03-14 19:50:17 -Generating unique operation named: listUsingGET_28
2020-03-14 19:50:17 -Generating unique operation named: removeUsingPOST_45
2020-03-14 19:50:17 -Generating unique operation named: removeUsingPOST_46
2020-03-14 19:50:17 -Generating unique operation named: saveUsingPOST_23
2020-03-14 19:50:17 -Generating unique operation named: updateUsingGET_20
2020-03-14 19:50:17 -Generating unique operation named: updateUsingHEAD_20
2020-03-14 19:50:17 -Generating unique operation named: updateUsingPOST_24
2020-03-14 19:50:17 -Generating unique operation named: updateUsingPUT_20
2020-03-14 19:50:17 -Generating unique operation named: updateUsingPATCH_20
2020-03-14 19:50:17 -Generating unique operation named: updateUsingDELETE_20
2020-03-14 19:50:17 -Generating unique operation named: updateUsingOPTIONS_20
2020-03-14 19:50:17 -Generating unique operation named: updateUsingTRACE_20
2020-03-14 19:50:17 -Generating unique operation named: addUsingGET_27
2020-03-14 19:50:17 -Generating unique operation named: editUsingGET_27
2020-03-14 19:50:17 -Generating unique operation named: listUsingGET_29
2020-03-14 19:50:17 -Generating unique operation named: removeUsingPOST_47
2020-03-14 19:50:17 -Generating unique operation named: removeUsingPOST_48
2020-03-14 19:50:17 -Generating unique operation named: saveUsingPOST_24
2020-03-14 19:50:17 -Generating unique operation named: updateUsingGET_21
2020-03-14 19:50:17 -Generating unique operation named: updateUsingHEAD_21
2020-03-14 19:50:17 -Generating unique operation named: updateUsingPOST_25
2020-03-14 19:50:17 -Generating unique operation named: updateUsingPUT_21
2020-03-14 19:50:17 -Generating unique operation named: updateUsingPATCH_21
2020-03-14 19:50:17 -Generating unique operation named: updateUsingDELETE_21
2020-03-14 19:50:17 -Generating unique operation named: updateUsingOPTIONS_21
2020-03-14 19:50:17 -Generating unique operation named: updateUsingTRACE_21
2020-03-14 19:50:17 -Generating unique operation named: addUsingGET_28
2020-03-14 19:50:17 -Generating unique operation named: editUsingGET_28
2020-03-14 19:50:17 -Generating unique operation named: listUsingGET_30
2020-03-14 19:50:17 -Generating unique operation named: removeUsingPOST_49
2020-03-14 19:50:17 -Generating unique operation named: removeUsingPOST_50
2020-03-14 19:50:17 -Generating unique operation named: saveUsingPOST_25
2020-03-14 19:50:17 -Generating unique operation named: updateUsingGET_22
2020-03-14 19:50:17 -Generating unique operation named: updateUsingHEAD_22
2020-03-14 19:50:17 -Generating unique operation named: updateUsingPOST_26
2020-03-14 19:50:17 -Generating unique operation named: updateUsingPUT_22
2020-03-14 19:50:17 -Generating unique operation named: updateUsingPATCH_22
2020-03-14 19:50:17 -Generating unique operation named: updateUsingDELETE_22
2020-03-14 19:50:17 -Generating unique operation named: updateUsingOPTIONS_22
2020-03-14 19:50:17 -Generating unique operation named: updateUsingTRACE_22
2020-03-14 19:50:17 -Generating unique operation named: listUsingGET_31
2020-03-14 19:50:17 -Generating unique operation named: addUsingGET_29
2020-03-14 19:50:17 -Generating unique operation named: editUsingGET_29
2020-03-14 19:50:17 -Generating unique operation named: listUsingGET_32
2020-03-14 19:50:17 -Generating unique operation named: removeUsingPOST_51
2020-03-14 19:50:17 -Generating unique operation named: removeUsingPOST_52
2020-03-14 19:50:17 -Generating unique operation named: saveUsingPOST_26
2020-03-14 19:50:17 -Generating unique operation named: updateUsingGET_23
2020-03-14 19:50:17 -Generating unique operation named: updateUsingHEAD_23
2020-03-14 19:50:17 -Generating unique operation named: updateUsingPOST_27
2020-03-14 19:50:17 -Generating unique operation named: updateUsingPUT_23
2020-03-14 19:50:17 -Generating unique operation named: updateUsingPATCH_23
2020-03-14 19:50:17 -Generating unique operation named: updateUsingDELETE_23
2020-03-14 19:50:17 -Generating unique operation named: updateUsingOPTIONS_23
2020-03-14 19:50:17 -Generating unique operation named: updateUsingTRACE_23
2020-03-14 19:50:17 -Generating unique operation named: uploadPicUsingPOST_1
2020-03-14 19:50:17 -Generating unique operation named: addUsingGET_30
2020-03-14 19:50:17 -Generating unique operation named: batchRemoveUsingPOST_4
2020-03-14 19:50:17 -Generating unique operation named: editUsingGET_30
2020-03-14 19:50:17 -Generating unique operation named: listUsingGET_33
2020-03-14 19:50:17 -Generating unique operation named: removeUsingPOST_53
2020-03-14 19:50:17 -Generating unique operation named: saveUsingPOST_27
2020-03-14 19:50:17 -Generating unique operation named: treeUsingGET_3
2020-03-14 19:50:17 -Generating unique operation named: treeViewUsingGET_1
2020-03-14 19:50:18 -Generating unique operation named: updateUsingPOST_28
2020-03-14 19:50:18 -Generating unique operation named: userUsingGET_1
2020-03-14 19:50:18 -Generating unique operation named: listUsingGET_34
2020-03-14 19:50:18 -Starting Quartz Scheduler now
2020-03-14 19:50:18 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2020-03-14 19:50:18 -Starting...
2020-03-14 19:50:18 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2020-03-14 19:50:18 -Started.
2020-03-14 19:50:18 -Starting ProtocolHandler ["http-nio-8081"]
2020-03-14 19:50:18 -Using a shared selector for servlet write/read
2020-03-14 19:50:18 -Tomcat started on port(s): 8081 (http) with context path ''
2020-03-14 19:50:18 -Started VRApplication in 18.235 seconds (JVM running for 19.465)
2020-03-14 19:50:18 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2020-03-14 19:50:18 -==> Parameters: 
2020-03-14 19:50:18 -<==      Total: 1
2020-03-14 19:50:32 -A cookie header was received [1573183673,1573396117] that contained an invalid cookie. That cookie will be ignored.Note: further occurrences of this error will be logged at DEBUG level.
2020-03-14 19:50:32 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-14 19:50:32 -FrameworkServlet 'dispatcherServlet': initialization started
2020-03-14 19:50:32 -FrameworkServlet 'dispatcherServlet': initialization completed in 50 ms
2020-03-14 19:50:32 -Enabling session validation scheduler...
2020-03-14 19:50:33 -请求地址 : http://localhost:8081/
2020-03-14 19:50:33 -HTTP METHOD : GET
2020-03-14 19:50:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2020-03-14 19:50:33 -参数 : [{}]
2020-03-14 19:50:33 -耗时 : 4
2020-03-14 19:50:33 -返回值 : system/liuyan/index
2020-03-14 19:50:39 -请求地址 : http://localhost:8081/login
2020-03-14 19:50:39 -HTTP METHOD : GET
2020-03-14 19:50:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2020-03-14 19:50:39 -参数 : []
2020-03-14 19:50:39 -耗时 : 0
2020-03-14 19:50:39 -返回值 : login
2020-03-14 19:50:39 -请求地址 : http://localhost:8081/verify/getVerifyCode
2020-03-14 19:50:39 -HTTP METHOD : GET
2020-03-14 19:50:39 -CLASS_METHOD : com.bootdo.common.controller.VerifyCodeController.getVerifyCode
2020-03-14 19:50:39 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@66f08796, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4767ad5f]
2020-03-14 19:50:39 -耗时 : 736
2020-03-14 19:50:39 -返回值 : null
2020-03-14 19:50:39 -请求地址 : http://localhost:8081/login
2020-03-14 19:50:39 -HTTP METHOD : GET
2020-03-14 19:50:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2020-03-14 19:50:39 -参数 : []
2020-03-14 19:50:39 -耗时 : 0
2020-03-14 19:50:39 -返回值 : login
2020-03-14 19:50:46 -请求地址 : http://localhost:8081/verify/checkVerifyCode
2020-03-14 19:50:46 -HTTP METHOD : GET
2020-03-14 19:50:46 -CLASS_METHOD : com.bootdo.common.controller.VerifyCodeController.checkVerifyCode
2020-03-14 19:50:46 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1865071]
2020-03-14 19:50:46 -耗时 : 0
2020-03-14 19:50:46 -返回值 : {msg=验证码不正确, code=500}
2020-03-14 19:50:46 -请求地址 : http://localhost:8081/verify/getVerifyCode
2020-03-14 19:50:46 -HTTP METHOD : GET
2020-03-14 19:50:46 -CLASS_METHOD : com.bootdo.common.controller.VerifyCodeController.getVerifyCode
2020-03-14 19:50:46 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@45ded9d3, org.apache.shiro.web.servlet.ShiroHttpServletResponse@36ae40f7]
2020-03-14 19:50:46 -耗时 : 7
2020-03-14 19:50:46 -返回值 : null
2020-03-14 19:50:51 -请求地址 : http://localhost:8081/verify/checkVerifyCode
2020-03-14 19:50:51 -HTTP METHOD : GET
2020-03-14 19:50:51 -CLASS_METHOD : com.bootdo.common.controller.VerifyCodeController.checkVerifyCode
2020-03-14 19:50:51 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@3aa428c7]
2020-03-14 19:50:51 -耗时 : 0
2020-03-14 19:50:51 -返回值 : {msg=操作成功, code=0}
2020-03-14 19:50:51 -请求地址 : http://localhost:8081/login
2020-03-14 19:50:51 -HTTP METHOD : POST
2020-03-14 19:50:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2020-03-14 19:50:51 -参数 : [admin, 123456, org.apache.shiro.web.servlet.ShiroHttpServletRequest@247ac303]
2020-03-14 19:50:51 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2020-03-14 19:50:51 -==> Parameters: admin(String)
2020-03-14 19:50:51 -<==      Total: 1
2020-03-14 19:50:51 -耗时 : 55
2020-03-14 19:50:51 -返回值 : {msg=用户或密码错误, code=500}
2020-03-14 19:50:51 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2020-03-14 19:50:51 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-14 19:50:51 -请求地址 : http://localhost:8081/verify/getVerifyCode
2020-03-14 19:50:51 -HTTP METHOD : GET
2020-03-14 19:50:51 -CLASS_METHOD : com.bootdo.common.controller.VerifyCodeController.getVerifyCode
2020-03-14 19:50:51 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@41dbaf6f, org.apache.shiro.web.servlet.ShiroHttpServletResponse@535d7463]
2020-03-14 19:50:51 -耗时 : 6
2020-03-14 19:50:51 -返回值 : null
2020-03-14 19:50:51 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 56(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2020-03-14 19:50:51.89(Timestamp)
2020-03-14 19:50:52 -<==    Updates: 1
2020-03-14 19:51:03 -请求地址 : http://localhost:8081/verify/checkVerifyCode
2020-03-14 19:51:03 -HTTP METHOD : GET
2020-03-14 19:51:03 -CLASS_METHOD : com.bootdo.common.controller.VerifyCodeController.checkVerifyCode
2020-03-14 19:51:03 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@3faaa2f1]
2020-03-14 19:51:03 -耗时 : 0
2020-03-14 19:51:03 -返回值 : {msg=操作成功, code=0}
2020-03-14 19:51:03 -请求地址 : http://localhost:8081/login
2020-03-14 19:51:03 -HTTP METHOD : POST
2020-03-14 19:51:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2020-03-14 19:51:03 -参数 : [admin, Hdfz1234@, org.apache.shiro.web.servlet.ShiroHttpServletRequest@596eb6f2]
2020-03-14 19:51:03 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2020-03-14 19:51:03 -==> Parameters: admin(String)
2020-03-14 19:51:03 -<==      Total: 1
2020-03-14 19:51:03 -耗时 : 4
2020-03-14 19:51:03 -返回值 : {msg=用户或密码错误, code=500}
2020-03-14 19:51:03 -请求地址 : http://localhost:8081/verify/getVerifyCode
2020-03-14 19:51:03 -HTTP METHOD : GET
2020-03-14 19:51:03 -CLASS_METHOD : com.bootdo.common.controller.VerifyCodeController.getVerifyCode
2020-03-14 19:51:03 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@24af8d6d, org.apache.shiro.web.servlet.ShiroHttpServletResponse@36d856fd]
2020-03-14 19:51:03 -耗时 : 7
2020-03-14 19:51:03 -返回值 : null
2020-03-14 19:51:03 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-14 19:51:03 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 4(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2020-03-14 19:51:03.272(Timestamp)
2020-03-14 19:51:03 -<==    Updates: 1
2020-03-14 19:51:11 -请求地址 : http://localhost:8081/verify/getVerifyCode
2020-03-14 19:51:11 -HTTP METHOD : GET
2020-03-14 19:51:11 -CLASS_METHOD : com.bootdo.common.controller.VerifyCodeController.getVerifyCode
2020-03-14 19:51:11 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@61b96a4e, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2ed4cf8]
2020-03-14 19:51:11 -耗时 : 9
2020-03-14 19:51:11 -返回值 : null
2020-03-14 19:51:12 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2020-03-14 19:51:16 -请求地址 : http://localhost:8081/verify/checkVerifyCode
2020-03-14 19:51:16 -HTTP METHOD : GET
2020-03-14 19:51:16 -CLASS_METHOD : com.bootdo.common.controller.VerifyCodeController.checkVerifyCode
2020-03-14 19:51:16 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@350b85b1]
2020-03-14 19:51:16 -耗时 : 0
2020-03-14 19:51:16 -返回值 : {msg=操作成功, code=0}
2020-03-14 19:51:16 -请求地址 : http://localhost:8081/login
2020-03-14 19:51:16 -HTTP METHOD : POST
2020-03-14 19:51:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2020-03-14 19:51:16 -参数 : [admin, 111111, org.apache.shiro.web.servlet.ShiroHttpServletRequest@70c47ef2]
2020-03-14 19:51:16 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2020-03-14 19:51:16 -==> Parameters: admin(String)
2020-03-14 19:51:16 -<==      Total: 1
2020-03-14 19:51:16 -耗时 : 15
2020-03-14 19:51:16 -返回值 : {msg=操作成功, code=0}
2020-03-14 19:51:16 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-14 19:51:16 -==> Parameters: 1(Long), admin(String), 登录(String), 15(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2020-03-14 19:51:16.77(Timestamp)
2020-03-14 19:51:16 -请求地址 : http://localhost:8081/index
2020-03-14 19:51:16 -HTTP METHOD : GET
2020-03-14 19:51:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2020-03-14 19:51:16 -参数 : [{}]
2020-03-14 19:51:16 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2020-03-14 19:51:16 -<==    Updates: 1
2020-03-14 19:51:16 -==> Parameters: 1(Long)
2020-03-14 19:51:16 -<==      Total: 38
2020-03-14 19:51:16 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2020-03-14 19:51:16 -==> Parameters: 138(Long)
2020-03-14 19:51:17 -<==      Total: 1
2020-03-14 19:51:17 -耗时 : 243
2020-03-14 19:51:17 -返回值 : index_v1
2020-03-14 19:51:17 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-14 19:51:17 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 243(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"sys/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-th-list","url":"sys/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/sysDept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-bug","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/vr/leftStyle/topleft"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"105","text":"VR管理"},{"attributes":{"icon":"","url":"/vr/productInfo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"105","text":"产品套餐"},{"attributes":{"icon":"","url":"/vr/topStyle"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"106","parentId":"105","text":"大风格类型"},{"attributes":{"icon":"","url":"/vr/leftStyle"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"105","text":"小风格类型"},{"attributes":{"icon":"","url":"/vr/romeType"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"108","parentId":"105","text":"房间类型"},{"attributes":{"icon":"","url":"/vr/colorType"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"105","text":"颜色类型"},{"attributes":{"icon":"","url":"/vr/guide"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"126","parentId":"105","text":"开屏图管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"VR视频管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"common/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"common/job"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"common/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-envelope-square","url":"oa/notify/selfNotify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"},{"attributes":{"icon":"fa fa-pencil-square","url":"oa/notify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"attributes":{"icon":"fa fa-file-image-o","url":"blog/bContent"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"50","parentId":"49","text":"文章列表"}],"hasChildren":true,"hasParent":false,"id":"49","parentId":"0","text":"博客管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-flag","ur(String), 127.0.0.1(String), 2020-03-14 19:51:17.063(Timestamp)
2020-03-14 19:51:17 -请求地址 : http://localhost:8081/main
2020-03-14 19:51:17 -HTTP METHOD : GET
2020-03-14 19:51:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2020-03-14 19:51:17 -参数 : []
2020-03-14 19:51:17 -耗时 : 1
2020-03-14 19:51:17 -返回值 : main
2020-03-14 19:51:17 -<==    Updates: 1
2020-03-14 19:51:17 -请求地址 : http://localhost:8081/oa/notify/message
2020-03-14 19:51:17 -HTTP METHOD : GET
2020-03-14 19:51:17 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2020-03-14 19:51:17 -参数 : []
2020-03-14 19:51:17 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2020-03-14 19:51:17 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2020-03-14 19:51:17 -请求地址 : http://localhost:8081/main
2020-03-14 19:51:17 -HTTP METHOD : GET
2020-03-14 19:51:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2020-03-14 19:51:17 -参数 : []
2020-03-14 19:51:17 -耗时 : 0
2020-03-14 19:51:17 -返回值 : main
2020-03-14 19:51:17 -<==      Total: 0
2020-03-14 19:51:17 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2020-03-14 19:51:17 -==> Parameters: 1(Long), 0(String)
2020-03-14 19:51:17 -<==      Total: 1
2020-03-14 19:51:17 -耗时 : 261
2020-03-14 19:51:17 -返回值 : com.bootdo.common.utils.PageUtils@1de55334
2020-03-14 19:51:25 -请求地址 : http://localhost:8081/common/generator
2020-03-14 19:51:25 -HTTP METHOD : GET
2020-03-14 19:51:25 -CLASS_METHOD : com.bootdo.common.controller.GeneratorController.generator
2020-03-14 19:51:25 -参数 : []
2020-03-14 19:51:25 -耗时 : 0
2020-03-14 19:51:25 -返回值 : common/generator/list
2020-03-14 19:51:25 -请求地址 : http://localhost:8081/common/generator/list
2020-03-14 19:51:25 -HTTP METHOD : GET
2020-03-14 19:51:25 -CLASS_METHOD : com.bootdo.common.controller.GeneratorController.list
2020-03-14 19:51:25 -参数 : []
2020-03-14 19:51:25 -==>  Preparing: select table_name tableName, engine, table_comment tableComment, create_time createTime from information_schema.tables where table_schema = (select database()) 
2020-03-14 19:51:25 -==> Parameters: 
2020-03-14 19:51:25 -<==      Total: 59
2020-03-14 19:51:25 -耗时 : 78
2020-03-14 19:51:25 -返回值 : [{createTime=2019-04-06 17:04:14.0, ENGINE=InnoDB, tableComment=, tableName=act_evt_log}, {createTime=2019-04-06 17:04:15.0, ENGINE=InnoDB, tableComment=, tableName=act_ge_bytearray}, {createTime=2019-04-06 17:04:15.0, ENGINE=InnoDB, tableComment=, tableName=act_ge_property}, {createTime=2019-04-06 17:04:16.0, ENGINE=InnoDB, tableComment=, tableName=act_hi_actinst}, {createTime=2019-04-06 17:04:16.0, ENGINE=InnoDB, tableComment=, tableName=act_hi_attachment}, {createTime=2019-04-06 17:04:17.0, ENGINE=InnoDB, tableComment=, tableName=act_hi_comment}, {createTime=2019-04-06 17:04:17.0, ENGINE=InnoDB, tableComment=, tableName=act_hi_detail}, {createTime=2019-04-06 17:04:18.0, ENGINE=InnoDB, tableComment=, tableName=act_hi_identitylink}, {createTime=2019-04-06 17:04:18.0, ENGINE=InnoDB, tableComment=, tableName=act_hi_procinst}, {createTime=2019-04-06 17:04:19.0, ENGINE=InnoDB, tableComment=, tableName=act_hi_taskinst}, {createTime=2019-04-06 17:04:20.0, ENGINE=InnoDB, tableComment=, tableName=act_hi_varinst}, {createTime=2019-04-06 17:04:20.0, ENGINE=InnoDB, tableComment=, tableName=act_id_group}, {createTime=2019-04-06 17:04:21.0, ENGINE=InnoDB, tableComment=, tableName=act_id_info}, {createTime=2019-04-06 17:04:21.0, ENGINE=InnoDB, tableComment=, tableName=act_id_membership}, {createTime=2019-04-06 17:04:22.0, ENGINE=InnoDB, tableComment=, tableName=act_id_user}, {createTime=2019-04-06 17:04:22.0, ENGINE=InnoDB, tableComment=, tableName=act_procdef_info}, {createTime=2019-04-06 17:04:23.0, ENGINE=InnoDB, tableComment=, tableName=act_re_deployment}, {createTime=2019-04-06 17:04:24.0, ENGINE=InnoDB, tableComment=, tableName=act_re_model}, {createTime=2019-04-06 17:04:25.0, ENGINE=InnoDB, tableComment=, tableName=act_re_procdef}, {createTime=2019-04-06 17:04:25.0, ENGINE=InnoDB, tableComment=, tableName=act_ru_event_subscr}, {createTime=2019-04-06 17:04:26.0, ENGINE=InnoDB, tableComment=, tableName=act_ru_execution}, {createTime=2019-04-06 17:04:27.0, ENGINE=InnoDB, tableComment=, tableName=act_ru_identitylink}, {createTime=2019-04-06 17:04:27.0, ENGINE=InnoDB, tableComment=, tableName=act_ru_job}, {createTime=2019-04-06 17:04:28.0, ENGINE=InnoDB, tableComment=, tableName=act_ru_task}, {createTime=2019-04-06 17:04:29.0, ENGINE=InnoDB, tableComment=, tableName=act_ru_variable}, {createTime=2019-04-06 17:04:29.0, ENGINE=InnoDB, tableComment=文章内容, tableName=blog_content}, {createTime=2019-04-06 17:19:04.0, ENGINE=InnoDB, tableComment=, tableName=company_liuyan}, {createTime=2019-07-04 23:16:41.0, ENGINE=InnoDB, tableComment=, tableName=lc_app_version}, {createTime=2019-04-06 17:04:30.0, ENGINE=InnoDB, tableComment=通知通告, tableName=oa_notify}, {createTime=2019-04-06 17:04:31.0, ENGINE=InnoDB, tableComment=通知通告发送记录, tableName=oa_notify_record}, {createTime=2019-04-06 17:04:31.0, ENGINE=InnoDB, tableComment=审批流程测试表, tableName=salary}, {createTime=2019-11-01 23:44:07.0, ENGINE=InnoDB, tableComment=库存管理 - 商品库, tableName=stock_goods}, {createTime=2019-11-02 00:08:42.0, ENGINE=InnoDB, tableComment=库存管理 - 商品入库表, tableName=stock_in}, {createTime=2019-11-01 20:06:44.0, ENGINE=InnoDB, tableComment=库存管理 - 商品出库(卖出)表, tableName=stock_out}, {createTime=2019-11-01 20:00:18.0, ENGINE=InnoDB, tableComment=库存管理 - 商品分类表, tableName=stock_type}, {createTime=2019-04-06 17:04:32.0, ENGINE=InnoDB, tableComment=部门管理, tableName=sys_dept}, {createTime=2019-04-06 17:04:33.0, ENGINE=InnoDB, tableComment=字典表, tableName=sys_dict}, {createTime=2019-04-06 17:04:33.0, ENGINE=InnoDB, tableComment=文件上传, tableName=sys_file}, {createTime=2019-04-06 17:04:34.0, ENGINE=InnoDB, tableComment=系统日志, tableName=sys_log}, {createTime=2019-04-06 17:04:34.0, ENGINE=InnoDB, tableComment=菜单管理, tableName=sys_menu}, {createTime=2019-04-06 17:04:35.0, ENGINE=InnoDB, tableComment=角色, tableName=sys_role}, {createTime=2019-04-06 17:04:35.0, ENGINE=InnoDB, tableComment=角色与菜单对应关系, tableName=sys_role_menu}, {createTime=2019-04-06 17:04:36.0, ENGINE=MyISAM, tableComment=, tableName=sys_task}, {createTime=2019-04-06 17:04:36.0, ENGINE=InnoDB, tableComment=, tableName=sys_user}, {createTime=2019-04-06 17:04:37.0, ENGINE=InnoDB, tableComment=, tableName=sys_user_plus}, {createTime=2019-04-06 17:04:37.0, ENGINE=InnoDB, tableComment=用户与角色对应关系, tableName=sys_user_role}, {createTime=2019-08-06 19:42:00.0, ENGINE=InnoDB, tableComment=, tableName=vr_color_type}, {createTime=2019-08-06 19:42:01.0, ENGINE=InnoDB, tableComment=引导图, tableName=vr_guide}, {createTime=2019-08-06 19:47:13.0, ENGINE=InnoDB, tableComment=, tableName=vr_left_style}, {createTime=2019-08-11 20:07:20.0, ENGINE=InnoDB, tableComment=关联小风格的热点图表, tableName=vr_left_style_imgs}, {createTime=2019-08-06 19:42:02.0, ENGINE=InnoDB, tableComment=产品套餐激活码表, tableName=vr_product_active_code}, {createTime=2019-08-06 19:56:22.0, ENGINE=InnoDB, tableComment=, tableName=vr_product_colors}, {createTime=2019-08-11 17:21:21.0, ENGINE=InnoDB, tableComment=, tableName=vr_product_imgs}, {createTime=2019-08-06 19:42:02.0, ENGINE=InnoDB, tableComment=产品套餐基本信息表, tableName=vr_product_info}, {createTime=2019-08-06 19:42:03.0, ENGINE=InnoDB, tableComment=产品套餐中的小风格全景分类图, tableName=vr_product_left_style}, {createTime=2019-08-11 20:09:36.0, ENGINE=InnoDB, tableComment=产中选中的热点图表, tableName=vr_product_left_style_imgs}, {createTime=2019-08-06 21:27:08.0, ENGINE=InnoDB, tableComment=, tableName=vr_rome_type}, {createTime=2019-08-06 19:54:43.0, ENGINE=InnoDB, tableComment=房间类型对应的热点图表, tableName=vr_room_type_imgs}, {createTime=2019-08-06 19:42:04.0, ENGINE=InnoDB, tableComment=, tableName=vr_top_style}]
2020-03-14 19:51:27 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2020-03-14 19:51:27 -==> Parameters: 1(Long)
2020-03-14 19:51:27 -<==      Total: 70
2020-03-14 19:51:27 -请求地址 : http://localhost:8081/vr/productInfo
2020-03-14 19:51:27 -HTTP METHOD : GET
2020-03-14 19:51:27 -CLASS_METHOD : com.bootdo.vr.controller.ProductInfoController.ProductInfo
2020-03-14 19:51:27 -参数 : []
2020-03-14 19:51:27 -耗时 : 0
2020-03-14 19:51:27 -返回值 : vr/productInfo/productInfo
2020-03-14 19:51:27 -请求地址 : http://localhost:8081/vr/productInfo/list
2020-03-14 19:51:27 -HTTP METHOD : GET
2020-03-14 19:51:27 -CLASS_METHOD : com.bootdo.vr.controller.ProductInfoController.list
2020-03-14 19:51:27 -参数 : [{limit=10, offset=0, name=, status=}]
2020-03-14 19:51:27 -==>  Preparing: select `id`,`name`,`music_url`,`logo`,`create_time`,status from vr_product_info order by status desc,create_time desc limit ?, ? 
2020-03-14 19:51:27 -==> Parameters: 0(Integer), 10(Integer)
2020-03-14 19:51:27 -<==      Total: 10
2020-03-14 19:51:27 -==>  Preparing: select count(*) from vr_product_info 
2020-03-14 19:51:27 -==> Parameters: 
2020-03-14 19:51:27 -<==      Total: 1
2020-03-14 19:51:27 -耗时 : 58
2020-03-14 19:51:27 -返回值 : com.bootdo.common.utils.PageUtils@1001b522
2020-03-14 19:51:28 -请求地址 : http://localhost:8081/vr/topStyle
2020-03-14 19:51:28 -HTTP METHOD : GET
2020-03-14 19:51:28 -CLASS_METHOD : com.bootdo.vr.controller.TopStyleController.TopStyle
2020-03-14 19:51:28 -参数 : []
2020-03-14 19:51:28 -耗时 : 0
2020-03-14 19:51:28 -返回值 : vr/topStyle/topStyle
2020-03-14 19:51:28 -请求地址 : http://localhost:8081/vr/topStyle/list
2020-03-14 19:51:28 -HTTP METHOD : GET
2020-03-14 19:51:28 -CLASS_METHOD : com.bootdo.vr.controller.TopStyleController.list
2020-03-14 19:51:28 -参数 : [{limit=10, offset=0}]
2020-03-14 19:51:28 -==>  Preparing: select `top_id`,`top_name`,`top_sort`,`top_logo` from vr_top_style order by top_id desc limit ?, ? 
2020-03-14 19:51:28 -==> Parameters: 0(Integer), 10(Integer)
2020-03-14 19:51:28 -<==      Total: 9
2020-03-14 19:51:28 -==>  Preparing: select count(*) from vr_top_style 
2020-03-14 19:51:28 -==> Parameters: 
2020-03-14 19:51:28 -<==      Total: 1
2020-03-14 19:51:28 -耗时 : 59
2020-03-14 19:51:28 -返回值 : com.bootdo.common.utils.PageUtils@7d5d3138
2020-03-14 19:51:28 -请求地址 : http://localhost:8081/vr/romeType
2020-03-14 19:51:28 -HTTP METHOD : GET
2020-03-14 19:51:28 -CLASS_METHOD : com.bootdo.vr.controller.RomeTypeController.RomeType
2020-03-14 19:51:28 -参数 : [{}]
2020-03-14 19:51:28 -==>  Preparing: select `top_id`,`top_name`,`top_sort`,`top_logo` from vr_top_style order by top_id desc 
2020-03-14 19:51:28 -==> Parameters: 
2020-03-14 19:51:28 -<==      Total: 9
2020-03-14 19:51:28 -耗时 : 7
2020-03-14 19:51:28 -返回值 : vr/romeType/romeType
2020-03-14 19:51:28 -请求地址 : http://localhost:8081/vr/romeType/list
2020-03-14 19:51:28 -HTTP METHOD : GET
2020-03-14 19:51:28 -CLASS_METHOD : com.bootdo.vr.controller.RomeTypeController.list
2020-03-14 19:51:28 -参数 : [{limit=10, offset=0, topStyleId=, leftStyleId=}]
2020-03-14 19:51:28 -==>  Preparing: select a.*,b.top_name,c.left_name from vr_rome_type a left join vr_top_style b on a.top_style_id = b.top_id left join vr_left_style c on a.left_style_id=c.left_id order by rome_id desc limit ?, ? 
2020-03-14 19:51:28 -==> Parameters: 0(Integer), 10(Integer)
2020-03-14 19:51:28 -<==      Total: 10
2020-03-14 19:51:28 -==>  Preparing: select count(*) from vr_rome_type a left join vr_top_style b on a.top_style_id = b.top_id left join vr_left_style c on a.left_style_id=c.left_id 
2020-03-14 19:51:28 -==> Parameters: 
2020-03-14 19:51:28 -<==      Total: 1
2020-03-14 19:51:28 -耗时 : 49
2020-03-14 19:51:28 -返回值 : com.bootdo.common.utils.PageUtils@487043db
2020-03-14 19:51:29 -请求地址 : http://localhost:8081/vr/guide
2020-03-14 19:51:29 -HTTP METHOD : GET
2020-03-14 19:51:29 -CLASS_METHOD : com.bootdo.vr.controller.GuideController.Guide
2020-03-14 19:51:29 -参数 : []
2020-03-14 19:51:29 -耗时 : 0
2020-03-14 19:51:29 -返回值 : vr/guide/guide
2020-03-14 19:51:29 -请求地址 : http://localhost:8081/vr/guide/list
2020-03-14 19:51:29 -HTTP METHOD : GET
2020-03-14 19:51:29 -CLASS_METHOD : com.bootdo.vr.controller.GuideController.list
2020-03-14 19:51:29 -参数 : [{limit=10, offset=0}]
2020-03-14 19:51:29 -==>  Preparing: select `id`,`guide_url`,`sort` from vr_guide order by sort asc limit ?, ? 
2020-03-14 19:51:29 -==> Parameters: 0(Integer), 10(Integer)
2020-03-14 19:51:29 -<==      Total: 1
2020-03-14 19:51:29 -==>  Preparing: select count(*) from vr_guide 
2020-03-14 19:51:29 -==> Parameters: 
2020-03-14 19:51:29 -<==      Total: 1
2020-03-14 19:51:29 -耗时 : 16
2020-03-14 19:51:29 -返回值 : com.bootdo.common.utils.PageUtils@623aee13
2020-03-14 19:51:30 -请求地址 : http://localhost:8081/vr/leftStyle/topleft
2020-03-14 19:51:30 -HTTP METHOD : GET
2020-03-14 19:51:30 -CLASS_METHOD : com.bootdo.vr.controller.LeftStyleController.topleft
2020-03-14 19:51:30 -参数 : []
2020-03-14 19:51:30 -耗时 : 0
2020-03-14 19:51:30 -返回值 : vr/topleft
2020-03-14 19:51:30 -请求地址 : http://localhost:8081/vr/leftStyle/queryAllTopAndLeftStyles
2020-03-14 19:51:30 -HTTP METHOD : GET
2020-03-14 19:51:30 -CLASS_METHOD : com.bootdo.vr.controller.LeftStyleController.queryAllTopAndLeftStyles
2020-03-14 19:51:30 -参数 : []
2020-03-14 19:51:30 -==>  Preparing: select a.top_id topId,a.top_name topName, a.top_logo topLogo, b.left_id leftId,b.left_name leftName,b.left_logo leftLogo,b.cad from vr_top_style a left join vr_left_style b on a.top_id=b.top_style_id order by a.top_sort,b.left_sort 
2020-03-14 19:51:30 -==> Parameters: 
2020-03-14 19:51:30 -<==      Total: 101
2020-03-14 19:51:30 -耗时 : 62
2020-03-14 19:51:30 -返回值 : {msg=操作成功, code=0, data=[{leftStyle=[{leftId=28, leftName=轻奢1, leftLogo=/files/leftlogo/9e87681449e241849719e230256a0210.jpg}, {leftId=29, leftName=轻奢2, leftLogo=/files/leftlogo/614e1a7af2af484392700aeeef6a80a6.jpg}, {leftId=30, leftName=轻奢3, leftLogo=/files/leftlogo/ef50ad6aa1cb461886c535434505d54a.jpg}, {leftId=31, leftName=轻奢4, leftLogo=/files/leftlogo/48d8b6f6884940d5a17a87b66797b1c0.jpg}, {leftId=32, leftName=轻奢5, leftLogo=/files/leftlogo/165b1e5aa7974283b2bb0986a5f3e727.jpg}, {leftId=47, leftName=轻奢6, leftLogo=/files/leftlogo/602b5d79cab246cdbd6dc3a2d219d86e.jpg}, {leftId=72, leftName=轻奢7, leftLogo=/files/leftlogo/3081d0745af84928a3671cf8cf40e841.jpg}, {leftId=74, leftName=轻奢8, leftLogo=/files/leftlogo/0c447fa2889e41e7b2ade27ab651200c.jpg}, {leftId=77, leftName=轻奢9, leftLogo=/files/leftlogo/ebb28169ffaa47a18d27247f8d81ea4d.jpg}, {leftId=79, leftName=轻奢10, leftLogo=/files/leftlogo/bec8fcd8aa1241db8d29d9cf316c3941.jpg}, {leftId=83, leftName=轻奢11, leftLogo=/files/leftlogo/67067fd3c1264d1ca0226bec6c8aed1f.jpg}, {leftId=87, leftName=轻奢12, leftLogo=/files/leftlogo/4da4435c6d004533b6fddb7569cd942f.jpg}, {leftId=98, leftName=轻奢13, leftLogo=/files/leftlogo/5a0b5954ee2a4887856ff18fc26bc73e.jpg}, {leftId=99, leftName=轻奢14, leftLogo=/files/leftlogo/e714e9e65aab4dc5a26a6f96e7eaba8e.jpg}, {leftId=85, leftName=轻奢15, leftLogo=/files/leftlogo/a7f81e98095f4504b1401d9717fee7de.jpg}, {leftId=106, leftName=轻奢16, leftLogo=/files/leftlogo/bc09ddcfdaad4c4a9f060e8f2167ef3b.jpg}], topId=9, topName=轻奢风格, topLogo=/files/toplogo/9d7245ccf9c64616934c71e732e53aba.jpg}, {leftStyle=[{leftId=23, leftName=美式1, leftLogo=/files/leftlogo/46ea6b4798b44c8fb6ece3532e8e971a.jpg}, {leftId=102, leftName=美式2, leftLogo=/files/leftlogo/247c824eb39d46cd837b02f57eaefc16.jpg}, {leftId=25, leftName=美式3, leftLogo=/files/leftlogo/124943cf389941c0b9bf7739f9b37835.jpg}, {leftId=26, leftName=美式4, leftLogo=/files/leftlogo/6991e413735d4fda8d4db337c40fd4ff.jpg}, {leftId=27, leftName=美式5, leftLogo=/files/leftlogo/03b5b877df36486896409a5e37c7dffa.jpg}, {leftId=89, leftName=美式6, leftLogo=/files/leftlogo/f1bfaabd6b104a17a4b0d7f4328d14fe.jpg}, {leftId=90, leftName=美式7, leftLogo=/files/leftlogo/470b4f46d11f4ac0b4e905d82f976d66.jpg}, {leftId=91, leftName=美式8, leftLogo=/files/leftlogo/0d3e67f505dc4579aac7e7b179f0834e.jpg}, {leftId=24, leftName=美式9, leftLogo=/files/leftlogo/e0d50d4e8349444c8335fbad8cc117f1.jpg}, {leftId=95, leftName=美式10, leftLogo=/files/leftlogo/6dc82497453c46ba99195a168990ea92.jpg}, {leftId=105, leftName=美式11, leftLogo=/files/leftlogo/879b769ea3004dbf822980e7eb8618f1.jpg}], topId=8, topName=美式风格, topLogo=/files/toplogo/21072d7886a946a48de63257448a32ed.jpg}, {leftStyle=[{cad=, leftId=112, leftName=中式测试安全, leftLogo=/files/leftlogo/d8f5567b827048ad86a30918a62cff2b.png}, {leftId=82, leftName=中式1, leftLogo=/files/leftlogo/bbab19dbb9ef42928324e73dda4d5827.jpg}, {leftId=80, leftName=中式2, leftLogo=/files/leftlogo/aae3787f7a2446d0aea532497049afb2.jpg}, {leftId=101, leftName=中式3, leftLogo=/files/leftlogo/0f87b406a3ae4bfdab5f85f2617bf311.jpg}, {cad=, leftId=114, leftName=asdfa dfa sdf asdf , leftLogo=/files/leftlogo/31606a1cbc044bcdbf575cd88336fd5a.png}, {leftId=46, leftName=中式4, leftLogo=/files/leftlogo/4d72cfb0e7ce4529b452b4c0b0e3c0b3.jpg}, {leftId=73, leftName=中式5, leftLogo=/files/leftlogo/bca9d02510794078aafa0f8822184f12.jpg}, {leftId=44, leftName=中式6, leftLogo=/files/leftlogo/60f6af1f79dc4db7a992ed7655b39733.jpg}, {leftId=45, leftName=中式7, leftLogo=/files/leftlogo/3ea0466033aa4b639f58a3aeb5904965.jpg}, {leftId=61, leftName=中式8, leftLogo=/files/leftlogo/3d50f32a5c22447e867c543952f2209a.jpg}, {leftId=70, leftName=中式9, leftLogo=/files/leftlogo/b47975c33b7c427097cbf58744bf3251.jpg}, {leftId=75, leftName=中式10, leftLogo=/files/leftlogo/845bc6a97ba14ea5a77b4093f5f2c319.jpg}, {leftId=78, leftName=中式11, leftLogo=/files/leftlogo/9f6212b3857a48a5a6b3f8303b5648c8.jpg}, {leftId=81, leftName=中式12, leftLogo=/files/leftlogo/de50f03bd494411387a5827d5130ddba.jpg}, {cad=/files/CAD/d98e6329d9974979b2e635da9bc53690.conf, leftId=111, leftName=中式13, leftLogo=/files/leftlogo/21e2d54010524722be704cbff49437b8.jpg}], topId=11, topName=新中式, topLogo=/files/toplogo/0c0dac9bdbba4df19adee18b03500bec.jpg}, {leftStyle=[{leftId=12, leftName=地中海1, leftLogo=/files/leftlogo/18000e19f0bd4afd93ef9f095ca29178.jpg}, {leftId=76, leftName=地中海2, leftLogo=/files/leftlogo/751e3311ac534c8cb52e0fc891075067.jpg}], topId=5, topName=地中海风格, topLogo=/files/toplogo/ba0273e8a8ed490591911b44cfd891ff.jpg}, {leftStyle=[{leftId=58, leftName=极简1, leftLogo=/files/leftlogo/162a70c3fdd64536b8a72c06d76968c4.jpg}, {leftId=71, leftName=极简2, leftLogo=/files/leftlogo/fac9ab63b4554de69b5b74465b305af6.jpg}, {leftId=13, leftName=极简3, leftLogo=/files/leftlogo/593e37ae467d4f13b9825b573fab9c95.jpg}, {leftId=14, leftName=极简4, leftLogo=/files/leftlogo/1740432115e943d99c38b217d802c0d1.jpg}, {leftId=15, leftName=极简5, leftLogo=/files/leftlogo/5b33c4a55c1245c698bf25202c5b6d9b.jpg}, {leftId=16, leftName=极简6, leftLogo=/files/leftlogo/1e11d0d26fe845058881745bf32ee40e.jpg}, {leftId=17, leftName=极简7, leftLogo=/files/leftlogo/c1101f7872434d2c9955152047c71c4d.jpg}, {leftId=18, leftName=极简8, leftLogo=/files/leftlogo/6490d33d50e34f46a04dc862477ce735.jpg}, {leftId=57, leftName=极简9, leftLogo=/files/leftlogo/c7ec8e318a4a4230a0d0002b51b6f52b.jpg}, {leftId=63, leftName=极简10, leftLogo=/files/leftlogo/f9ff44c589b64e039934f8a03b4ff493.jpg}, {leftId=100, leftName=极简11, leftLogo=/files/leftlogo/56112f65aace44d5883acf1bd826ce71.jpg}, {cad=/files/CAD/79053467ae5b402ea7ab30b326d597bb.sql, leftId=107, leftName=极简12, leftLogo=/files/leftlogo/22897b8244fb445d89d90d2e4fd1b749.jpg}], topId=6, topName=极简风格, topLogo=/files/toplogo/1257760d806547daa761188e145543f0.jpg}, {leftStyle=[{leftId=19, leftName=简欧1, leftLogo=/files/leftlogo/7e435483e23c47e39890a65dc35a567b.jpg}, {leftId=20, leftName=简欧2, leftLogo=/files/leftlogo/6b5cf4a4c37d4354a623993bd2ad5f67.jpg}, {leftId=22, leftName=简欧3, leftLogo=/files/leftlogo/0379e5543959415aa949cedb4d05ef29.jpg}, {leftId=96, leftName=简欧4, leftLogo=/files/leftlogo/d4f3847344d742ffaab59ff8aba85b1e.jpg}, {leftId=97, leftName=简欧5, leftLogo=/files/leftlogo/229e78f0b42e4f609b76ca0158451cb5.jpg}], topId=7, topName=简欧风格, topLogo=/files/toplogo/7fe0a0a2378e41b1a4cb3c5d6783b5f8.jpg}, {leftStyle=[{leftId=60, leftName=北欧1, leftLogo=/files/leftlogo/92e7767f3ec74c1d911643adf553c21d.jpg}, {leftId=94, leftName=北欧2, leftLogo=/files/leftlogo/5661c9b0523e45d9b56b0e9d2d3b6fc5.jpg}, {leftId=3, leftName=北欧3, leftLogo=/files/leftlogo/5f3f9c552eeb46e5a909c26813d885ee.jpg}, {leftId=4, leftName=北欧4, leftLogo=/files/leftlogo/9e302ac293dd496e963ed80252f54142.jpg}, {leftId=5, leftName=北欧5, leftLogo=/files/leftlogo/d8e9bb72a5f14b92a6cfbae58907b51a.jpg}, {leftId=6, leftName=北欧6, leftLogo=/files/leftlogo/5cad4efa36f9469f973951d927c5985e.jpg}, {leftId=7, leftName=北欧7, leftLogo=/files/leftlogo/8fa3ee94d57b40f2a2235d04ebc5c3c3.jpg}, {leftId=8, leftName=北欧8, leftLogo=/files/leftlogo/4133f54b92e14f0683c870ef7f61e944.jpg}, {leftId=9, leftName=北欧9, leftLogo=/files/leftlogo/9a522439327649fdaa39328b7be01b89.jpg}, {leftId=10, leftName=北欧10, leftLogo=/files/leftlogo/8a3ae97c9b194312a464bbb97ffaf3ee.jpg}, {leftId=11, leftName=北欧11, leftLogo=/files/leftlogo/a246edaa814748a88f65228f7052df4e.jpg}, {leftId=59, leftName=北欧12, leftLogo=/files/leftlogo/4830614e6a4b4cfc838b945d272ef64a.jpg}, {leftId=62, leftName=北欧13, leftLogo=/files/leftlogo/c6db36ba01c14412908d37639aea38be.jpg}, {leftId=86, leftName=北欧14, leftLogo=/files/leftlogo/3b4bbcaf53974c47b0ef29e7d1c1fb6a.jpg}], topId=3, topName=北欧风格, topLogo=/files/toplogo/e372a85efea4444d93bc06650f9c48b8.jpg}, {leftStyle=[{leftId=104, leftName=现代1, leftLogo=/files/leftlogo/93cde002b7384636984bfe8f367fa2ff.jpg}, {leftId=33, leftName=现代2, leftLogo=/files/leftlogo/1eedcac413e3445cae39e59879aebba3.jpg}, {leftId=35, leftName=现代3, leftLogo=/files/leftlogo/a6124bb14f4549c9b96ff0de893d5479.jpg}, {leftId=36, leftName=现代4, leftLogo=/files/leftlogo/b6264155c52d411caab59a6ed29994f2.jpg}, {leftId=37, leftName=现代5, leftLogo=/files/leftlogo/a6019e247251416aa81a22d81d64f30d.jpg}, {leftId=38, leftName=现代6, leftLogo=/files/leftlogo/e0f1fc5db44c4120b00ce0aaa918d677.jpg}, {leftId=39, leftName=现代7, leftLogo=/files/leftlogo/243f3d85314b4c9c9da7f08dcf7d6313.jpg}, {leftId=40, leftName=现代8, leftLogo=/files/leftlogo/eed73a384e7f40f3bc17d4c73e726a56.jpg}, {leftId=41, leftName=现代9, leftLogo=/files/leftlogo/6046dc90b00f47d49ac2d981edbc445f.jpg}, {leftId=42, leftName=现代10, leftLogo=/files/leftlogo/70fb22579cdd40958a4755c7d3a651a4.jpg}, {leftId=43, leftName=现代11, leftLogo=/files/leftlogo/0fa1f72606a4480c8d5f8897833c82bc.jpg}, {leftId=84, leftName=现代12, leftLogo=/files/leftlogo/7eeb2792d8ac4b50a18673c1e75bf252.jpg}, {leftId=48, leftName=奥梦客厅, leftLogo=/files/leftlogo/bdb0cb4c2f1744748feadbbbd5f76061.jpg}, {leftId=49, leftName=奥梦餐厅, leftLogo=/files/leftlogo/dcdc36ab95ca42089d2181b7755df6c9.jpg}, {leftId=50, leftName=奥梦厨房, leftLogo=/files/leftlogo/4739b9693cc548069765f094defd72ab.jpg}, {leftId=51, leftName=奥梦卧室, leftLogo=/files/leftlogo/7efa5c49ab72431da28a3b94e44069ce.jpg}, {leftId=52, leftName=奥梦鞋柜, leftLogo=/files/leftlogo/126f70c05fc14b9fb68c6e2e09900fc9.jpg}, {leftId=53, leftName=奥梦阳台, leftLogo=/files/leftlogo/07328ed320fe4b64aedef6b0bd9db15d.jpg}], topId=10, topName=现代风格, topLogo=/files/toplogo/9736f1595cdb454884308c8f468e8cec.jpg}, {leftStyle=[{leftId=64, leftName=轻奢系列, leftLogo=/files/leftlogo/b60b108ba0204beca5999f1189f1f208.jpg}, {leftId=67, leftName=新中式风, leftLogo=/files/leftlogo/eb8ce2bb859141f48822db48a554fd30.jpg}, {leftId=65, leftName=现代风格, leftLogo=/files/leftlogo/6d5a7e5bb3414912847aee68358c9577.jpg}, {leftId=68, leftName=现代风格2, leftLogo=/files/leftlogo/5f49909b024e4bf6a46030dc37ebbb93.jpg}, {leftId=66, leftName=儿童房, leftLogo=/files/leftlogo/0d4f860eb91c4b38a8f6ec6002b157fa.jpg}, {leftId=56, leftName=工业风, leftLogo=/files/leftlogo/4768d0370dce424a8ef0ee358bf31848.jpg}, {leftId=55, leftName=百叶门, leftLogo=/files/leftlogo/0bde9c6deb1c4123ae1848ceb79f8a64.jpg}, {cad=, leftId=54, leftName=高光板, leftLogo=/files/leftlogo/38895b7a54ee460d90e759a5b0b33ba5.jpg}], topId=12, topName=移门系列, topLogo=/files/toplogo/fa0e0617b39e403aa1f367345658c47e.jpg}]}
