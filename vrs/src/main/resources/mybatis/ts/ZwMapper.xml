<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.ts.dao.ZwDao">

	<select id="get" resultType="com.bootdo.ts.domain.ZwDO">
		select `id`,`code`,`status`,`cid` from t_zw where id = #{value}
	</select>

	<select id="list" resultType="com.bootdo.ts.domain.ZwDO">
		select z.*,uc.id,IFNULL(uc.id,0) as 'checked',uc.uname as 'uname' from t_zw z
		left join t_u_cids uc
		on z.id=uc.zid
		<where>
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="code != null and code != ''"> and code = #{code} </if>
		  		  <if test="status != null and status != ''"> and status = #{status} </if>
		  		  <if test="cid != null and cid != ''"> and z.cid = #{cid} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by z.id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from t_zw
		 <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="code != null and code != ''"> and code = #{code} </if>
		  		  <if test="status != null and status != ''"> and status = #{status} </if>
		  		  <if test="cid != null and cid != ''"> and cid = #{cid} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.ts.domain.ZwDO">
		insert into t_zw
		(
			`id`, 
			`code`, 
			`status`, 
			`cid`
		)
		values
		(
			#{id}, 
			#{code}, 
			#{status}, 
			#{cid}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.ts.domain.ZwDO">
		update t_zw 
		<set>
			<if test="code != null">`code` = #{code}, </if>
			<if test="status != null">`status` = #{status}, </if>
			<if test="cid != null">`cid` = #{cid}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="remove">
		delete from t_zw where id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from t_zw where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>