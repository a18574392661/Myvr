<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.vr.dao.ProductLeftStyleImgsDao">

<resultMap type="java.util.Map" id="ProductLeftRdtResult">
        <result property="id"    column="topId"    />
        <result property="text"    column="topName"    />
        <result property="type"    column="topType"    />
        <collection  property="nodes" ofType="java.util.Map" javaType="java.util.List">
       		<id column="leftId" property="id"/>
	 		<result column="leftName" property="text"/>
	 		<result property="type"    column="leftType"    />
	 		<collection  property="nodes" ofType="java.util.Map" javaType="java.util.List">
		 		<id column="imgId" property="id"/>
		 		<result column="imgName" property="text"/>
		 		<result property="type"    column="imgType"    />
			</collection>
		</collection>
    </resultMap>

	<select id="queryForLeftRdtTree" resultMap="ProductLeftRdtResult">
		select 
		a.top_id topId,a.top_name topName,
		b.left_id leftId,b.left_name leftName,
		d.id imgId,concat('&lt;img src=', d.img, ' style=max-height:40px &gt;') imgName,
		1 as topType, 2 as leftType, 4 as imgType
		from vr_top_style a 
		left join vr_left_style b on a.top_id=b.top_style_id
		left join vr_left_style_imgs d on d.left_id=b.left_id
		where  d.id is not null and b.left_id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
		order by a.top_sort asc,b.left_sort asc
	</select>

	<insert id="saveBatch" parameterType="java.util.Map">
		insert into vr_product_left_style_imgs (`product_id`, `left_style_imgs_id`)
		values
		<foreach item="imgId" collection="imgIds" open="" separator="," close="">
			(#{productId}, #{imgId})
		</foreach>
	</insert>
	
	<delete id="removeByProductId">
		delete from vr_product_left_style_imgs where product_id = #{value}
	</delete>

	<select id="get" resultType="com.bootdo.vr.domain.ProductLeftStyleImgsDO">
		select `id`,`product_id`,`left_style_imgs_id` from vr_product_left_style_imgs where id = #{value}
	</select>

	<select id="list" resultType="com.bootdo.vr.domain.ProductLeftStyleImgsDO">
		select `id`,`product_id`,`left_style_imgs_id` from vr_product_left_style_imgs
        <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="productId != null and productId != ''"> and product_id = #{productId} </if>
		  		  <if test="leftStyleImgsId != null and leftStyleImgsId != ''"> and left_style_imgs_id = #{leftStyleImgsId} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from vr_product_left_style_imgs
		 <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="productId != null and productId != ''"> and product_id = #{productId} </if>
		  		  <if test="leftStyleImgsId != null and leftStyleImgsId != ''"> and left_style_imgs_id = #{leftStyleImgsId} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.vr.domain.ProductLeftStyleImgsDO">
		insert into vr_product_left_style_imgs
		(
			`id`, 
			`product_id`, 
			`left_style_imgs_id`
		)
		values
		(
			#{id}, 
			#{productId}, 
			#{leftStyleImgsId}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.vr.domain.ProductLeftStyleImgsDO">
		update vr_product_left_style_imgs 
		<set>
			<if test="productId != null">`product_id` = #{productId}, </if>
			<if test="leftStyleImgsId != null">`left_style_imgs_id` = #{leftStyleImgsId}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="remove">
		delete from vr_product_left_style_imgs where id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from vr_product_left_style_imgs where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>